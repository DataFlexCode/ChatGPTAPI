Compiling Program: C:\Projects\ChatGPTAPI\AppSrc\ChatGPT.src
Memory Available: 12768272384
1>Use DFAllEnt.pkg
Using pre-compiled package DFALLENT.PKG
Including file: dfallent.x64.pkd    (C:\Program Files\DataFlex 23.0\Pkg\dfallent.x64.pkd)
73406>Use cCJStandardCommandBarSystem.pkg
Including file: cCJStandardCommandBarSystem.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJStandardCommandBarSystem.pkg)
73406>>>// these are all the packages used in a standard MDI menubar/toolbar system
73406>>>
73406>>>Use cCJCommandBarSystem.pkg
73406>>>Use cCJStandardMenuItemClasses.pkg
Including file: cCJStandardMenuItemClasses.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJStandardMenuItemClasses.pkg)
73406>>>>>Use Dfpanel.pkg
73406>>>>>Use cCJCommandBarSystem.pkg
73406>>>>>Use LanguageText.pkg
73406>>>>>
73406>>>>>
73406>>>>>Class cCJUndoMenuItem is a cCJMenuItem
73407>>>>>    
73407>>>>>    Procedure Construct_Object
73409>>>>>        Forward Send Construct_Object
73411>>>>>        Set psCaption   to C_$CaptionUndo
73412>>>>>        Set psToolTip to C_$ToolTipUndo
73413>>>>>        Set psDescription to C_$DescUndo
73414>>>>>        Set psImage to "ActionUndo.ico"
73415>>>>>        Set pbActiveUpdate to True
73416>>>>>        Set psCategory to C_$CategoryEdit
73417>>>>>        Set psShortcut to C_$Key_Ctrl_Z
73418>>>>>    End_Procedure
73419>>>>>    
73419>>>>>    Procedure OnExecute Variant vCommandBarControl
73421>>>>>        Send Undo of (focus(Self))
73422>>>>>    End_Procedure
73423>>>>>    
73423>>>>>    Function IsEnabled Returns Boolean
73425>>>>>        Boolean bEnabled
73425>>>>>        Get CanUndo of (Focus(Self)) to bEnabled
73426>>>>>        Function_Return bEnabled
73427>>>>>    End_Function
73428>>>>>    
73428>>>>>End_Class
73429>>>>>
73429>>>>>
73429>>>>>Class cCJDeleteEditMenuItem is a cCJMenuItem
73430>>>>>    
73430>>>>>    Procedure Construct_Object
73432>>>>>        Forward Send Construct_Object
73434>>>>>        Set psCaption   to C_$CaptionDelete
73435>>>>>        Set psToolTip to C_$ToolTipDelete
73436>>>>>        Set psDescription to C_$DescDelete
73437>>>>>        Set psImage to "actionDelete.ico"
73438>>>>>        Set psShortcut to C_$Key_Delete
73439>>>>>        Set pbActiveUpdate to True
73440>>>>>        Set psCategory to C_$CategoryEdit
73441>>>>>    End_Procedure
73442>>>>>    
73442>>>>>    
73442>>>>>    Procedure OnExecute Variant vCommandBarControl
73444>>>>>        Send Delete of (focus(Self))
73445>>>>>    End_Procedure
73446>>>>>    
73446>>>>>    Function IsEnabled Returns Boolean
73448>>>>>        Boolean bEnabled
73448>>>>>        Get CanDelete of (Focus(Self)) to bEnabled
73449>>>>>        Function_Return bEnabled
73450>>>>>    End_Function
73451>>>>>    
73451>>>>>End_Class
73452>>>>>
73452>>>>>
73452>>>>>Class cCJCutMenuItem is a cCJMenuItem
73453>>>>>    
73453>>>>>    Procedure Construct_Object
73455>>>>>        Forward Send Construct_Object
73457>>>>>        Set psCaption   to C_$CaptionCut
73458>>>>>        Set psToolTip to C_$TooltipCut
73459>>>>>        Set psDescription to C_$DescCut
73460>>>>>        Set psImage to "actionCut.ico"
73461>>>>>        Set psShortcut to C_$Key_Ctrl_X
73462>>>>>        Set pbActiveUpdate to True
73463>>>>>        Set psCategory to C_$CategoryEdit
73464>>>>>    End_Procedure
73465>>>>>    
73465>>>>>    
73465>>>>>    Procedure OnExecute Variant vCommandBarControl
73467>>>>>        Send Cut of (focus(Self))
73468>>>>>    End_Procedure
73469>>>>>    
73469>>>>>    Function IsEnabled Returns Boolean
73471>>>>>        Boolean bEnabled
73471>>>>>        Get CanCut of (Focus(Self)) to bEnabled
73472>>>>>        Function_Return bEnabled
73473>>>>>    End_Function
73474>>>>>    
73474>>>>>End_Class
73475>>>>>
73475>>>>>
73475>>>>>Class cCJCopyMenuItem is a cCJMenuItem
73476>>>>>    
73476>>>>>    Procedure Construct_Object
73478>>>>>        Forward Send Construct_Object
73480>>>>>        Set psCaption   to C_$CaptionCopy
73481>>>>>        Set psToolTip to C_$ToolTipCopy
73482>>>>>        Set psDescription to C_$DescCopy
73483>>>>>        Set psImage to "actionCopy.ico"
73484>>>>>        Set psShortcut to C_$Key_Ctrl_C
73485>>>>>        Set pbActiveUpdate to True
73486>>>>>        Set psCategory to C_$CategoryEdit
73487>>>>>    End_Procedure
73488>>>>>    
73488>>>>>    
73488>>>>>    Procedure OnExecute Variant vCommandBarControl
73490>>>>>        Send Copy of (focus(Self))
73491>>>>>    End_Procedure
73492>>>>>    
73492>>>>>    Function IsEnabled Returns Boolean
73494>>>>>        Boolean bEnabled
73494>>>>>        Get CanCopy of (Focus(Self)) to bEnabled
73495>>>>>        Function_Return bEnabled
73496>>>>>    End_Function
73497>>>>>    
73497>>>>>End_Class
73498>>>>>
73498>>>>>
73498>>>>>Class cCJPasteMenuItem is a cCJMenuItem
73499>>>>>    
73499>>>>>    Procedure Construct_Object
73501>>>>>        Forward Send Construct_Object
73503>>>>>        Set psCaption   to C_$CaptionPaste
73504>>>>>        Set psToolTip to C_$ToolTipPaste
73505>>>>>        Set psDescription to C_$DescPaste
73506>>>>>        Set psImage to "actionPaste.ico"
73507>>>>>        Set pbActiveUpdate to True
73508>>>>>        Set psShortcut to C_$Key_Ctrl_V
73509>>>>>        Set psCategory to C_$CategoryEdit
73510>>>>>    End_Procedure
73511>>>>>    
73511>>>>>    
73511>>>>>    Procedure OnExecute Variant vCommandBarControl
73513>>>>>        Send Paste of (focus(Self))
73514>>>>>    End_Procedure
73515>>>>>    
73515>>>>>    Function IsEnabled Returns Boolean
73517>>>>>        Boolean bEnabled
73517>>>>>        Get CanPaste of (Focus(Self)) to bEnabled
73518>>>>>        Function_Return bEnabled
73519>>>>>    End_Function
73520>>>>>    
73520>>>>>End_Class
73521>>>>>
73521>>>>>Class cCJSelectAllMenuItem is a cCJMenuItem
73522>>>>>    
73522>>>>>    Procedure Construct_Object
73524>>>>>        Forward Send Construct_Object
73526>>>>>        Set psCaption   to C_$CaptionSelectAll
73527>>>>>        Set psToolTip to C_$ToolTipSelectAll
73528>>>>>        Set psDescription to C_$DescSelectAll
73529>>>>>        Set pbActiveUpdate to True
73530>>>>>        Set psShortcut to C_$Key_Ctrl_A
73531>>>>>        Set psCategory to C_$CategoryEdit
73532>>>>>    End_Procedure
73533>>>>>    
73533>>>>>    
73533>>>>>    Procedure OnExecute Variant vCommandBarControl
73535>>>>>        Send Select_All of (focus(Self))
73536>>>>>    End_Procedure
73537>>>>>    
73537>>>>>    Function IsEnabled Returns Boolean
73539>>>>>        Boolean bEnabled
73539>>>>>        Get CanSelect of (Focus(Self)) to bEnabled
73540>>>>>        Function_Return bEnabled
73541>>>>>    End_Function
73542>>>>>    
73542>>>>>End_Class
73543>>>>>
73543>>>>>
73543>>>>>Class cCJExitMenuItem is a cCJMenuItem
73544>>>>>    
73544>>>>>    Procedure Construct_Object
73546>>>>>        Forward Send Construct_Object
73548>>>>>        Set psCaption to C_$CaptionExit
73549>>>>>        Set psToolTip to C_$ToolTipExit
73550>>>>>        Set psDescription to C_$ToolTipExit
73551>>>>>        Set psShortcut to C_$Key_Alt_F4
73552>>>>>        Set psCategory to C_$CategoryFile
73553>>>>>    End_Procedure
73554>>>>>    
73554>>>>>    Procedure OnExecute Variant vCommandBarControl
73556>>>>>        Send Exit_Application of Desktop
73557>>>>>    End_Procedure
73558>>>>>    
73558>>>>>End_Class
73559>>>>>
73559>>>>>Class cCJHelpMenuItem is a cCJMenuItem
73560>>>>>    
73560>>>>>    Procedure Construct_Object
73562>>>>>        Forward Send Construct_Object
73564>>>>>        Set psCaption to C_$CaptionHelp
73565>>>>>        Set psDescription to C_$ToolTipHelp
73566>>>>>        Set psToolTip to C_$DescHelp
73567>>>>>        Set psImage to "ActionHelp.ico"
73568>>>>>        Set psShortcut to "F1"
73569>>>>>        Set psCategory to C_$CategoryHelp
73570>>>>>    End_Procedure
73571>>>>>    
73571>>>>>    Procedure OnExecute Variant vCommandBarControl
73573>>>>>        Send Help of (Focus(Self))
73574>>>>>    End_Procedure
73575>>>>>    
73575>>>>>End_Class
73576>>>>>
73576>>>>>Class cCJStatusbarMenuItem is a cCJMenuItem
73577>>>>>    
73577>>>>>    Procedure Construct_Object
73579>>>>>        Forward Send Construct_Object
73581>>>>>        Set psCaption to C_$CaptionAddStatusbar
73582>>>>>        Set psToolTip to C_$ToolTipAddStatusbar
73583>>>>>        Set psDescription to  C_$DescAddStatusbar
73584>>>>>        Set psCategory to C_$CategoryWindow
73585>>>>>    End_Procedure
73586>>>>>    
73586>>>>>    Procedure OnExecute Variant vCommandBarControl
73588>>>>>        Handle hoCommandBars hoClientArea
73588>>>>>        Get CommandBarSystemObject to hoCommandBars
73589>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73590>>>>>        If hoClientArea Begin
73592>>>>>            // the clientarea's parent panel has message
73592>>>>>            Send Toggle_StatusBar of (Parent(hoClientArea))
73593>>>>>        End
73593>>>>>>
73593>>>>>    End_Procedure
73594>>>>>    
73594>>>>>    Function IsChecked Returns Boolean
73596>>>>>        Boolean bOn
73596>>>>>        Handle hoCommandBars hoClientArea
73596>>>>>        Get CommandBarSystemObject to hoCommandBars
73597>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73598>>>>>        If hoClientArea Begin
73600>>>>>            // the clientarea's parent panel has message
73600>>>>>            Get StatusBar_State of (Parent(hoClientArea)) to bOn
73601>>>>>        End
73601>>>>>>
73601>>>>>        Function_Return bOn
73602>>>>>    End_Function
73603>>>>>End_Class
73604>>>>>
73604>>>>>Class cCJAutoArrangeIconsMenuItem is a cCJMenuItem
73605>>>>>    
73605>>>>>    Procedure Construct_Object
73607>>>>>        Forward Send Construct_Object
73609>>>>>        Set psCaption to C_$CaptionAutoArrangeIcons
73610>>>>>        Set psToolTip to C_$ToolTipAutoArrangeIcons
73611>>>>>        Set psDescription to C_$DescAutoArrangeIcons
73612>>>>>        Set psCategory to C_$CategoryWindow
73613>>>>>    End_Procedure
73614>>>>>    
73614>>>>>    Procedure OnExecute Variant vCommandBarControl
73616>>>>>        Handle hoCommandBars hoClientArea
73616>>>>>        Get CommandBarSystemObject to hoCommandBars
73617>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73618>>>>>        If hoClientArea Begin
73620>>>>>            // the clientarea's parent panel has message
73620>>>>>            Send Toggle_Auto_Arrange_Icons of (Parent(hoClientArea))
73621>>>>>        End
73621>>>>>>
73621>>>>>    End_Procedure
73622>>>>>    
73622>>>>>    Function IsChecked Returns Boolean
73624>>>>>        Boolean bOn
73624>>>>>        Handle hoCommandBars hoClientArea
73624>>>>>        Get CommandBarSystemObject to hoCommandBars
73625>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73626>>>>>        If hoClientArea Begin
73628>>>>>            // the clientarea's parent panel has message
73628>>>>>            Get Auto_Arrange_Icons_State of (Parent(hoClientArea)) to bOn
73629>>>>>        End
73629>>>>>>
73629>>>>>        Function_Return bOn
73630>>>>>    End_Function
73631>>>>>End_Class
73632>>>>>
73632>>>>>Class cCJRestoreMenusMenuItem is a cCJMenuItem
73633>>>>>    
73633>>>>>    Procedure Construct_Object
73635>>>>>        Forward Send Construct_Object
73637>>>>>        Set psCaption to C_$CaptionRestoreMenus
73638>>>>>        Set psToolTip to C_$ToolTipRestoreMenus
73639>>>>>        Set psDescription to C_$DescRestoreMenus
73640>>>>>        Set psCategory to C_$CategoryWindow
73641>>>>>    End_Procedure
73642>>>>>    
73642>>>>>    Procedure OnExecute Variant vCommandBarControl
73644>>>>>        Handle hoCommandBars
73644>>>>>        Get CommandBarSystemObject to hoCommandBars
73645>>>>>        Send RestoreLayout of hoCommandBars
73646>>>>>    End_Procedure
73647>>>>>    
73647>>>>>End_Class
73648>>>>>
73648>>>>>Class cCJCascadeMenuItem is a cCJMenuItem
73649>>>>>    
73649>>>>>    Procedure Construct_Object
73651>>>>>        Forward Send Construct_Object
73653>>>>>        Set psCaption to C_$CaptionCascade
73654>>>>>        Set psToolTip to C_$ToolTipCascade
73655>>>>>        Set psDescription to  C_$DescCascade
73656>>>>>        Set psImage to "ActionCascade.ico"
73657>>>>>        Set psCategory to C_$CategoryWindow
73658>>>>>    End_Procedure
73659>>>>>    
73659>>>>>    Procedure OnExecute Variant vCommandBarControl
73661>>>>>        Handle hoCommandBars hoClientArea
73661>>>>>        Get CommandBarSystemObject to hoCommandBars
73662>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73663>>>>>        If hoClientArea Begin
73665>>>>>            Send Cascade_Windows of hoClientArea
73666>>>>>        End
73666>>>>>>
73666>>>>>    End_Procedure
73667>>>>>End_Class
73668>>>>>
73668>>>>>Class cCJTileHorizontally is a cCJMenuItem
73669>>>>>    
73669>>>>>    Procedure Construct_Object
73671>>>>>        Forward Send Construct_Object
73673>>>>>        Set psCaption to C_$CaptionTileHorizontally
73674>>>>>        Set psToolTip to C_$ToolTipTileHorizontally
73675>>>>>        Set psDescription to  C_$DescTileHorizontally
73676>>>>>        Set psImage to "ActionTileHorizontally.ico"
73677>>>>>        Set psCategory to C_$CategoryWindow
73678>>>>>    End_Procedure
73679>>>>>    
73679>>>>>    Procedure OnExecute Variant vCommandBarControl
73681>>>>>        Handle hoCommandBars hoClientArea
73681>>>>>        Get CommandBarSystemObject to hoCommandBars
73682>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73683>>>>>        If hoClientArea Begin
73685>>>>>            Send Tile_Windows_Horizontal of hoClientArea
73686>>>>>        End
73686>>>>>>
73686>>>>>    End_Procedure
73687>>>>>End_Class
73688>>>>>
73688>>>>>Class cCJTileVertically is a cCJMenuItem
73689>>>>>    
73689>>>>>    Procedure Construct_Object
73691>>>>>        Forward Send Construct_Object
73693>>>>>        Set psCaption to C_$CaptionTileVertically
73694>>>>>        Set psToolTip to C_$ToolTipTileVertically
73695>>>>>        Set psDescription to  C_$DescTileVertically
73696>>>>>        Set psImage to "ActionTileVertically.ico"
73697>>>>>        Set psCategory to C_$CategoryWindow
73698>>>>>    End_Procedure
73699>>>>>    
73699>>>>>    Procedure OnExecute Variant vCommandBarControl
73701>>>>>        Handle hoCommandBars hoClientArea
73701>>>>>        Get CommandBarSystemObject to hoCommandBars
73702>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73703>>>>>        If hoClientArea Begin
73705>>>>>            Send Tile_Windows_Vertical of hoClientArea
73706>>>>>        End
73706>>>>>>
73706>>>>>    End_Procedure
73707>>>>>End_Class
73708>>>>>
73708>>>>>Class cCJMinimizeWindowsMenuItem is a cCJMenuItem
73709>>>>>    
73709>>>>>    Procedure Construct_Object
73711>>>>>        Forward Send Construct_Object
73713>>>>>        Set psCaption to C_$CaptionMinimizeWindows
73714>>>>>        Set psToolTip to C_$ToolTipMinimizeWindows
73715>>>>>        Set psDescription to  C_$DescMinimizeWindows
73716>>>>>        Set psCategory to C_$CategoryWindow
73717>>>>>    End_Procedure
73718>>>>>    
73718>>>>>    Procedure OnExecute Variant vCommandBarControl
73720>>>>>        Handle hoCommandBars hoClientArea
73720>>>>>        Get CommandBarSystemObject to hoCommandBars
73721>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73722>>>>>        If hoClientArea Begin
73724>>>>>            // the clientarea's parent panel has message
73724>>>>>            Send Minimize_all_Windows of (Parent(hoClientArea))
73725>>>>>        End
73725>>>>>>
73725>>>>>    End_Procedure
73726>>>>>End_Class
73727>>>>>
73727>>>>>
73727>>>>>Class cCJRestoreWindowsMenuItem is a cCJMenuItem
73728>>>>>    
73728>>>>>    Procedure Construct_Object
73730>>>>>        Forward Send Construct_Object
73732>>>>>        Set psCaption to C_$CaptionRestoreWindows
73733>>>>>        Set psToolTip to C_$ToolTipRestoreWindows
73734>>>>>        Set psDescription to  C_$DescRestoreWindows
73735>>>>>        Set psCategory to C_$CategoryWindow
73736>>>>>    End_Procedure
73737>>>>>    
73737>>>>>    Procedure OnExecute Variant vCommandBarControl
73739>>>>>        Handle hoCommandBars hoClientArea
73739>>>>>        Get CommandBarSystemObject to hoCommandBars
73740>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73741>>>>>        If hoClientArea Begin
73743>>>>>            // the clientarea's parent panel has message
73743>>>>>            Send Restore_all_Windows of (Parent(hoClientArea))
73744>>>>>        End
73744>>>>>>
73744>>>>>    End_Procedure
73745>>>>>End_Class
73746>>>>>
73746>>>>>Class cCJArrangeIconsMenuItem is a cCJMenuItem
73747>>>>>    
73747>>>>>    Procedure Construct_Object
73749>>>>>        Forward Send Construct_Object
73751>>>>>        Set psCaption to C_$CaptionArrangeIcons
73752>>>>>        Set psToolTip to C_$ToolTipArrangeIcons
73753>>>>>        Set psDescription to  C_$DescArrangeIcons
73754>>>>>        Set psCategory to C_$CategoryWindow
73755>>>>>    End_Procedure
73756>>>>>    
73756>>>>>    Procedure OnExecute Variant vCommandBarControl
73758>>>>>        Handle hoCommandBars hoClientArea
73758>>>>>        Get CommandBarSystemObject to hoCommandBars
73759>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73760>>>>>        If hoClientArea Begin
73762>>>>>            Send Arrange_Icons of hoClientArea
73763>>>>>        End
73763>>>>>>
73763>>>>>    End_Procedure
73764>>>>>    
73764>>>>>End_Class
73765>>>Use cCJAboutMenuItem.pkg
Including file: cCJAboutMenuItem.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJAboutMenuItem.pkg)
73765>>>>>Use cCJCommandBarSystem.pkg
73765>>>>>Use LanguageText.pkg
73765>>>>>
73765>>>>>// It is expected that if you use this class that you provide an about object that is
73765>>>>>// activated via activate_about such as DfAbout.pkg. We don't use this for you automatically
73765>>>>>// because you may wish to create your own custom about package.
73765>>>>>
73765>>>>>Class cCJAboutMenuItem is a cCJMenuItem    
73766>>>>>
73766>>>>>    Procedure Construct_Object
73768>>>>>        Forward Send Construct_Object
73770>>>>>        Set psCaption to C_$CaptionAbout
73771>>>>>        Set psDescription to C_$ToolTipAbout
73772>>>>>        Set psToolTip to C_$DescAbout
73773>>>>>        Set psImage to "ActionAbout.ico"
73774>>>>>        Set psCategory to C_$CategoryHelp
73775>>>>>    End_Procedure
73776>>>>>    
73776>>>>>    Procedure OnExecute Variant vCommandBarControl
73778>>>>>        Handle hoCommandBars hoClientArea
73778>>>>>        Get CommandBarSystemObject to hoCommandBars
73779>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73780>>>>>        If hoClientArea Begin
73782>>>>>            Send Activate_About of hoClientArea
73783>>>>>        End
73783>>>>>>
73783>>>>>    End_Procedure
73784>>>>>
73784>>>>>End_Class
73785>>>>>
73785>>>>>
73785>>>Use cCJDeoMenuItemClasses.pkg
73785>>>Use cCJMDIWindowsMenuItem.pkg
Including file: cCJMDIWindowsMenuItem.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJMDIWindowsMenuItem.pkg)
73785>>>>>Use cCJCommandBarSystem.pkg
73785>>>>>
73785>>>>>Register_Function Client_ID Returns Integer
73785>>>>>
73785>>>>>// only used by cCJMDIWIndowsMenuItem
73785>>>>>Class cCJMDIWindowItem is a cCJMenuItem
73786>>>>>    
73786>>>>>    Procedure Construct_Object
73788>>>>>        Forward Send Construct_Object
73790>>>>>        Property Handle phWindow 0 // object id of view
73791>>>>>        Set pbControlFlagNoMovable to True
73792>>>>>        Set pbActiveUpdate to True
73793>>>>>    End_Procedure
73794>>>>>    
73794>>>>>    Procedure OnExecute Variant vCommandBarControl
73796>>>>>        Handle hWindow
73796>>>>>        Get phWindow to hWindow
73797>>>>>        Send Activate_View of hWindow
73798>>>>>    End_Procedure
73799>>>>>    
73799>>>>>End_Class
73800>>>>>
73800>>>>>
73800>>>>>Class cCJMDIWindowsMenuItem is a cCJMenuItem
73801>>>>>    
73801>>>>>    Procedure Construct_Object
73803>>>>>        Forward Send Construct_Object
73805>>>>>        Property Handle[] phArrayOfWindows
73806>>>>>        Set peControlType to xtpControlPopup
73807>>>>>        Set psCategory to C_$CategoryWindow
73808>>>>>    End_Procedure
73809>>>>>    
73809>>>>>    // This adds MDI windows to the existing menu items.
73809>>>>>    // This removes any existing windows menus and always adds a new set to the end
73809>>>>>    
73809>>>>>    Procedure OnPopupInit Variant vCommandBarControl Handle hCommandBarControls
73811>>>>>        Handle  hClientArea hView
73811>>>>>        String  sLabel
73811>>>>>        Integer i iWindows
73811>>>>>        Handle[] hArrayOfWindows
73812>>>>>        Variant vItem
73812>>>>>        
73812>>>>>        // delete all windows actions and menu items. Assume we have an array of DF action objects for the windows
73812>>>>>        // also assume that destroying an action removes all menu instances of that action
73812>>>>>        Get phArrayOfWindows to hArrayOfWindows
73813>>>>>        Move (SizeOfArray(hArrayOfWindows)) to iWindows
73814>>>>>        For i from 0 to (iWindows-1)
73820>>>>>>
73820>>>>>            Send Destroy of hArrayOfWindows[i] // assume this removes all menu items of this action
73821>>>>>        Loop
73822>>>>>>
73822>>>>>        Move (ResizeArray(hArrayOfWindows,0)) to hArrayOfWindows
73823>>>>>        
73823>>>>>        // Add all views to this menu. Create the action and add the item
73823>>>>>        Move 0 to i
73824>>>>>        Get Client_Id to hClientArea // object id of client area
73825>>>>>        If (hClientArea > 0) Begin
73827>>>>>            Get Next_Mdi_Dialog of hClientArea True to hView // find first view
73828>>>>>            While (hView <> 0)
73832>>>>>                If (Active_State(hView)) Begin
73834>>>>>                    // create the action
73834>>>>>                    Get Create U_cCJMDIWindowItem to hArrayOfWindows[i]
73835>>>>>                    Get Label of hView to sLabel // caption bar (name) of view
73836>>>>>                    Set psCaption of hArrayOfWindows[i] to sLabel
73837>>>>>                    Set psDescription of hArrayOfWindows[i] to ("Make this view (" - trim(sLabel) - ") the active window.")
73838>>>>>                    If (current_scope(desktop)=hView and View_mode(hView)<>VIEWMODE_ICONIZE) Begin
73840>>>>>                        Set pbChecked of hArrayOfWindows[i] to True
73841>>>>>                    End
73841>>>>>>
73841>>>>>                    Set phWindow of hArrayOfWindows[i] to hView // used by custom OnExecute
73842>>>>>                    If (i=0) Begin
73844>>>>>                        Set pbControlBeginGroup of hArrayOfWindows[i] to True
73845>>>>>                    End
73845>>>>>>
73845>>>>>                    // Create a menu item for this action
73845>>>>>                    Get AddDynamicControl of hArrayOfWindows[i] hCommandBarControls to vItem
73846>>>>>                    Increment i
73847>>>>>                End
73847>>>>>>
73847>>>>>                Get Next_Mdi_Dialog of hClientArea False to hView // find next
73848>>>>>            Loop
73849>>>>>>
73849>>>>>        End
73849>>>>>>
73849>>>>>        
73849>>>>>        Set phArrayOfWindows to hArrayOfWindows
73850>>>>>        
73850>>>>>    End_Procedure
73851>>>>>    
73851>>>>>End_Class
73852>Use Cursor.pkg
73852>
73852>Object oApplication is a cApplication
73854>End_Object
73855>
73855>Object oToolTipController is a cToolTipController
73857>    Move Self to ghoToolTipController
73858>End_Object
73859>
73859>Object oCursor is a CursorShape
73861>End_Object
73862>
73862>Use oEditContextMenu.pkg
Including file: oEditContextMenu.pkg    (C:\Program Files\DataFlex 23.0\Pkg\oEditContextMenu.pkg)
73862>>>Use cCJStandardMenuItemClasses.pkg
73862>>>
73862>>>Object oEditContextMenu is a cCJContextMenu
73864>>>    
73864>>>    Move Self to Default_Form_Floating_Menu_ID
73865>>>    
73865>>>    Object oUndoMenuItem is a cCJUndoMenuItem
73867>>>    End_Object
73868>>>    
73868>>>    Object oCutMenuItem is a cCJCutMenuItem
73870>>>        Set pbControlBeginGroup to True
73871>>>    End_Object
73872>>>    
73872>>>    Object oCopyMenuItem is a cCJCopyMenuItem
73874>>>    End_Object
73875>>>
73875>>>    Object oPasteMenuItem is a cCJPasteMenuItem
73877>>>    End_Object
73878>>>
73878>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
73880>>>    End_Object
73881>>>
73881>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
73883>>>        Set pbControlBeginGroup to True
73884>>>    End_Object
73885>>>
73885>>>End_Object
73886>>>
73886>Use oDEOEditContextMenu17.pkg
Including file: oDEOEditContextMenu17.pkg    (C:\Program Files\DataFlex 23.0\Pkg\oDEOEditContextMenu17.pkg)
73886>>>Use Windows.pkg
73886>>>Use cCJStandardMenuItemClasses.pkg
73886>>>Use cCJDeoMenuItemClasses.pkg
73886>>>
73886>>>
73886>>>Object oDEOEditContextMenu17 is a cCJContextMenu
73888>>>    
73888>>>    Move Self to Default_dbFloating_Menu_ID
73889>>>    
73889>>>    Object oUndoMenuItem is a cCJUndoMenuItem
73891>>>    End_Object
73892>>>    
73892>>>    Object oCutMenuItem is a cCJCutMenuItem
73894>>>        Set pbControlBeginGroup to True
73895>>>    End_Object
73896>>>    
73896>>>    Object oCopyMenuItem is a cCJCopyMenuItem
73898>>>    End_Object
73899>>>
73899>>>    Object oPasteMenuItem is a cCJPasteMenuItem
73901>>>    End_Object
73902>>>
73902>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
73904>>>    End_Object
73905>>>
73905>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
73907>>>        Set pbControlBeginGroup to True
73908>>>    End_Object
73909>>>
73909>>>    Object oPromptMenuItem is a cCJPromptMenuItem
73911>>>        Set pbControlBeginGroup to True
73912>>>    End_Object
73913>>>
73913>>>    Object oFindNextMenu is a cCJFindNextMenuItem
73915>>>        Set pbControlBeginGroup to True
73916>>>    End_Object
73917>>>
73917>>>    Object oFindPreviousMenu is a cCJFindPreviousMenuItem
73919>>>    End_Object
73920>>>
73920>>>    Object oClearMenuItem is a cCJClearMenuItem
73922>>>        Set pbControlBeginGroup to True
73923>>>    End_Object
73924>>>
73924>>>    Object oClearAllMenu is a cCJClearAllMenuItem
73926>>>    End_Object
73927>>>
73927>>>    Object oSaveMenu is a cCJSaveMenuItem
73929>>>    End_Object
73930>>>    
73930>>>    Object oDeleteMenu is a cCJDeleteMenuItem
73932>>>    End_Object
73933>>>
73933>>>    Object oRememberitem is a cCJRememberFieldMenuItem
73935>>>        Set pbControlBeginGroup to True
73936>>>    End_Object
73937>>>
73937>>>    Object oRetainItem is a cCJRememberLastFieldMenuItem
73939>>>    End_Object
73940>>>
73940>>>    Object oUnRememberitem is a cCJUnRememberFieldMenuItem
73942>>>    End_Object
73943>>>
73943>>>    Object oCJClearAllDynamicDefaults is a cCJUnRememberFieldAllMenuItem
73945>>>    End_Object
73946>>>
73946>>>End_Object
73947>Use seq_chnl.pkg
73947>
73947>Object oMain is a Panel
73949>    Set Label to "ChatGPT API Sample"
73950>    Set Location to 4 3
73951>    Set Size to 300 450
73952>    
73952>    // Note: Ideally you should get your own API Key: from https://platform.openai.com/account/api-keys
73952>    //
73952>    // Ha!  This key got disabled by OpenAI when they detected I'd uploaded it to GitHub, so it won't
73952>    // work now, hence you will have to get your own!
73952>    
73952>    Property String psOpenAIAPIKey
73954>    
73954>    Procedure SetOpenAIAPIKey
73957>        Integer iChn
73957>        String  sKey
73957>        
73957>        Get Seq_New_Channel to iChn
73958>        Direct_Input channel iChn "C:\Temp\OpenAIAPIKey.txt"
73960>        Read channel iChn sKey
73962>        Close_Input channel iChn
73964>        Send Seq_Release_Channel iChn
73965>        
73965>        Set psOpenAIAPIKey to sKey
73966>    End_Procedure
73967>    Send SetOpenAIAPIKey
73968>    
73968>    Object oCommandBarSystem is a cCJCommandBarSystem
73970>        Set pbTimerUpdate to True
73971>        Set peVisualTheme to xtpThemeOffice2013Outlook
73972>        Set pbAutoResizeIcons to True
73973>
73973>        Procedure OnCreateCommandBars
73976>            Handle hoOptions
73976>            Get OptionsObject to hoOptions
73977>            Forward Send OnCreateCommandBars
73979>        End_Procedure
73980>
73980>        Object oMenuBar is a cCJMenuBar
73982>
73982>            Object oFileMenu is a cCJMenuItem
73984>                Set peControlType to xtpControlPopup          
73985>                Set psCaption   to "&File"
73986>                Set psDescription to "Find, Save, Delete, Clear information or quit this application."
73987>                Set psCategory to "Menus"
73988>
73988>                Object oClearMenuItem is a cCJClearMenuItem
73990>                    Set pbAddToDesignerMenu to True
73991>                End_Object
73992>
73992>                Object oClearAllMenu is a cCJClearAllMenuItem
73994>                    Set pbAddToDesignerMenu to True
73995>                End_Object
73996>
73996>                Object oPromptMenuItem is a cCJPromptMenuItem
73998>                    Set pbAddToDesignerMenu to True
73999>                    Set pbControlBeginGroup to True
74000>                End_Object
74001>
74001>                Object oFindMenuItem is a cCJFindMenuItem
74003>                    Set pbAddToDesignerMenu to True
74004>                    Set pbControlBeginGroup to True
74005>                End_Object
74006>
74006>                Object oFindNextMenu is a cCJFindNextMenuItem
74008>                    Set pbAddToDesignerMenu to True
74009>                End_Object
74010>
74010>                Object oFindPreviousMenu is a cCJFindPreviousMenuItem
74012>                    Set pbAddToDesignerMenu to True
74013>                End_Object
74014>
74014>                Object oFindFirstMenu is a cCJFindFirstMenuItem
74016>                    Set pbAddToDesignerMenu to True
74017>                End_Object
74018>
74018>                Object oFindLastMenu is a cCJFindLastMenuItem
74020>                    Set pbAddToDesignerMenu to True
74021>                End_Object
74022>
74022>                Object oSaveMenuItem is a cCJSaveMenuItem
74024>                    Set pbAddToDesignerMenu to True
74025>                    Set pbControlBeginGroup to True
74026>                End_Object
74027>
74027>                Object oDeleteMenuItem is a cCJDeleteMenuItem
74029>                    Set pbAddToDesignerMenu to True
74030>                End_Object
74031>
74031>                Object oExitMenu is a cCJExitMenuItem
74033>                    Set pbControlBeginGroup to True
74034>                End_Object
74035>
74035>            End_Object
74036>
74036>            Object oViewMenu is a cCJMenuItem
74038>                Set peControlType to xtpControlPopup
74039>                Set psCaption to "&View"
74040>                Set psToolTip to "View"
74041>                Set psDescription to "Available Views"
74042>
74042>                Object oChatGPTTestMenuItem is a cCJMenuItem
74044>                    Set psCaption to "ChatGPTTest"
74045>                    Set psTooltip to "ChatGPTTest"
74046>                
74046>                    Procedure OnExecute Variant vCommandBarControl
74049>                        Handle hoClient
74049>                        Get Client_Id to hoClient
74050>                        Send Activate_oChatGPTTest of hoClient
74051>                    End_Procedure
74052>                End_Object
74053>            End_Object
74054>            
74054>            Object oReportMenu is a cCJMenuItem
74056>                Set peControlType to xtpControlPopup          
74057>                Set psCaption to "&Report"
74058>                Set psToolTip to "Report"
74059>                Set psDescription to "Available Reports"
74060>            End_Object
74061>
74061>            Object oNavigateMenu is a cCJMenuItem
74063>                Set peControlType to xtpControlPopup      
74064>                Set psCaption to "&Navigate"    
74065>                Set psTooltip to "Navigate"    
74066>                Set psDescription to "Move to different areas of the application"
74067>
74067>                Object oNextAreaMenu is a cCJNextAreaMenu
74069>                End_Object
74070>
74070>                Object oPriorAreaMenu is a cCJPriorAreaMenu
74072>                End_Object
74073>
74073>                Object oNextViewMenu is a cCJNextViewMenu
74075>                End_Object
74076>
74076>                Object oPriorViewMenu is a cCJPriorViewMenu
74078>                End_Object
74079>
74079>                Object oPromptMenu is a cCJPromptMenuItem
74081>                    Set pbControlBeginGroup to True
74082>                End_Object
74083>
74083>                Object oZoomMenu is a cCJZoomMenuItem
74085>                End_Object
74086>
74086>            End_Object
74087>
74087>            Object oWindowMenu is a cCJMDIWindowsMenuItem
74089>                Set peControlType to xtpControlPopup
74090>                Set psCaption to "&Window"
74091>                Set psToolTip to "Window"
74092>                Set psDescription to "Display Current Views and set other display options."    
74093>
74093>                // These are the static windows items. More will be created in onInitPopup 
74093>                Object oDisplayOptionsMenu is a cCJMenuItem
74095>                    Set peControlType to xtpControlPopup          
74096>                    Set psCaption to "&Display Options"
74097>                    Set psToolTip to "Display Options"
74098>                    Set psDescription to "Set display options"
74099>
74099>                    Object oStatusbarMenu is a cCJStatusbarMenuItem
74101>                    End_Object
74102>
74102>                    Object oAutoArrangeIconsMenu is a cCJAutoArrangeIconsMenuItem
74104>                    End_Object
74105>
74105>                    Object oRestoreMenusMenu is a cCJRestoreMenusMenuItem
74107>                        Set pbControlBeginGroup to True
74108>                    End_Object
74109>
74109>                End_Object
74110>
74110>                Object oCascadeMenu is a cCJCascadeMenuItem
74112>                    Set pbControlBeginGroup to True
74113>                End_Object
74114>
74114>                Object oHorizTile is a cCJTileHorizontally
74116>                End_Object
74117>
74117>                Object oVertTile is a cCJTileVertically
74119>                End_Object
74120>
74120>                Object oMinimizeMenuItem is a cCJMinimizeWindowsMenuItem
74122>                    Set pbControlBeginGroup to True
74123>                End_Object
74124>
74124>                Object oRestoreMenuItem is a cCJRestoreWindowsMenuItem
74126>                End_Object
74127>
74127>                Object oArrangeIconsMenuItem is a cCJAutoArrangeIconsMenuItem
74129>                    Set pbControlBeginGroup to True
74130>                End_Object
74131>
74131>            End_Object
74132>
74132>            Object oHelpMenu is a cCJMenuItem
74134>                Set peControlType to xtpControlPopup    
74135>                Set psCaption to "&Help"
74136>                Set psDescription to "Access Information for learning and using this DataFlex application."
74137>                Set psToolTip to "Help"
74138>
74138>                Object oHelpMenuItem is a cCJHelpMenuItem 
74140>                End_Object
74141>
74141>                Object oAboutMenuItem is a cCJAboutMenuItem
74143>                End_Object
74144>
74144>            End_Object
74145>
74145>        End_Object
74146>
74146>        Object oFindToolBar is a cCJToolbar
74148>            Set psTitle to "Finding Toolbar"
74149>
74149>            Object oFindFirstTool is a cCJFindFirstMenuItem
74151>            End_Object
74152>
74152>            Object oFindPreviousTool is a cCJFindPreviousMenuItem
74154>            End_Object
74155>
74155>            Object oFindMenuTool is a cCJFindMenuItem
74157>            End_Object
74158>
74158>            Object oFindNextTool is a cCJFindNextMenuItem
74160>            End_Object
74161>
74161>            Object oFindLastTool is a cCJFindLastMenuItem
74163>            End_Object
74164>
74164>            Object oPromptToolItem is a cCJPromptMenuItem
74166>                Set pbControlBeginGroup to True
74167>            End_Object
74168>
74168>        End_Object
74169>
74169>        Object oFileToolBar is a cCJToolbar
74171>            Set psTitle to "Data Entry Toolbar"
74172>
74172>            Object oClearToolItem is a cCJClearMenuItem
74174>                Set peControlStyle to xtpButtonIconAndCaption
74175>            End_Object
74176>
74176>            Object oClearAllToolItem2 is a cCJClearAllMenuItem
74178>                Set peControlStyle to xtpButtonIconAndCaption
74179>            End_Object
74180>
74180>            Object oSaveToolItem is a cCJSaveMenuItem
74182>                Set peControlStyle to xtpButtonIconAndCaption
74183>                Set pbControlBeginGroup to True
74184>            End_Object
74185>
74185>            Object oDeleteToolItem is a cCJDeleteMenuItem
74187>                Set peControlStyle to xtpButtonIconAndCaption
74188>            End_Object
74189>
74189>        End_Object
74190>
74190>        Object oEditToolBar is a cCJToolbar
74192>            Set psTitle to "Edit Toolbar"
74193>
74193>            Object oCutToolbarItem is a cCJCutMenuItem
74195>            End_Object
74196>
74196>            Object oCopyToolbarItem is a cCJCopyMenuItem
74198>            End_Object
74199>
74199>            Object oPasteToolbarItem is a cCJPasteMenuItem
74201>            End_Object
74202>
74202>            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
74204>                Set pbControlBeginGroup to True
74205>            End_Object
74206>
74206>        End_Object
74207>
74207>        Object oRememberToolbar is a cCJToolbar
74209>            Set psTitle to C_$Remember
74210>
74210>            Object oRememberItems is a cCJMenuItem
74212>
74212>                Set peControlType to xtpControlPopup
74213>                Set peControlStyle to xtpButtonCaption
74214>                Set psCaption to C_$Remember
74215>                
74215>                Object oMenuItem is a cCJRememberFieldMenuItem
74217>                    Set peControlStyle to xtpButtonIconAndCaption
74218>                End_Object
74219>                
74219>                Object oMenuItem is a cCJRememberLastFieldMenuItem
74221>                    Set peControlStyle to xtpButtonIconAndCaption
74222>                End_Object
74223>                
74223>                Object oMenuItem is a cCJUnRememberFieldMenuItem
74225>                    Set peControlStyle to xtpButtonIconAndCaption
74226>                End_Object
74227>                
74227>                Object oMenuItem is a cCJUnRememberFieldAllMenuItem
74229>                    Set peControlStyle to xtpButtonIconAndCaption
74230>                End_Object
74231>
74231>            End_Object
74232>            
74232>        End_Object
74233>        
74233>        Object oStatusBar is a cCJStatusBar
74235>
74235>            Object oStatusPane1 is a cCJStatusBarPane
74237>                Set piID to sbpIDIdlePane
74238>                Set pbStyleStretch to True
74239>            End_Object
74240>
74240>            Object oStatusPane2 is a cCJStatusBarPane
74242>                Set phoViewPane to Self
74243>                Set pbStyleStretch to True
74244>            End_Object
74245>
74245>        End_Object
74246>
74246>    End_Object
74247>    
74247>    Use cHttpTransferREST.pkg
Including file: cHttpTransferREST.pkg    (C:\Projects\ChatGPTAPI\AppSrc\cHttpTransferREST.pkg)
74247>>>// Class: cHttpTransferREST
74247>>>//
74247>>>// An enhanced version of the cHttpTransfer class that stores received data
74247>>>// in a UChar array property (pucaData) (and also content type in psContentType).
74247>>>//
74247>>>// Provides a MakeJsonCall function for calling REST services.  OAuth2 is
74247>>>// assumed, as is JSON.
74247>>>//
74247>>>// The containing object (or a parent of it) is REQUIRED to provide the function
74247>>>// OAuth2AccessToken which should return the Access Token returned by the OAuth2
74247>>>// process.  (UNLESS pbRequireToken is set to False.)
74247>>>//
74247>>>// Revision:
74247>>>//     2023/03/07  (MJP, UIG)
74247>>>//        Added pbRequireToken to allow use in non-OAuth2 environments
74247>>>//        Added Extra headers (AddExtraHeader and ClearExtraHeaders) so you can
74247>>>//        add your own as required (i.e. you might do:
74247>>>//           AddExtraHeader "Authorization" "Basic: aGbfRfdfhgpRt4^fDDr4")
74247>>>//     2023/03/06  (MJP, UIG)
74247>>>//        Added the pbDefeatCaching property & if True (the default) will add
74247>>>//        a RandomHexUUID to the query string to do that, so that repeated calls
74247>>>//        to the same resource will get fresh results.
74247>>>//     2022/06/10  (MJP, UIG) 
74247>>>//        Initial version: 1.0
74247>>>//
74247>>>
74247>>>Use cHttpTransfer.pkg
74247>>>Use WinUuid.pkg
Including file: WinUuid.pkg    (C:\Program Files\DataFlex 23.0\Pkg\WinUuid.pkg)
74247>>>>>Use Unicode.Pkg
74247>>>>>
74247>>>>>External_Function WinAPI_UuidCreate "UuidCreate" Rpcrt4.dll ;    Pointer Uuid ;    Returns Integer
74248>>>>>
74248>>>>>External_Function WinAPI_UuidToString  "UuidToStringW" Rpcrt4.dll ;    Pointer pUuid ;    Pointer lpUUIDString ;    Returns Integer
74249>>>>>
74249>>>>>External_Function WinAPI_UuidCreateSequential "UuidCreateSequential" Rpcrt4.dll ;    Pointer pUuid ;    Returns Integer
74250>>>>>
74250>>>>>External_Function WinAPI_RpcStringFree "RpcStringFreeW" Rpcrt4.dll ;    Pointer pStr ;    Returns Integer
74251>>>>>
74251>>>>>
74251>>>>>// Returns a 'random' Universally Unique Identifier string as a 32 digit hex number.
74251>>>>>Function RandomHexUUID Global Returns String
74253>>>>>    Pointer pUUID pUUIDStr
74253>>>>>    Integer iRetval iOffset iChar
74253>>>>>    String sUUID
74253>>>>>    
74253>>>>>    Move (Alloc(16)) to pUUID
74254>>>>>    
74254>>>>>    Move (WinAPI_UuidCreate (pUUID)) to iRetval
74255>>>>>    
74255>>>>>    If (iRetval = 0) Begin
74257>>>>>        Move 0 to pUUIDStr
74258>>>>>        
74258>>>>>        Move (WinAPI_UuidToString (pUUID, AddressOf(pUUIDStr))) to iRetval
74259>>>>>        If (iRetval = 0) Begin
74261>>>>>            Move (PointerToWString(pUUIDStr)) to sUUID
74262>>>>>            Move (WinAPI_RpcStringFree (AddressOf (pUUIDStr))) to iRetval
74263>>>>>            
74263>>>>>            Move (Uppercase (sUUID)) to sUUID
74264>>>>>        End
74264>>>>>>
74264>>>>>    End
74264>>>>>>
74264>>>>>    
74264>>>>>    Move (Free(pUUID)) to iRetval
74265>>>>>    
74265>>>>>    Function_Return sUUID
74266>>>>>End_Function
74267>>>>>
74267>>>>>
74267>>>>>// Returns a sequential Universally Unique Identifier string as a 32 digit hex number.
74267>>>>>Function SeqHexUUID Global Returns String
74269>>>>>    Pointer pUUID pUUIDStr
74269>>>>>    Integer iRetval iOffset iChar
74269>>>>>    String sUUID
74269>>>>>    
74269>>>>>    Move (Alloc(16)) to pUUID
74270>>>>>    
74270>>>>>    Move (WinAPI_UuidCreateSequential (pUUID)) to iRetval
74271>>>>>    
74271>>>>>    If (iRetval = 0) Begin
74273>>>>>        Move 0 to pUUIDStr
74274>>>>>        
74274>>>>>        Move (WinAPI_UuidToString (pUUID, AddressOf(pUUIDStr))) to iRetval
74275>>>>>        If (iRetval = 0) Begin
74277>>>>>            Move (PointerToWString(pUUIDStr)) to sUUID
74278>>>>>            Move (WinAPI_RpcStringFree (AddressOf (pUUIDStr))) to iRetval
74279>>>>>            
74279>>>>>            Move (Uppercase (sUUID)) to sUUID
74280>>>>>        End
74280>>>>>>
74280>>>>>    End
74280>>>>>>
74280>>>>>    
74280>>>>>    Move (Free(pUUID)) to iRetval
74281>>>>>    
74281>>>>>    Function_Return sUUID
74282>>>>>End_Function
74283>>>
74283>>>Enum_List
74283>>>    Define C_httpNoJson for -1
74283>>>    Define C_httpOK
74283>>>    Define C_httpCallFailed
74283>>>    Define C_httpBadStatus
74283>>>    Define C_httpJsonParseFail
74283>>>    Define C_httpNoAccessToken
74283>>>End_Enum_List
74283>>>
74283>>>// NOTE: This function MUST exist in an object parent in order to give objects
74283>>>//       of the class access to the AccessToken returned by the OAuth2 login
74283>>>//       process and MUST return that token!  (Unless you set pbRequireToken
74283>>>//       to False)
74283>>>Register_Function OAuth2AccessToken Returns String
74283>>>
74283>>>Class cHttpTransferREST is a cHttpTransfer
74284>>>    
74284>>>    Procedure Construct_Object
74286>>>        Forward Send Construct_Object
74288>>>        
74288>>>        Property UChar[]  pucaData
74289>>>        Property String   psContentType     ""
74290>>>        Property Integer  piError           C_httpOK  // Zero
74291>>>        Property String   psError           ""
74292>>>        Property String   psAcceptTypes     "*/*"
74293>>>        Property String   psSendType        "application/json"
74294>>>        Property Boolean  pbDefeatCaching   True
74295>>>        Property Boolean  pbRequireToken    True
74296>>>        Property String[] pasHeaderNames
74297>>>        Property String[] pasHeaderValues
74298>>>
74298>>>        Set piRemotePort    to rpHttpSSL
74299>>>        Set peTransferFlags to ifSecure
74300>>>    End_Procedure
74301>>>        
74301>>>    Procedure OnDataReceived String sContentType String sData
74303>>>        UChar[] ucaData
74304>>>        
74304>>>        Get pucaData        to ucaData
74305>>>        Set pucaData        to (AppendArray(ucaData, StringToUCharArray(sData)))
74306>>>        Set psContentType   to sContentType
74307>>>    End_Procedure
74308>>>    
74308>>>    Procedure AddExtraHeader String sName String sValue
74310>>>        String[] asNames asValues
74312>>>        Integer  iIdx iEnd
74312>>>        
74312>>>        Get pasHeaderNames to asNames
74313>>>        Move (SearchArray(asNames, sName)) to iIdx
74314>>>        
74314>>>        If (iIdx = -1) Begin  // Not already in array
74316>>>            Move (SizeOfArray(asNames)) to iEnd
74317>>>            Get pasHeaderValues         to asValues
74318>>>            Move sName                  to asNames[iEnd]
74319>>>            Move sValue                 to asValues[iEnd]
74320>>>            Set pasHeaderNames          to asNames
74321>>>            Set pasHeaderValues         to asValues
74322>>>        End
74322>>>>
74322>>>        
74322>>>    End_Procedure
74323>>>    
74323>>>    Procedure ClearExtraHeaders
74325>>>        String[] asEmpty
74326>>>        
74326>>>        Set pasHeaderNames  to asEmpty
74327>>>        Set pasHeaderValues to asEmpty
74328>>>    End_Procedure
74329>>>    
74329>>>    Procedure Reset
74331>>>        UChar[] empty
74332>>>        
74332>>>        Set pucaData        to empty
74333>>>        Set psContentType   to ""
74334>>>        Set piError         to C_httpOK  // Zero! ;-)
74335>>>        Set psError         to ""
74336>>>        Send ClearHeaders
74337>>>    End_Procedure
74338>>>    
74338>>>    Function psData Returns String
74340>>>        Function_Return (UCharArrayToString(pucaData(Self)))
74341>>>    End_Function
74342>>>    
74342>>>    Function MakeJsonCall String sVerb String sPath String sParams Handle hoBody Returns Handle
74344>>>        Handle   hoJson
74344>>>        Integer  iOK iStatus iHdrs i
74344>>>        Boolean  bOK
74344>>>        String   sData sBody sToken
74344>>>        String[] asHdrNames asHdrVals
74346>>>        
74346>>>        Move (Uppercase(sVerb)) to sVerb  // Probably not required ;-)
74347>>>        
74347>>>        Send Reset
74348>>>        
74348>>>        If (pbRequireToken(Self)) Begin
74350>>>            Get OAuth2AccessToken   to sToken
74351>>>        
74351>>>            If (sToken = "") Begin
74353>>>                Set piError to C_httpNoAccessToken
74354>>>                Set psError to "No OAuth2 access token"
74355>>>                Function_Return 0
74356>>>            End
74356>>>>
74356>>>            
74356>>>        End
74356>>>>
74356>>>        
74356>>>        // Add required headers:
74356>>>        Get AddHeader "Content-Type"      (psSendType(Self))    to iOK
74357>>>        Get AddHeader "Accept"            (psAcceptTypes(Self)) to iOK
74358>>>        If (sToken <> "") ;            Get AddHeader "Authorization" ("Bearer" * sToken)   to iOK
74361>>>        
74361>>>        // Deal with any extra headers
74361>>>        Get pasHeaderNames to asHdrNames
74362>>>        Move (SizeOfArray(asHdrNames)) to iHdrs
74363>>>         
74363>>>        If iHdrs Begin
74365>>>            Get pasHeaderValues to asHdrVals
74366>>>            Decrement iHdrs
74367>>>            
74367>>>            For i from 0 to iHdrs
74373>>>>
74373>>>                Get AddHeader asHdrNames[i] asHdrVals to iOK
74374>>>            Loop
74375>>>>
74375>>>            
74375>>>        End
74375>>>>
74375>>>        
74375>>>        // To defeat cacheing, we add a "nonce" set to a random hex UUID to the
74375>>>        // query string - after any real parameters we are passed, if any:
74375>>>        If (pbDefeatCaching(Self)) Begin
74377>>>            If (sParams = "") ;                Move (sPath + "?nonce=" + RandomHexUUID())                  to sPath
74380>>>            Else ;                Move (sPath + "?" + sParams + "&nonce=" + RandomHexUUID())  to sPath
74382>>>        End
74382>>>>
74382>>>        Else If (sParams <> "") ;            Move (sPath + "?" + sParams)                                    to sPath
74386>>>        
74386>>>        // Assumes that only POST, PUT and PATCH verbs will have a body:
74386>>>        If (((sVerb = "POST") or (sVerb = "PUT") or (sVerb = "PATCH")) and hoBody) Begin
74388>>>            Get Stringify of hoBody to sBody
74389>>>            Send Destroy of hoBody
74390>>>        End
74390>>>>
74390>>>        
74390>>>        // Make the call
74390>>>        Get HttpVerbAddrRequest sPath (AddressOf(sBody)) (SizeOfString(sBody)) False sVerb to iOK
74391>>>        
74391>>>        If iOK Begin
74393>>>            Get ResponseStatusCode  to iStatus
74394>>>            Get psData              to sData
74395>>>            
74395>>>            If ((iStatus >= 200) and (iStatus < 300)) Begin
74397>>>                
74397>>>                // If no JSON was returned, then return -1, indicating that, 
74397>>>                // which may be perfectly correct in some cases 
74397>>>                // (HTTP 204 - No Content, for instance).
74397>>>                If (SizeOfString(sData) < 2) ;  // 2 chars is the minimum JSON                    Function_Return C_httpNoJson
74400>>>
74400>>>                Get Create (RefClass(cJsonObject)) to hoJson
74401>>>                Set pbRequireAllMembers of hoJson to False
74402>>>                Set pbEscapeForwardSlash of hoJson to False
74403>>>                Get ParseString of hoJson sData to bOK
74404>>>                
74404>>>                If bOK ;                    Function_Return hoJson  // Success! Now caller's responsibility to destroy.
74407>>>                
74407>>>                // So if parsing failed:
74407>>>                Set piError to C_httpJsonParseFail
74408>>>                Set psError to ('Http Call to "' + psRemoteHost(Self) + '/' + sPath + "'" * ;                                'returned invalid JSON. Parse error:' * ;                                psParseError(hoJson))
74409>>>                Send Destroy of hoJson
74410>>>            End
74410>>>>
74410>>>            Else Begin  // Not a 2xx status
74411>>>                Set piError to C_httpBadStatus
74412>>>                Set psError to ('HTTP Call to "' + psRemoteHost(Self) + '/' + sPath + '"' * ;                                'returned a status of' * String(iStatus) * '-' * ;                                ResponseStatusText(Self) * ;                                "(" + sData + ")")
74413>>>            End
74413>>>>
74413>>>            
74413>>>        End
74413>>>>
74413>>>        Else Begin  // Call returned 0
74414>>>            Set piError to C_httpCallFailed
74415>>>            Set psError to ('HTTP Call to "' + psRemoteHost(Self) + '/' + sPath + '" failed')
74416>>>        End
74416>>>>
74416>>>        
74416>>>        Function_Return 0  // Indicates failure: check piError and psError for reason
74417>>>    End_Function
74418>>>    
74418>>>End_Class
74419>    Object oHttp is a cHttpTransferREST
74421>        Set psRemoteHost    to "api.openai.com"
74422>        Set piRemotePort    to rpHttpSSL
74423>        Set peTransferFlags to ifSecure
74424>        Set pbDefeatCaching to False
74425>    End_Object
74426>    
74426>    Function OAuth2AccessToken Returns String
74429>        Function_Return (psOpenAIAPIKey(Self))
74430>    End_Function
74431>
74431>    Use JsonPath.pkg
Including file: JsonPath.pkg    (C:\Projects\ChatGPTAPI\AppSrc\JsonPath.pkg)
74431>>>//==============================================================================
74431>>>// JsonPath.pkg
74431>>>//==============================================================================
74431>>>//
74431>>>// Just a simple package which uses the cJsonPath class, creates an object of it,
74431>>>// and adds three global functions: JsonObjectAtPath, JsonValueAtPath and 
74431>>>// JsonCountAtPath, calling those of the object.
74431>>>//
74431>>>// Licence (MIT):
74431>>>//
74431>>>// Copyright 2020, Mike Peat, Unicorn InterGlobal Ltd.
74431>>>//
74431>>>// Permission is hereby granted, free of charge, to any person obtaining a copy
74431>>>// of this software and associated documentation files (the "Software"), to deal
74431>>>// in the Software without restriction, including without limitation the rights
74431>>>// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
74431>>>// copies of the Software, and to permit persons to whom the Software is
74431>>>// furnished to do so, subject to the following conditions:
74431>>>//
74431>>>// The above copyright notice and this permission notice shall be included in
74431>>>// all copies or substantial portions of the Software.
74431>>>//
74431>>>// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
74431>>>// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
74431>>>// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
74431>>>// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
74431>>>// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
74431>>>// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
74431>>>// SOFTWARE.
74431>>>//
74431>>>//==============================================================================
74431>>>
74431>>>Use cJsonPath.pkg
Including file: cJsonPath.pkg    (C:\Projects\ChatGPTAPI\AppSrc\cJsonPath.pkg)
74431>>>>>//==============================================================================
74431>>>>>// cJsonPath.pkg
74431>>>>>//
74431>>>>>// A class which will allow you to get either object handles or values or array
74431>>>>>// copunts from JSON objects using their path.
74431>>>>>// 
74431>>>>>// Author:  Mike Peat
74431>>>>>// Date:    06/02/2020
74431>>>>>//
74431>>>>>// Usage:
74431>>>>>//   To return a JSON object at a path:
74431>>>>>//       Get JsonAtPath of oJsonPathObject hoSourceJsonObject, path to hoVar
74431>>>>>//     or:
74431>>>>>//       Move (JsonAtPath(oJsonPathObject, hoSourceJsonObject, path)) to hoVar
74431>>>>>//
74431>>>>>//   To return a value at a path:
74431>>>>>//       Get ValueAtPath of oJsonPathObject hoSourceJsonObject path to sVar
74431>>>>>//     or
74431>>>>>//       Move (ValueAtPath(oJsonPathObject, hoSourceJson, path)) to sVar
74431>>>>>//
74431>>>>>// Path notation:
74431>>>>>//
74431>>>>>//    A string with JSON object names, separated by dots "." and array indices
74431>>>>>//    in square brackets: "foo.bar.baz[0].bill[1][0]"
74431>>>>>//
74431>>>>>// Sample JSON:
74431>>>>>//
74431>>>>>//    {
74431>>>>>//      "foo": {
74431>>>>>//              "bar": {
74431>>>>>//                      "baz": [
74431>>>>>//                              66.123,
74431>>>>>//                              {
74431>>>>>//                                      "jim": "jack"
74431>>>>>//                              },
74431>>>>>//                              false,
74431>>>>>//                              {
74431>>>>>//                                      "bob": 42
74431>>>>>//                              },
74431>>>>>//                              {
74431>>>>>//                                      "kim": "possible"
74431>>>>>//                              },
74431>>>>>//                              [55, 1, 19, {
74431>>>>>//                                      "Mork": [
74431>>>>>//                                              [35, 67, 88, 100, [21, 33, 45, "Tim"]]
74431>>>>>//                                      ]
74431>>>>>//                              }]
74431>>>>>//                      ]
74431>>>>>//              }
74431>>>>>//      }
74431>>>>>//    }
74431>>>>>//
74431>>>>>// Examples:
74431>>>>>//    Move (JsonAtPath(oJPath, hoJson, "foo.bar.baz[5][3].Mork[0][4][3]")) to hoObj
74431>>>>>//
74431>>>>>//    Get ValueAtPath of oJPath hJson "foo.bar.baz[5][3].Mork[0][4][3]" to sVal
74431>>>>>//      (sVal = "Tim")
74431>>>>>//
74431>>>>>// In the first example the JSON object would be returned; if you then performed
74431>>>>>// Move (JsonValue(hoObj)) to sVal you would get the same result as the second
74431>>>>>// example - i.e. "Tim".
74431>>>>>//
74431>>>>>// NOTE: JSON is case-sensitive, so your path-strings must exactly match the
74431>>>>>//       object names ("foo" is *not* "Foo") in the JSON file.
74431>>>>>//
74431>>>>>//==============================================================================
74431>>>>>//
74431>>>>>// Structure
74431>>>>>// =========
74431>>>>>//
74431>>>>>// The core function is JsonAtPath, which returns the JSON member in the passed
74431>>>>>// Json Object at the passed Path, if it is there.
74431>>>>>//
74431>>>>>// The two other public functions - ValueAtPath and CountAtPath - just call
74431>>>>>// JsonAtPath and then work on that to extract the Json value or the Array count
74431>>>>>// of that object respectively.
74431>>>>>//
74431>>>>>// JsonAtPath is supported by the two private functions, ObjectHandle and
74431>>>>>// ArrayHandle, which deal with Json Objects and Array Objects respectively that
74431>>>>>// are encountered in working down the path.  These call each other (or
74431>>>>>// theselves) recursively to deal with elements of the path.
74431>>>>>//
74431>>>>>//==============================================================================
74431>>>>>// Licence (MIT):
74431>>>>>//
74431>>>>>// Copyright 2020, Mike Peat, Unicorn InterGlobal Ltd.
74431>>>>>//
74431>>>>>// Permission is hereby granted, free of charge, to any person obtaining a copy
74431>>>>>// of this software and associated documentation files (the "Software"), to deal
74431>>>>>// in the Software without restriction, including without limitation the rights
74431>>>>>// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
74431>>>>>// copies of the Software, and to permit persons to whom the Software is
74431>>>>>// furnished to do so, subject to the following conditions:
74431>>>>>//
74431>>>>>// The above copyright notice and this permission notice shall be included in
74431>>>>>// all copies or substantial portions of the Software.
74431>>>>>//
74431>>>>>// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
74431>>>>>// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
74431>>>>>// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
74431>>>>>// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
74431>>>>>// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
74431>>>>>// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
74431>>>>>// SOFTWARE.
74431>>>>>//
74431>>>>>//==============================================================================
74431>>>>>// Added CountAtPath function to return the count of elements in an array at the
74431>>>>>// passed path.
74431>>>>>//==============================================================================
74431>>>>>//
74431>>>>>// 2023-03-29  MJP (UIG): Allowed passing a JSON Array instead of a JSON Object.
74431>>>>>//
74431>>>>>//==============================================================================
74431>>>>>//
74431>>>>>// 2023-04-05  MJP (UIG): Changed logic for passing an empty (i.e. "") path.
74431>>>>>//                        Previously this would be an error and always return 0,
74431>>>>>//                        but it turns out that sometimes it is not, so handled
74431>>>>>//                        it better (I think! :0).  Seems to work OK.
74431>>>>>//
74431>>>>>//==============================================================================
74431>>>>>
74431>>>>>Use UI
74431>>>>>Use cJsonObject.pkg
Including file: cJsonObject.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cJsonObject.pkg)
74431>>>>>>>// cJSONObject is defined directly in fmac
74431>>>>>>>// We just define the constants here. They have intentionally not been moved to fmac
74431>>>>>>>
74431>>>>>>>
74431>>>>>>>Enum_List
74431>>>>>>>    Define jpWhitespace_Plain for 0
74431>>>>>>>    Define jpWhitespace_Spaced for 1
74431>>>>>>>    Define jpWhitespace_Pretty for 2
74431>>>>>>>End_Enum_List
74431>>>>>>>
74431>>>>>>>Enum_List
74431>>>>>>>    Define jsonTypeNull
74431>>>>>>>    Define jsonTypeBoolean
74431>>>>>>>    Define jsonTypeDouble
74431>>>>>>>    Define jsonTypeInteger
74431>>>>>>>    Define jsonTypeObject
74431>>>>>>>    Define jsonTypeArray
74431>>>>>>>    Define jsonTypeString
74431>>>>>>>End_Enum_List
74431>>>>>>>
74431>>>>>
74431>>>>>Class cJsonPath is a cObject
74432>>>>>    
74432>>>>>    Function ArrayHandle Handle hoJson String sPath Returns Handle
74434>>>>>        Integer iLSBPos iRSBPos iIndex
74434>>>>>        Handle  hoMemb hoObj
74434>>>>>        
74434>>>>>        If not hoJson ;            Function_Return 0
74437>>>>>            
74437>>>>>        If (sPath = "") Begin
74439>>>>>            
74439>>>>>            If (JsonType(hoJson) = jsonTypeArray) ;                Function_Return hoJson
74442>>>>>                
74442>>>>>            Send Destroy of hoJson
74443>>>>>            Function_Return 0
74444>>>>>        End
74444>>>>>>
74444>>>>>        
74444>>>>>        Move (Pos("[", sPath)) to iLSBPos
74445>>>>>        Move (Pos("]", sPath)) to iRSBPos
74446>>>>>        
74446>>>>>        If (not(iLSBPos) or ;            not(iRSBPos) or ;            (iLSBPos > iRSBPos) or ;            (iLSBPos <> 1)) Begin
74448>>>>>            Send Destroy of hoJson
74449>>>>>            Function_Return 0
74450>>>>>        End
74450>>>>>>
74450>>>>>        
74450>>>>>        Move (Mid(sPath, (iRSBPos - iLSBPos - 1), (iLSBPos + 1))) to iIndex
74451>>>>>        
74451>>>>>        If (MemberCount(hoJson) <= iIndex) Begin
74453>>>>>            Send Destroy of hoJson
74454>>>>>            Function_Return 0
74455>>>>>        End
74455>>>>>>
74455>>>>>        
74455>>>>>        Get MemberByIndex of hoJson iIndex to hoMemb
74456>>>>>
74456>>>>>        If (Length(Trim(sPath)) = iRSBPos) Begin // It ends here
74458>>>>>            Send Destroy of hoJson
74459>>>>>            Function_Return hoMemb
74460>>>>>        End
74460>>>>>>
74460>>>>>
74460>>>>>        Move (Right(sPath, (Length(sPath) - iRSBPos))) to sPath
74461>>>>>        If (Left(sPath, 1) = ".") ;            Move (Replace(".", sPath, "")) to sPath
74464>>>>>        Get ObjectHandle hoMemb sPath to hoObj
74465>>>>>        Send Destroy of hoJson
74466>>>>>        Function_Return hoObj
74467>>>>>    End_Function
74468>>>>>    
74468>>>>>    Function ObjectHandle Handle hoJson String sPath Returns Handle
74470>>>>>        Integer iLSBPos iDotPos iPos
74470>>>>>        String  sMemb
74470>>>>>        Handle  hoMemb hoObj
74470>>>>>
74470>>>>>        If not hoJson ;            Function_Return 0
74473>>>>>        
74473>>>>>        If (sPath = "") Begin
74475>>>>>            
74475>>>>>            If (JsonType(hoJson) = jsonTypeObject) ;                Function_Return hoJson
74478>>>>>                
74478>>>>>            Send Destroy of hoJson
74479>>>>>            Function_Return 0
74480>>>>>        End
74480>>>>>>
74480>>>>>            
74480>>>>>        If (Left(sPath, 1) = "[") ;            Function_Return (ArrayHandle(Self, hoJson, sPath))
74483>>>>>        
74483>>>>>        Move (Pos(".", sPath))      to iDotPos
74484>>>>>        Move (Pos("[", sPath))      to iLSBPos
74485>>>>>        
74485>>>>>        If (iLSBPos and iDotPos) ;            Move (iDotPos min iLSBPos)  to iPos
74488>>>>>        Else If (iDotPos) ;            Move iDotPos                to iPos
74492>>>>>        Else ;            Move iLSBPos                to iPos
74494>>>>>        
74494>>>>>        If not iPos Begin  // We are there!
74496>>>>>            
74496>>>>>            If (HasMember(hoJson, sPath)) Begin
74498>>>>>                Get Member of hoJson sPath to hoMemb
74499>>>>>                Send Destroy of hoJson
74500>>>>>                Function_Return hoMemb
74501>>>>>            End
74501>>>>>>
74501>>>>>            Else Begin
74502>>>>>                Send Destroy of hoJson
74503>>>>>                Function_Return 0
74504>>>>>            End
74504>>>>>>
74504>>>>>        
74504>>>>>        End
74504>>>>>>
74504>>>>>        
74504>>>>>        Move (Left(sPath, (iPos - 1)))    to sMemb
74505>>>>>        
74505>>>>>        If (HasMember(hoJson, sMemb)) Begin
74507>>>>>            Get Member of hoJson sMemb to hoMemb
74508>>>>>            Send Destroy of hoJson
74509>>>>>            Move (Right(sPath, (Length(sPath) - iPos + 1))) to sPath
74510>>>>>            If (Left(sPath, 1) = ".") ;                Move (Replace(".", sPath, "")) to sPath
74513>>>>>            Get ObjectHandle hoMemb sPath to hoObj
74514>>>>>            Function_Return hoObj
74515>>>>>        End
74515>>>>>>
74515>>>>>        
74515>>>>>        Send Destroy of hoJson
74516>>>>>        Function_Return 0
74517>>>>>    End_Function
74518>>>>>    
74518>>>>>    Function JsonAtPath Handle hoJson String sPath Returns Handle
74520>>>>>        Handle  hoObj
74520>>>>>        UChar[] ucaJson
74521>>>>>        Boolean bOK
74521>>>>>        
74521>>>>>        If not hoJson ;            Function_Return 0
74524>>>>>        
74524>>>>>        If ((JsonType(hoJson) = jsonTypeArray) and (MemberCount(hoJson) = 0)) ;            Function_Return 0
74527>>>>>        
74527>>>>>        // Do this to "copy" hoJson to hoObj, so hoJson does not get destroyed
74527>>>>>        // in the process
74527>>>>>        Get StringifyUtf8 of hoJson to ucaJson
74528>>>>>        Get CreateNamed (RefClass(cJsonObject)) "CopyJson" to hoObj
74529>>>>>        Get ParseUtf8 of hoObj ucaJson to bOK
74530>>>>>        If (JsonType(hoObj) = jsonTypeArray) ;            Function_Return (ArrayHandle(Self, hoObj, sPath))
74533>>>>>        Else ;            Function_Return (ObjectHandle(Self, hoObj, sPath))
74535>>>>>    End_Function
74536>>>>>    
74536>>>>>    Function ValueAtPath Handle hoJson String sPath Returns String
74538>>>>>        Handle  hoObj
74538>>>>>        String  sVal
74538>>>>>        Integer iType
74538>>>>>        
74538>>>>>        Get JsonAtPath hoJson sPath to hoObj
74539>>>>>
74539>>>>>        If hoObj Begin
74541>>>>>            Get JsonType of hoObj to iType
74542>>>>>            
74542>>>>>            If ((iType <> jsonTypeObject) and ;                (iType <> jsonTypeArray) and ;                (iType <> jsonTypeNull)) ;                Move (JsonValue(hoObj)) to sVal
74545>>>>>            
74545>>>>>            Send Destroy of hoObj
74546>>>>>        End
74546>>>>>>
74546>>>>>        
74546>>>>>        Function_Return sVal
74547>>>>>    End_Function
74548>>>>>    
74548>>>>>    Function CountAtPath Handle hoJson String sPath Returns Integer
74550>>>>>        Integer iCount
74550>>>>>        
74550>>>>>        Get JsonAtPath hoJson sPath to hoJson
74551>>>>>        
74551>>>>>        If not hoJson ;            Function_Return 0
74554>>>>>        
74554>>>>>        If (JsonType(hoJson) = jsonTypeArray) ;            Get MemberCount of hoJson to iCount
74557>>>>>            
74557>>>>>        Send Destroy of hoJson
74558>>>>>        Function_Return iCount
74559>>>>>    End_Function
74560>>>>>
74560>>>>>End_Class
74561>>>
74561>>>Object oJsonPathObject is a cJsonPath
74563>>>End_Object
74564>>>
74564>>>Function JsonObjectAtPath Global Handle hoJson String sPath Returns Handle
74566>>>    Function_Return (JsonAtPath(oJsonPathObject, hoJson, sPath))
74567>>>End_Function
74568>>>
74568>>>Function JsonValueAtPath Global Handle hoJson String sPath Returns String
74570>>>    Function_Return (ValueAtPath(oJsonPathObject, hoJson, sPath))
74571>>>End_Function
74572>>>
74572>>>Function JsonCountAtPath Global Handle hoJson String sPath Returns Integer
74574>>>    Function_Return (CountAtPath(oJsonPathObject, hoJson, sPath))
74575>>>End_Function
74576>    
74576>    Object oClientArea is a ClientArea
74578>        Use StdAbout.pkg
Including file: StdAbout.pkg    (C:\Program Files\DataFlex 23.0\Pkg\StdAbout.pkg)
74578>>>// This provides a quick and simple way to create an about package for a program.
74578>>>// You need to create a message inside you client area called Activate_About.
74578>>>// Within this message you should send the message DoAbout passing needed
74578>>>// string information.
74578>>>//
74578>>>//       Procedure Activate_About
74578>>>//           Send DoAbout sTitle sVersion sCopyright sAuthor sBitmap
74578>>>//       End_Procedure
74578>>>//    where: sTitle =     Name of application. If none provided, uses caption
74578>>>//                        bar title
74578>>>//           sVersion   = Version Line. If none provided, will be blank
74578>>>//           sCopyRight = Copyright Line. If none provided, will be blank
74578>>>//           sAuthor    = Author name, blank if none provided
74578>>>//           sBitMap    = Bitmap logo. If none provided, standard VDF bitmap
74578>>>//                        is used.
74578>>>// It is expected that you will place this in your own object package. For
74578>>>// example an order about package may look like this:
74578>>>//
74578>>>//   // OrderAbout.pkg
74578>>>//   Use StdAbout.pkg
74578>>>//   Procedure Activate_About
74578>>>//      String sTitle sCopyright sVersion sAuthor
74578>>>//      Move "My Order Entry System" to sTitle
74578>>>//      Move "Version 2.1" to sVersion
74578>>>//      Move "Copyright xxxx, Super Software Inc." to sCopyright
74578>>>//      Move "John Smith"  to sAuthor
74578>>>//      Send DoAbout sTitle sVersion sCopyright sAuthor ""
74578>>>//   end_procedure
74578>>>//   // end of file.
74578>>>
74578>>>Use DfAbout.pkg
Including file: Dfabout.pkg    (C:\Program Files\DataFlex 23.0\Pkg\Dfabout.pkg)
74578>>>>>Use LanguageText.pkg
74578>>>>>Use Windows.pkg
74578>>>>>Use DFbitmap.pkg
74578>>>>>Use GlobalFunctionsProcedures.pkg
74578>>>>>Use cTextEdit.pkg
74578>>>>>Use tWinStructs.pkg
74578>>>>>
74578>>>>>Use cli.pkg
74578>>>>>Use DFBTRDRV.PKG
Including file: DFBTRDRV.PKG    (C:\Program Files\DataFlex 23.0\Pkg\DFBTRDRV.PKG)
74578>>>>>>>// $File title : Package for the DataFlex Connectivity Kit for Pervasive.SQL
74578>>>>>>>// Notice      : This package contains constants and commands, used to call
74578>>>>>>>//               specific functions in the DFBTRDRV.
74578>>>>>>>Use Ui
74578>>>>>>>//
74578>>>>>>>// Driver Indentification
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>// Driver attributes
74578>>>>>>>//
74578>>>>>>>// Call_Driver functions ID's
74578>>>>>>>//
74578>>>>>>>//
74578>>>>>>>// DFBTRFN_CONVERT_FILE options
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// DFBTRFN_SET_OWNER options
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// DFBTRFN_SET_TRANSACTION_TYPE options
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to create all vars which may be needed
74578>>>>>>>// in other commands.
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to set the owner of a Btrieve file.
74578>>>>>>>// File must have been opened.
74578>>>>>>>// Filenumber needs to be passed.
74578>>>>>>>// To clear set the owner to "".
74578>>>>>>>// Examples:
74578>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret"
74578>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" READONLY CALLBACK MyCallBack
74578>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" ENCRYPT
74578>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" READONLY ENCRYPT CALLBACK MyCallBack
74578>>>>>>>// To clear:
74578>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to ""
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to parse DFBTR_SET_OWNVER
74578>>>>>>>// options.
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to parse for Callback
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to clear the owner of a Btrieve file.
74578>>>>>>>// File must have been opened.
74578>>>>>>>// Filenumber needs to be passed.
74578>>>>>>>// Examples:
74578>>>>>>>//      DFBTR_CLEAR_OWNER MyFileNumber
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to add a owner name to the internal list of ownernames
74578>>>>>>>// which will be tries when opening files.
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to remove all owners from the internal list of ownernames
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to set the owner name to be used when opening the DDF files.
74578>>>>>>>// The DDF owner is required when Pervasive.SQL security is turned on.
74578>>>>>>>// The DDF owner is equal to the password of the Master user in Pervasive.SQL
74578>>>>>>>// This command overwrites the DDF_OWNER setting in DFBTRDRV.INT
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to change the transaction type.
74578>>>>>>>// Valid types are:
74578>>>>>>>//     DFBTRTT_NONE
74578>>>>>>>//     DFBTRTT_EXCLUSIVE
74578>>>>>>>//     DFBTRTT_CONCURRENT
74578>>>>>>>//
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to get the current transaction type.
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to set explicit_locking
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to get explicit locking
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to set detection for incompatible positive signs in numeric fields
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>//
74578>>>>>>>// Command to get detection for incompatible positive signs in numeric fields
74578>>>>>>>//
74578>>>>>>>
74578>>>>>>>// Purpose: An instance of this class can be used as a broker object to
74578>>>>>>>//          call several Dfbtrdrv releated methods.
74578>>>>>>>
74578>>>>>>>Class cDFBtrDrvHandler is an Array
74579>>>>>>>    
74579>>>>>>>    Procedure Construct_Object Integer iImage
74581>>>>>>>        Forward Send Construct_object iImage
74583>>>>>>>        
74583>>>>>>>        Property String  psDriverID "DFBTRDRV"
74584>>>>>>>    End_Procedure
74585>>>>>>>    
74585>>>>>>>    //  The revsion of a Dfbtrdrv Connectivity Kit
74585>>>>>>>    //
74585>>>>>>>    
74585>>>>>>>    Function CKRevision Returns String
74587>>>>>>>        String  sDriverID
74587>>>>>>>        String  sRevision
74587>>>>>>>        String  sVoid
74587>>>>>>>        Integer iRetval
74587>>>>>>>        
74587>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74587>>>>>>>        // This error would otherwise be raised when we have an older
74587>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74587>>>>>>>        Send Ignore_error to Error_object_Id 20491
74588>>>>>>>        Get psDriverID to sDriverID
74589>>>>>>>        Move (Repeat(" ", 255)) to sRevision
74590>>>>>>>        Call_Driver 0 sDRiverID Function DFBTRFN_CKREVISION Callback 0 Passing sRevision sVoid 0 Result iRetval
74595>>>>>>>        Send Trap_Error to Error_object_Id 20491
74596>>>>>>>        If (Trim(sRevision) = "") Begin
74598>>>>>>>            // Unable to get the revision. return all zeroes.
74598>>>>>>>            Move "0.0.0.0" to sRevision
74599>>>>>>>        End
74599>>>>>>>>
74599>>>>>>>        Function_Return sRevision
74600>>>>>>>    End_Function
74601>>>>>>>    
74601>>>>>>>    Function CkUsesUri Returns Integer
74603>>>>>>>        String  sDriverID
74603>>>>>>>        String  sVoid1
74603>>>>>>>        String  sVoid2
74603>>>>>>>        Integer iRetval
74603>>>>>>>        
74603>>>>>>>        Get psDriverID to sDriverID
74604>>>>>>>        
74604>>>>>>>        Move 0 to iRetval
74605>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74605>>>>>>>        // This error would otherwise be raised when we have an older
74605>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKUSESURI function
74605>>>>>>>        Send Ignore_error to Error_object_Id 20491
74606>>>>>>>        Call_Driver 0 sDRiverID Function DFBTRFN_CKUSESURI Callback 0 Passing sVoid1 sVoid2 0 Result iRetval
74611>>>>>>>        Send Trap_Error to Error_object_Id 20491
74612>>>>>>>        
74612>>>>>>>        Function_Return iRetval
74613>>>>>>>    End_Function
74614>>>>>>>    
74614>>>>>>>    
74614>>>>>>>    
74614>>>>>>>    // Extract the Nth part of a a.b.c.d revsion string.
74614>>>>>>>    //
74614>>>>>>>    // Returns : The part version number or -1 if there is no such part number.
74614>>>>>>>    //
74614>>>>>>>    
74614>>>>>>>    Function ExtractPartFromRevision Integer iPartNum String sRevision Returns Integer
74616>>>>>>>        Integer iPartRev
74616>>>>>>>        Integer iCurrentPart
74616>>>>>>>        Integer iSeparatorPos
74616>>>>>>>        
74616>>>>>>>        If (iPartNum > 4) ;            Function_Return -1
74619>>>>>>>        
74619>>>>>>>        Move 0 to iCurrentPart
74620>>>>>>>        Repeat
74620>>>>>>>>
74620>>>>>>>            Move (Pos(".", sRevision)) to iSeparatorPos
74621>>>>>>>            If (iSeparatorPos > 0) Begin
74623>>>>>>>                Move (Left(sRevision, iSeparatorPos - 1)) to iPartRev
74624>>>>>>>                Move (Right(sRevision, Length(sRevision) - iSeparatorPos)) to sRevision
74625>>>>>>>                Increment iCurrentPart
74626>>>>>>>            End
74626>>>>>>>>
74626>>>>>>>            Else If (sRevision <> "") Begin
74629>>>>>>>                Move sRevision to iPartRev
74630>>>>>>>                Move "" to sRevision
74631>>>>>>>                Increment iCurrentPart
74632>>>>>>>            End
74632>>>>>>>>
74632>>>>>>>            Else ;                Move -1 to iPartRev
74634>>>>>>>        Until (iCurrentPart >= iPartNum or iPartRev = -1)
74636>>>>>>>        
74636>>>>>>>        Function_Return iPartRev
74637>>>>>>>    End_Function
74638>>>>>>>    
74638>>>>>>>    
74638>>>>>>>    
74638>>>>>>>    //
74638>>>>>>>    //  Returns the major revision of the CK
74638>>>>>>>    //
74638>>>>>>>    
74638>>>>>>>    Function CKMajorRevision Returns Integer
74640>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 1, CKRevision(Current_Object)))
74641>>>>>>>    End_Function
74642>>>>>>>    
74642>>>>>>>    
74642>>>>>>>    
74642>>>>>>>    //  Returns the minor revision of the CK
74642>>>>>>>    //
74642>>>>>>>    
74642>>>>>>>    Function CKMinorRevision Returns Integer
74644>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 2, CKRevision(Current_Object)))
74645>>>>>>>    End_Function
74646>>>>>>>    
74646>>>>>>>    
74646>>>>>>>    //  Returns the release revision of the CK
74646>>>>>>>    //
74646>>>>>>>    
74646>>>>>>>    Function CKReleaseRevision Returns Integer
74648>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 3, CKRevision(Current_Object)))
74649>>>>>>>    End_Function
74650>>>>>>>    
74650>>>>>>>    
74650>>>>>>>    //  Returns the major revision of the CK
74650>>>>>>>    //
74650>>>>>>>    
74650>>>>>>>    Function CKBuildRevision Returns Integer
74652>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 4, CKRevision(Current_Object)))
74653>>>>>>>    End_Function
74654>>>>>>>    
74654>>>>>>>    
74654>>>>>>>    //  Determines if the CK conforms to a passed minimal revsion.
74654>>>>>>>    //
74654>>>>>>>    
74654>>>>>>>    Function IsMinimalRevision Integer iMajor Integer iMinor Integer iRelease Integer iBuild Returns Integer
74656>>>>>>>        If (iMajor < CKMajorRevision(Current_object)) ;            Function_Return (True)
74659>>>>>>>        Else If (iMajor = CKMajorRevision(Current_object)) Begin
74662>>>>>>>            If (iMinor < CKMinorRevision(Current_object)) ;                Function_Return (True)
74665>>>>>>>            Else If (iMinor = CKMinorRevision(Current_object)) Begin
74668>>>>>>>                If (iRelease < CKReleaseRevision(Current_object)) ;                    Function_Return (True)
74671>>>>>>>                Else If (iRelease = CKReleaseRevision(Current_object) and iBuild <= CKBuildRevision(Current_object)) ;                    Function_Return (True)
74675>>>>>>>            End
74675>>>>>>>>
74675>>>>>>>        End
74675>>>>>>>>
74675>>>>>>>        
74675>>>>>>>        Function_Return (False)
74676>>>>>>>    End_Function
74677>>>>>>>    
74677>>>>>>>    //   Functions to query the Pervasive.SQL version:
74677>>>>>>>    //       PSQLRequesterVersionInfo    Integer iFileNum Returns String
74677>>>>>>>    //       PSQLLocalEngineVersionInfo  Integer iFileNum Returns String
74677>>>>>>>    //       PSQLServerEngineVersionInfo Integer iFileNum Returns String
74677>>>>>>>    //
74677>>>>>>>    //   All 3 functions return the version of a Pervasive.SQL component
74677>>>>>>>    //   in the following format:
74677>>>>>>>    //       <version>.<revision>.<type>
74677>>>>>>>    //   possible values for <type>:
74677>>>>>>>    //       9 for 32-bit Windows workstation/workgroup engine or Linux
74677>>>>>>>    //         server using Workgroup authentication mode
74677>>>>>>>    //       C for client cache engine
74677>>>>>>>    //       D for DOS workstation
74677>>>>>>>    //       N for client Requester
74677>>>>>>>    //       S for NetWare server
74677>>>>>>>    //       T for 32-bit Windows server engine
74677>>>>>>>    //       U for Linux server using PAM or BTPASSWD authentication
74677>>>>>>>    //
74677>>>>>>>    //   example:
74677>>>>>>>    //       8.50.T
74677>>>>>>>    //   will be returned for a Pervasive.SQL 8.5 Server Engine running on
74677>>>>>>>    //   32-bits Windows server.
74677>>>>>>>    //
74677>>>>>>>    //   The FileNumber parameter must specify an opened table or 0.
74677>>>>>>>    //   For PSQLServerEngineVersionInfo the FileNumber can not be 0.
74677>>>>>>>    //
74677>>>>>>>    //   If the version information is not available or can not be obtained
74677>>>>>>>    //   the functions will return "0.0.0"
74677>>>>>>>    
74677>>>>>>>    //  Returns the version information of the
74677>>>>>>>    //           Pervasive.SQL Client requester.
74677>>>>>>>    
74677>>>>>>>    Function PSQLRequesterVersionInfo Integer iFileNum Returns String
74679>>>>>>>        
74679>>>>>>>        String  sDriverID
74679>>>>>>>        String  sVersion
74679>>>>>>>        String  sVoid
74679>>>>>>>        Integer iRetval
74679>>>>>>>        
74679>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74679>>>>>>>        // This error would otherwise be raised when we have an older
74679>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74679>>>>>>>        Send Ignore_error to Error_object_Id 20491
74680>>>>>>>        Get psDriverID to sDriverID
74681>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74682>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLREQUESTERVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74687>>>>>>>        Send Trap_Error to Error_object_Id 20491
74688>>>>>>>        If (Trim(sVersion) = "") Begin
74690>>>>>>>            // Unable to get the revision. return all zeroes.
74690>>>>>>>            Move "0.0.0" to sVersion
74691>>>>>>>        End
74691>>>>>>>>
74691>>>>>>>        Function_Return sVersion
74692>>>>>>>    End_Function
74693>>>>>>>    
74693>>>>>>>    //           Pervasive.SQL Engine
74693>>>>>>>    
74693>>>>>>>    Function PSQLLocalEngineVersionInfo Integer iFileNum Returns String
74695>>>>>>>        
74695>>>>>>>        String  sDriverID
74695>>>>>>>        String  sVersion
74695>>>>>>>        String  sVoid
74695>>>>>>>        Integer iRetval
74695>>>>>>>        
74695>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74695>>>>>>>        // This error would otherwise be raised when we have an older
74695>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74695>>>>>>>        Send Ignore_error to Error_object_Id 20491
74696>>>>>>>        Get psDriverID to sDriverID
74697>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74698>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLLOCALENGINEVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74703>>>>>>>        Send Trap_Error to Error_object_Id 20491
74704>>>>>>>        If (Trim(sVersion) = "") Begin
74706>>>>>>>            // Unable to get the revision. return all zeroes.
74706>>>>>>>            Move "0.0.0" to sVersion
74707>>>>>>>        End
74707>>>>>>>>
74707>>>>>>>        Function_Return sVersion
74708>>>>>>>    End_Function
74709>>>>>>>    
74709>>>>>>>    //  Returns the version information of the
74709>>>>>>>    //           Pervasive.SQL Server Engine
74709>>>>>>>    
74709>>>>>>>    Function PSQLServerEngineVersionInfo Integer iFileNum Returns String
74711>>>>>>>        
74711>>>>>>>        String  sDriverID
74711>>>>>>>        String  sVersion
74711>>>>>>>        String  sVoid
74711>>>>>>>        Integer iRetval
74711>>>>>>>        
74711>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74711>>>>>>>        // This error would otherwise be raised when we have an older
74711>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74711>>>>>>>        Send Ignore_error to Error_object_Id 20491
74712>>>>>>>        Get psDriverID to sDriverID
74713>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74714>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLSERVERENGINEVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74719>>>>>>>        Send Trap_Error to Error_object_Id 20491
74720>>>>>>>        If (Trim(sVersion) = "") Begin
74722>>>>>>>            // Unable to get the revision. return all zeroes.
74722>>>>>>>            Move "0.0.0" to sVersion
74723>>>>>>>        End
74723>>>>>>>>
74723>>>>>>>        Function_Return sVersion
74724>>>>>>>    End_Function
74725>>>>>>>    
74725>>>>>>>End_Class
74726>>>>>>>
74726>>>>>>>
74726>>>>>Use MSSqldrv.pkg
Including file: MSSqldrv.pkg    (C:\Program Files\DataFlex 23.0\Pkg\MSSqldrv.pkg)
74726>>>>>>>//     Package that declares MS SQL driver constants and functions.
74726>>>>>>>//     This package can be used by developers who want to add Data Access
74726>>>>>>>//     MS SQL Client specific code to a DataFlex application.
74726>>>>>>>
74726>>>>>>>Use Cli.pkg
74726>>>>>>>Use SQL.pkg
74726>>>>>>>
74726>>>>>>>//   Driver Indentification
74726>>>>>>>
74726>>>>>>>//   Error number constants
74726>>>>>>>
74726>>>>>>>
74726>>>>>>>//   Possible DF_DRIVER_SQLSERVER_CLIENT_VERSION values
74726>>>>>>>
74726>>>>>>>
74726>>>>>>>
74726>>>>>>>
74726>>>>>>>
74726>>>>>>>
74726>>>>>>>// SQL Server spcific types.
74726>>>>>>>Define SQL_SS_TIMESTAMPOFFSET   for   (-155) //SQL server datetimeoffset type */
74726>>>>>>>Define SQL_SS_TIME2             for   (-154) //SQL server time type */
74726>>>>>>>Define SQL_SS_XML               for   (-152) //SQL server xml type */
74726>>>>>>>Define SQL_SS_VARIANT           for   (-150) //SQL server variant type */
74726>>>>>>>
74726>>>>>>>// SQL Server spcific types.
74726>>>>>>>Define SQL_TYPE_TIMESTAMP2      for   (-200) //SQL server datetime2 type */
74726>>>>>>>Define SQL_VARCHARMAX           for   (-201) //SQL server varchar(max) type */
74726>>>>>>>Define SQL_WVARCHARMAX          for   (-202) //SQL server wvarchar(max) type */
74726>>>>>>>Define SQL_VARBINARYMAX         for   (-203) //SQL server varbinary(max) type */
74726>>>>>>>Define SQL_TYPE_MONEY           for   (-204) //SQL server money type */
74726>>>>>>>Define SQL_TYPE_SMALLMONEY      for   (-205) //SQL server smallmoney type */
74726>>>>>>>Define SQL_TYPE_SMALLDATETIME   for   (-206) //SQL server smalldatetype type */
74726>>>>>>>
74726>>>>>>>
74726>>>>>>>//   MSSQL_SetConstraint <FileNum> <ConstraintText>
74726>>>>>>>//
74726>>>>>>>//     Setup a constraint for a file.
74726>>>>>>>
74726>>>>>>>
74726>>>>>>>Class cMSSQLHandler is a cCLIHandler
74727>>>>>>>    
74727>>>>>>>    Procedure Construct_Object
74729>>>>>>>        Forward Send Construct_Object
74731>>>>>>>        
74731>>>>>>>        Set psDriverID to MSSQLDRV_ID
74732>>>>>>>    End_Procedure
74733>>>>>>>    
74733>>>>>>>    
74733>>>>>>>    
74733>>>>>>>    //   Extract the list from the out connect string.
74733>>>>>>>    Function ExtractList String sOutConnStr Integer hoStore Returns Integer
74735>>>>>>>        String  sItem
74735>>>>>>>        Integer iStart
74735>>>>>>>        Integer iEnd
74735>>>>>>>        
74735>>>>>>>        If (hoStore = 0) ;            Move Current_object to hoStore
74738>>>>>>>        
74738>>>>>>>        Send Delete_Data to hoStore
74739>>>>>>>        Move (Pos("{", sOutConnStr)) to iStart
74740>>>>>>>        While (iStart > 0)
74744>>>>>>>            Move (Right(sOutConnStr, Length(sOutConnStr) - iStart)) to sOutConnStr
74745>>>>>>>            If (Left(sOutConnStr, 1) = "}") ;                Move 0 to iStart
74748>>>>>>>            Else Begin
74749>>>>>>>                Move (Pos(",", sOutConnStr)) to iStart
74750>>>>>>>                Move (Pos("}", sOutConnStr)) to iEnd
74751>>>>>>>                If ((iStart = 0) or (iEnd < iStart)) ;                    Move iEnd to iStart
74754>>>>>>>                
74754>>>>>>>                If (iStart > 0) ;                    Set Value of hoStore  (Item_Count(Current_Object)) to (Left(sOutConnStr, iStart - 1))
74757>>>>>>>                
74757>>>>>>>                If (iStart = iEnd) ;                    Move 0 to iStart
74760>>>>>>>            End
74760>>>>>>>>
74760>>>>>>>        Loop
74761>>>>>>>>
74761>>>>>>>        
74761>>>>>>>        Function_Return (Item_Count(hoStore))
74762>>>>>>>    End_Procedure
74763>>>>>>>    
74763>>>>>>>    
74763>>>>>>>    
74763>>>>>>>    //   Call the driver's browse connect function
74763>>>>>>>    Function BrowseConnect String sInConnStr Returns String
74765>>>>>>>        String  sDriver
74765>>>>>>>        String  sOutConnStr
74765>>>>>>>        Integer iArg
74765>>>>>>>        Integer iRetval
74765>>>>>>>        
74765>>>>>>>        Get psDriverID to sDriver
74766>>>>>>>        If (sDriver <> "") Begin
74768>>>>>>>            Move (Repeat(" ", 8192)) to sOutConnStr
74769>>>>>>>            Call_Driver 0 sDRiver Function CLI_BROWSECONNECT Callback 0 Passing sInConnStr sOutConnStr iArg Result iRetval
74774>>>>>>>        End
74774>>>>>>>>
74774>>>>>>>        
74774>>>>>>>        Function_Return sOutConnStr
74775>>>>>>>    End_Function// BrowseConnect
74776>>>>>>>    
74776>>>>>>>    
74776>>>>>>>    Function BrowseConnectLocal String sInConnStr Returns String
74778>>>>>>>        String  sDriver
74778>>>>>>>        String  sOutConnStr
74778>>>>>>>        Integer iArg
74778>>>>>>>        Integer iRetval
74778>>>>>>>        
74778>>>>>>>        Move 1 to iArg // Browses only local
74779>>>>>>>        
74779>>>>>>>        Get psDriverID to sDriver
74780>>>>>>>        If (sDriver <> "") Begin
74782>>>>>>>            Move (Repeat(" ", 8192)) to sOutConnStr
74783>>>>>>>            Call_Driver 0 sDRiver Function CLI_BROWSECONNECT Callback 0 Passing sInConnStr sOutConnStr iArg Result iRetval
74788>>>>>>>        End
74788>>>>>>>>
74788>>>>>>>        
74788>>>>>>>        Function_Return sOutConnStr
74789>>>>>>>    End_Function// BrowseConnect
74790>>>>>>>    
74790>>>>>>>    
74790>>>>>>>    Function EnumerateServersNetworkOrLocal Integer iNetworkLocal  Returns Integer
74792>>>>>>>        
74792>>>>>>>        String  sServerList
74792>>>>>>>        Integer iNumServers
74792>>>>>>>        Integer iDriver
74792>>>>>>>        Integer iClientVersion
74792>>>>>>>        String  sDriver
74792>>>>>>>        
74792>>>>>>>        Get DriverIndex MSSQLDRV_ID to iDriver
74793>>>>>>>        
74793>>>>>>>        If (iDriver) Begin
74795>>>>>>>            
74795>>>>>>>            Get_Attribute DF_DRIVER_SQLSERVER_CLIENT_VERSION of iDriver to iClientVersion
74798>>>>>>>            
74798>>>>>>>            Get SqlServerClientDriverName iClientVersion to sDriver
74799>>>>>>>            
74799>>>>>>>            Move ("DRIVER={" + sDriver + "};") to sDriver
74800>>>>>>>            If (iNetworkLocal = 0) Begin
74802>>>>>>>                Get BrowseConnect sDriver to sServerList
74803>>>>>>>            End
74803>>>>>>>>
74803>>>>>>>            Else Begin
74804>>>>>>>                Get BrowseConnectLocal sDriver to sServerList
74805>>>>>>>            End
74805>>>>>>>>
74805>>>>>>>            Get ExtractList sServerList Current_object to iNumServers
74806>>>>>>>        End
74806>>>>>>>>
74806>>>>>>>        
74806>>>>>>>        Function_Return iNumServers
74807>>>>>>>        
74807>>>>>>>    End_Function
74808>>>>>>>    
74808>>>>>>>    //   Enumerate the available SQL Server database servers
74808>>>>>>>    //   This function will return all SQL Server instances on the network.
74808>>>>>>>    //   This may take a long time.
74808>>>>>>>    //   To enumerate only local SQL Server instances use EnumerateServersLocal
74808>>>>>>>    Function EnumerateServers Returns Integer
74810>>>>>>>        
74810>>>>>>>        Integer iNumServers
74810>>>>>>>        Integer iNetworkLocal
74810>>>>>>>        
74810>>>>>>>        Move 0 to iNetworkLocal // 0 = enumerate network servers
74811>>>>>>>        
74811>>>>>>>        Get EnumerateServersNetworkOrLocal iNetworkLocal to iNumServers
74812>>>>>>>        
74812>>>>>>>        Function_Return iNumServers
74813>>>>>>>        
74813>>>>>>>    End_Function
74814>>>>>>>    
74814>>>>>>>    
74814>>>>>>>    //   Enumerate the available SQL Server database servers
74814>>>>>>>    //   This function will return only return SQL Server instance on the local machine
74814>>>>>>>    //   To enumerate all SQL Server instances in a network use EnumerateServers
74814>>>>>>>    Function EnumerateServersLocal Returns Integer
74816>>>>>>>        
74816>>>>>>>        Integer iNumServers
74816>>>>>>>        Integer iNetworkLocal
74816>>>>>>>        
74816>>>>>>>        Move 1 to iNetworkLocal // 1 = enumerate local servers
74817>>>>>>>        
74817>>>>>>>        Get EnumerateServersNetworkOrLocal iNetworkLocal to iNumServers
74818>>>>>>>        
74818>>>>>>>        Function_Return iNumServers
74819>>>>>>>        
74819>>>>>>>    End_Function
74820>>>>>>>    
74820>>>>>>>    
74820>>>>>>>    
74820>>>>>>>    //   Enumerate database in a given server.
74820>>>>>>>    Function EnumerateDatabases String sServer String sUser String sPassWord Returns Integer
74822>>>>>>>        Integer hoSQL
74822>>>>>>>        String  sConnect
74822>>>>>>>        String  sDatabase
74822>>>>>>>        Integer hdbc
74822>>>>>>>        Integer hstmt
74822>>>>>>>        Integer iFetchResult
74822>>>>>>>        
74822>>>>>>>        If (Num_Arguments < 3) ;            Move "" to sPassWord
74825>>>>>>>        If (Num_Arguments < 2) ;            Move "" to sUser
74828>>>>>>>        
74828>>>>>>>        If (sUser <> "") ;            Move ("SERVER=" + Trim(sServer) + ";UID=" + Trim(sUser) + ";PWD=" + Trim(sPassword) + ";") to sConnect
74831>>>>>>>        Else ;            Move ("SERVER=" + Trim(sServer) + ";Trusted_Connection=yes") to sConnect
74833>>>>>>>        
74833>>>>>>>        Object oEnumDBSQLmanager is a cSQLHandleManager
74835>>>>>>>            Move Current_Object to hoSQL
74836>>>>>>>        End_Object
74837>>>>>>>        
74837>>>>>>>        If (hoSQL <> 0) Begin
74839>>>>>>>            Get SQLConnect of hoSQL "MSSQLDRV" sConnect to hdbc
74840>>>>>>>            If (hdbc <> 0) Begin
74842>>>>>>>                Get SQLOpen of hdbc to hstmt
74843>>>>>>>                If (hstmt <> 0) Begin
74845>>>>>>>                    //   We could do a direct select on the sysdatabases table but we use
74845>>>>>>>                    //   the stored procedure sp_database instead. SQL Server recommends this
74845>>>>>>>                    //   approach in case meta data might change, the stored procedure will
74845>>>>>>>                    //   stay the same.
74845>>>>>>>                    Send SQLSetProcedureName to hstmt "sp_databases"
74846>>>>>>>                    Send SQLCall to hstmt
74847>>>>>>>                    Repeat
74847>>>>>>>>
74847>>>>>>>                        Get SQLFetch of hstmt to iFetchResult
74848>>>>>>>                        If (iFetchResult <> 0) Begin
74850>>>>>>>                            Get SQLColumnValue of hstmt 1 to sDatabase
74851>>>>>>>                            Set Value  (Item_Count(Current_Object)) to sDatabase
74852>>>>>>>                        End
74852>>>>>>>>
74852>>>>>>>                    Until (iFetchResult = 0)
74854>>>>>>>                    
74854>>>>>>>                    Send SQLClose to hstmt
74855>>>>>>>                End
74855>>>>>>>>
74855>>>>>>>                Send SQLDisconnect to hdbc
74856>>>>>>>            End
74856>>>>>>>>
74856>>>>>>>        End
74856>>>>>>>>
74856>>>>>>>        Send Destroy_Object to hoSQL
74857>>>>>>>        
74857>>>>>>>        Function_Return (Item_Count(Current_Object))
74858>>>>>>>    End_Function
74859>>>>>>>    
74859>>>>>>>    
74859>>>>>>>    Function SqlServerClientVersionName Integer iClientVersion  Returns String
74861>>>>>>>        
74861>>>>>>>        String  sSqlServerClientVersionName
74861>>>>>>>        
74861>>>>>>>        
74861>>>>>>>        Case Begin
74861>>>>>>>
74861>>>>>>>            Case (iClientVersion = SQLSERVER2019CLIENT)
74863>>>>>>>                Move SQLSERVER2019CLIENTNAME to sSqlServerClientVersionName
74864>>>>>>>                Case Break
74865>>>>>>>            
74865>>>>>>>            Case (iClientVersion = SQLSERVER2017CLIENT)
74868>>>>>>>                Move SQLSERVER2017CLIENTNAME to sSqlServerClientVersionName
74869>>>>>>>                Case Break
74870>>>>>>>                
74870>>>>>>>            Case (iClientVersion = SQLSERVER2016CLIENT)
74873>>>>>>>                Move SQLSERVER2016CLIENTNAME to sSqlServerClientVersionName
74874>>>>>>>                Case Break
74875>>>>>>>            
74875>>>>>>>            Case (iClientVersion = SQLSERVER2014CLIENT)
74878>>>>>>>                Move SQLSERVER2014CLIENTNAME to sSqlServerClientVersionName
74879>>>>>>>                Case Break
74880>>>>>>>            
74880>>>>>>>            Case (iClientVersion = SQLSERVER2012CLIENT)
74883>>>>>>>                Move SQLSERVER2012CLIENTNAME to sSqlServerClientVersionName
74884>>>>>>>                Case Break
74885>>>>>>>            
74885>>>>>>>            Case (iClientVersion = SQLSERVER2008CLIENT)
74888>>>>>>>                Move SQLSERVER2008CLIENTNAME to sSqlServerClientVersionName
74889>>>>>>>                Case Break
74890>>>>>>>            
74890>>>>>>>            Case (iClientVersion = SQLSERVER2005CLIENT)
74893>>>>>>>                Move SQLSERVER2005CLIENTNAME to sSqlServerClientVersionName
74894>>>>>>>                Case Break
74895>>>>>>>            
74895>>>>>>>            Case (iClientVersion = SQLSERVER2000CLIENT)
74898>>>>>>>                Move SQLSERVER2000CLIENTNAME to sSqlServerClientVersionName
74899>>>>>>>                Case Break
74900>>>>>>>            
74900>>>>>>>            Case Else
74900>>>>>>>                Move (SFormat("%1 (version %2) ",SQLSERVERUNKNOWNCLIENTNAME,iClientVersion)) to sSqlServerClientVersionName
74901>>>>>>>                
74901>>>>>>>        Case End
74901>>>>>>>        
74901>>>>>>>        
74901>>>>>>>        Function_Return sSqlServerClientVersionName
74902>>>>>>>        
74902>>>>>>>    End_Function
74903>>>>>>>
74903>>>>>>>
74903>>>>>>>    Function SqlServerClientDriverName Integer iClientVersion  Returns String
74905>>>>>>>        
74905>>>>>>>        String  sSqlServerClientDriverName
74905>>>>>>>        
74905>>>>>>>        Case Begin
74905>>>>>>>
74905>>>>>>>            Case (iClientVersion = SQLSERVER2019CLIENT)
74907>>>>>>>                Move SQLSERVER2019DRVRSTR to sSqlServerClientDriverName
74908>>>>>>>                Case Break
74909>>>>>>>
74909>>>>>>>            Case (iClientVersion = SQLSERVER2017CLIENT)
74912>>>>>>>                Move SQLSERVER2017DRVRSTR to sSqlServerClientDriverName
74913>>>>>>>                Case Break
74914>>>>>>>                
74914>>>>>>>            Case (iClientVersion = SQLSERVER2016CLIENT)
74917>>>>>>>                Move SQLSERVER2016DRVRSTR to sSqlServerClientDriverName
74918>>>>>>>                Case Break
74919>>>>>>>            
74919>>>>>>>            Case (iClientVersion = SQLSERVER2014CLIENT)
74922>>>>>>>                Move SQLSERVER2014DRVRSTR to sSqlServerClientDriverName
74923>>>>>>>                Case Break
74924>>>>>>>            
74924>>>>>>>            Case (iClientVersion = SQLSERVER2012CLIENT)
74927>>>>>>>                Move SQLSERVER2012DRVRSTR to sSqlServerClientDriverName
74928>>>>>>>                Case Break
74929>>>>>>>            
74929>>>>>>>            Case (iClientVersion = SQLSERVER2008CLIENT)
74932>>>>>>>                Move SQLSERVER2008DRVRSTR to sSqlServerClientDriverName
74933>>>>>>>                Case Break
74934>>>>>>>            
74934>>>>>>>            Case (iClientVersion = SQLSERVER2005CLIENT)
74937>>>>>>>                Move SQLSERVER2005DRVRSTR to sSqlServerClientDriverName
74938>>>>>>>                Case Break
74939>>>>>>>            
74939>>>>>>>            Case (iClientVersion = SQLSERVER2000CLIENT)
74942>>>>>>>                Move SQLSERVER2000DRVRSTR to sSqlServerClientDriverName
74943>>>>>>>                Case Break
74944>>>>>>>            
74944>>>>>>>            Case Else
74944>>>>>>>                Move SQLSERVER2000DRVRSTR to sSqlServerClientDriverName
74945>>>>>>>                
74945>>>>>>>        Case End
74945>>>>>>>        
74945>>>>>>>        
74945>>>>>>>        Function_Return sSqlServerClientDriverName
74946>>>>>>>        
74946>>>>>>>    End_Function
74947>>>>>>>    
74947>>>>>>>    
74947>>>>>>>End_Class
74948>>>>>>>
74948>>>>>>>
74948>>>>>
74948>>>>>Register_Function phoWorkspace Returns Handle
74948>>>>>Register_Function Help_filename Returns String
74948>>>>>Register_Function GetHelpFile Returns String
74948>>>>>Register_Function pbEnterKeyAsTabKey Returns Boolean
74948>>>>>
74948>>>>>// Do not call directly, use the wrapper function instead
74948>>>>>External_Function WNetGetUserW "WNetGetUserW" MPR.DLL ;    Pointer lpName ;    Pointer lpUser_Name ;    Pointer lpLength ;    Returns DWord
74949>>>>>
74949>>>>>// Wrapper Function WNetGetUser
74949>>>>>Function WNetGetUser Global ;    Pointer lpName ;    Pointer lpUser_Name ;    Pointer lpLength ;    Returns DWord
74951>>>>>    
74951>>>>>    DWord   dwResult     
74951>>>>>    UWide   uwName uwUserName
74951>>>>>    UWide   uwName uwUserName
74951>>>>>        
74951>>>>>    Send StringToWide lpName (&uwName)
74952>>>>>    
74952>>>>>    Send WideSetBuffer lpUser_Name lpLength (&uwUserName)    
74953>>>>>    
74953>>>>>    Move (WNetGetUserW (uwName.lpUText, uwUserName.lpUText, lpLength)) to dwResult
74954>>>>>    
74954>>>>>    Send WideToString (&uwUserName) lpUser_Name
74955>>>>>    
74955>>>>>    Function_Return dwResult
74956>>>>>End_Function
74957>>>>>
74957>>>>>//    This function reads the current username Of windows and returns that
74957>>>>>//    name or an text unknown user
74957>>>>>Function Network_User_Name for cDesktop Returns String
74959>>>>>    WString wName
74959>>>>>    Integer iRetval iLength
74959>>>>>    
74959>>>>>    Move 0 to iLength
74960>>>>>    Move (WNetGetUserW (0, 0, AddressOf (iLength))) to iRetval
74961>>>>>    Move (ZeroString(iLength)) to wName
74962>>>>>    Move (WNetGetUserW (0, AddressOf (wName), AddressOf (iLength))) to iRetval
74963>>>>>    
74963>>>>>    If (iRetval = NO_ERROR) Begin
74965>>>>>        Function_Return (CString (wName))
74966>>>>>    End
74966>>>>>>
74966>>>>>    
74966>>>>>    Function_Return "User Unknown"
74967>>>>>End_Function
74968>>>>>
74968>>>>>External_Function GlobalMemoryStatus "GlobalMemoryStatus" Kernel32.Dll Pointer lpsMemoryStatus Returns Integer
74969>>>>>
74969>>>>>External_Function GlobalMemoryStatusEx "GlobalMemoryStatusEx" Kernel32.Dll Pointer lpMemoryStatus Returns Integer
74970>>>>>
74970>>>>>Class SysinfoDisplay is a cTextEdit
74971>>>>>    Procedure Construct_Object
74973>>>>>        Forward Send Construct_Object
74975>>>>>        
74975>>>>>        Set Location to 6 6
74976>>>>>        Set Size to 110 255
74977>>>>>        Set Read_Only_State to True
74978>>>>>        Set pbWrap to False
74979>>>>>    End_Procedure
74980>>>>>    
74980>>>>>    //    This method will show the name Of the current directory in the system
74980>>>>>    //    information box
74980>>>>>    Procedure Show_Current_Directory
74982>>>>>        String sDir
74982>>>>>        
74982>>>>>        Get_Current_Directory to sDir
74983>>>>>        
74983>>>>>        Send AppendTextLn (SFormat (C_$CurrentDirectory, sDir))
74984>>>>>    End_Procedure
74985>>>>>    
74985>>>>>    Procedure Show_Windows_Directory
74987>>>>>        String sWindir
74987>>>>>        
74987>>>>>        Get_Windows_Directory to sWindir
74988>>>>>        
74988>>>>>        Send AppendTextLn (SFormat (C_$WindowsDirectory, sWindir))
74989>>>>>    End_Procedure
74990>>>>>    
74990>>>>>    Procedure Show_Current_User
74992>>>>>        Send AppendTextLn (SFormat (C_$NetworkUserName, Network_User_Name (Self)))
74993>>>>>    End_Procedure
74994>>>>>    
74994>>>>>    Procedure Show_Number_Format
74996>>>>>        Integer iFormat
74996>>>>>        String sFormatText
74996>>>>>        
74996>>>>>        Get_Attribute DF_THOUSANDS_SEPARATOR to iFormat
74999>>>>>        Move (Character (iFormat)) to sFormatText
75000>>>>>        Send AppendTextLn (SFormat (C_$ThousandsSeparator, sFormatText, iFormat))
75001>>>>>        
75001>>>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iFormat
75004>>>>>        Move (Character (iFormat)) to sFormatText
75005>>>>>        Send AppendTextLn (SFormat (C_$DecimalSeparator, sFormatText))
75006>>>>>    End_Procedure
75007>>>>>    
75007>>>>>    Procedure Show_Filelist_Name
75009>>>>>        String sFilename
75009>>>>>        
75009>>>>>        Get_Attribute DF_FILELIST_NAME to sFilename
75012>>>>>        
75012>>>>>        Send AppendTextLn (SFormat (C_$CurrentFilelist, sFilename))
75013>>>>>        Send AppendTextLn ""
75014>>>>>    End_Procedure
75015>>>>>    
75015>>>>>    Procedure Show_Lock_Delay
75017>>>>>        Integer iLockdelay
75017>>>>>        
75017>>>>>        Get_Attribute DF_LOCK_DELAY to iLockdelay
75020>>>>>        
75020>>>>>        Send AppendTextLn (SFormat (C_$DatabaseLockingDelay, iLockDelay))
75021>>>>>    End_Procedure
75022>>>>>    
75022>>>>>    Procedure Show_Lock_Timeout
75024>>>>>        Integer iLockTimeout
75024>>>>>        
75024>>>>>        Get_Attribute DF_LOCK_TIMEOUT to iLockTimeout
75027>>>>>        
75027>>>>>        Send AppendTextLn (SFormat (C_$DatabaseLockingTimeout, iLockTimeOut))
75028>>>>>    End_Procedure
75029>>>>>    
75029>>>>>    Procedure Show_Screen_Size
75031>>>>>        Integer iYscreensize iXscreensize
75031>>>>>        
75031>>>>>        Move (GetSystemMetrics (SM_CXSCREEN)) to iXscreensize
75032>>>>>        Move (GetSystemMetrics (SM_CYSCREEN)) to iYscreensize
75033>>>>>        
75033>>>>>        Send AppendTextLn (SFormat (C_$VideoResolution, iXscreensize, iYscreensize))
75034>>>>>    End_Procedure
75035>>>>>    
75035>>>>>    Procedure Show_Page_Size
75037>>>>>        Send AppendTextLn (SFormat (C_$PageEndFormFeed, Pageend, Pagefeed))
75038>>>>>    End_Procedure
75039>>>>>    
75039>>>>>    Procedure Show_Date
75041>>>>>        Date dToday
75041>>>>>        
75041>>>>>        Move (CurrentDateTime()) to  dToday
75042>>>>>        
75042>>>>>        Send AppendTextLn (SFormat (C_$CurrentSystemDate, String (dToday)))
75043>>>>>    End_Procedure
75044>>>>>    
75044>>>>>    Procedure Show_Date_Format
75046>>>>>        Integer iDateFormat
75046>>>>>        String sDateFormat
75046>>>>>        
75046>>>>>        Get_Attribute DF_DATE_FORMAT to iDateFormat
75049>>>>>        Case Begin
75049>>>>>            Case (iDateFormat = DF_DATE_USA)
75051>>>>>                Move C_$USA to sDateFormat
75052>>>>>                Case Break
75053>>>>>            Case (iDateFormat = DF_DATE_EUROPEAN)
75056>>>>>                Move C_$European to sDateFormat
75057>>>>>                Case Break
75058>>>>>            Case (iDateFormat = DF_DATE_MILITARY)
75061>>>>>                Move C_$Military to sDateFormat
75062>>>>>                Case Break
75063>>>>>            Case Else
75063>>>>>                Move C_$UnknownDateType to sDateFormat
75064>>>>>                Case Break
75065>>>>>        Case End
75065>>>>>        
75065>>>>>        Send AppendTextLn (SFormat (C_$DateFormat, sDateformat))
75066>>>>>    End_Procedure
75067>>>>>    
75067>>>>>    Procedure Show_Systemresources
75069>>>>>        tWinMemoryStatusEx MemoryStatusInfo
75069>>>>>        tWinMemoryStatusEx MemoryStatusInfo
75069>>>>>        Integer iRetval
75069>>>>>        
75069>>>>>        Move (SizeOfType (tWinMemoryStatusEx)) to MemoryStatusInfo.dwLength
75070>>>>>        Move (GlobalMemoryStatusEx (AddressOf (MemoryStatusInfo))) to iRetval
75071>>>>>        If (iRetval = 0) Begin
75073>>>>>            Move (ShowLastError ()) to iRetval
75074>>>>>        End
75074>>>>>>
75074>>>>>        
75074>>>>>        Send AppendTextLn (SFormat (C_$AvailableMemory, MemoryStatusInfo.ullTotalPhys))
75075>>>>>        Send AppendTextLn (SFormat (C_$MemoryUtilization, MemoryStatusInfo.dwMemoryLoad))
75076>>>>>        Send AppendTextLn (SFormat (C_$AvailablePhysicalMemory, Integer ( Real (MemoryStatusInfo.ullAvailPhys) / Real (MemoryStatusInfo.ullTotalPhys) * 100.0)))
75077>>>>>        Send AppendTextLn (SFormat (C_$AvailablePagefileSpace, Integer ( Real (MemoryStatusInfo.ullAvailPageFile) / Real (MemoryStatusInfo.ullTotalPageFile) * 100.0)))
75078>>>>>        Send AppendTextLn (SFormat (C_$AvailableVirtualMemory, Integer ( Real (MemoryStatusInfo.ullAvailVirtual) / Real (MemoryStatusInfo.ullTotalVirtual) * 100.0)))
75079>>>>>    End_Procedure
75080>>>>>    
75080>>>>>    Procedure Show_Registration
75082>>>>>        String sRegName
75082>>>>>        Integer iSN iMaxUsers
75082>>>>>        
75082>>>>>        Registration sRegName iSN
75083>>>>>>
75083>>>>>        
75083>>>>>        Get_Licensed_Max_Users to iMaxUsers
75084>>>>>        
75084>>>>>        Send AppendTextLn ""
75085>>>>>        Send AppendTextLn (SFormat (C_$Serial, iSN))
75086>>>>>        Send AppendTextLn (SFormat (C_$RegName, sRegName))
75087>>>>>        Send AppendTextLn (SFormat (C_$MaxNumUsers, iMaxUsers))
75088>>>>>    End_Procedure
75089>>>>>    
75089>>>>>    // If workspaces are used, we will send the message EnumerateWorkspaceData
75089>>>>>    // To the workspace object passing the an object and message To send back
75089>>>>>    // To this object. It is expected that the workspace object will send this
75089>>>>>    // message for every line Of information it wants displayed (passing the
75089>>>>>    // information To be displayed
75089>>>>>    Register_Procedure EnumerateWorkspaceData Handle hObjId Handle hmMessId
75089>>>>>    
75089>>>>>    Procedure Show_ServicePack
75091>>>>>        String sKey sVersionDescription sVersion
75091>>>>>        Handle hoRegistry
75091>>>>>        Boolean bExists bOpened
75091>>>>>        
75091>>>>>        Get Create (RefClass (cRegistry)) to hoRegistry
75092>>>>>        Set phRootKey of hoRegistry to HKEY_LOCAL_MACHINE
75093>>>>>        Set pfAccessRights of hoRegistry to KEY_READ
75094>>>>>        
75094>>>>>        Move C_DFVersionRegistryRoot to sKey
75095>>>>>        Get KeyExists of hoRegistry sKey to bExists
75096>>>>>        If (bExists) Begin
75098>>>>>            Get OpenKey of hoRegistry sKey to bOpened
75099>>>>>            If (bOpened) Begin
75101>>>>>                Get ValueExists of hoRegistry "CurrentVersionDescription" to bExists
75102>>>>>                If (bExists) Begin
75104>>>>>                    Get ReadString of hoRegistry "CurrentVersionDescription" to sVersionDescription
75105>>>>>                End
75105>>>>>>
75105>>>>>                
75105>>>>>                Get ValueExists of hoRegistry "CurrentVersion" to bExists
75106>>>>>                If (bExists) Begin
75108>>>>>                    Get ReadString of hoRegistry "CurrentVersion" to sVersion
75109>>>>>                End
75109>>>>>>
75109>>>>>                Send CloseKey of hoRegistry
75110>>>>>            End
75110>>>>>>
75110>>>>>        End
75110>>>>>>
75110>>>>>        Send Destroy of hoRegistry
75111>>>>>        
75111>>>>>        If (sVersionDescription <> "") Begin
75113>>>>>            Send AppendTextLn (sVersionDescription * "-" * sVersion)
75114>>>>>            Send AppendTextLn ""
75115>>>>>        End
75115>>>>>>
75115>>>>>    End_Procedure
75116>>>>>    
75116>>>>>    
75116>>>>>    Procedure Show_WorkspaceInformation
75118>>>>>        Integer hoWorkspace
75118>>>>>        
75118>>>>>        If (ghoApplication <> 0) Begin
75120>>>>>            Get phoWorkspace of ghoApplication to hoWorkspace
75121>>>>>            If (hoWorkspace <> 0) Begin
75123>>>>>                Send EnumerateWorkspaceData of hoWorkspace Self (Refproc (AppendTextLn))
75124>>>>>                Send AppendTextLn ""
75125>>>>>            End
75125>>>>>>
75125>>>>>        End
75125>>>>>>
75125>>>>>    End_Procedure
75126>>>>>    
75126>>>>>    // If connection ids are used, we will send the message EnumerateConnections
75126>>>>>    // to the connection manager object passing the an object and message to send
75126>>>>>    // back to this object. It is expected that the connection manager object will
75126>>>>>    // send this message for every line Of information it wants displayed (passing
75126>>>>>    // the information To be displayed
75126>>>>>    Register_Procedure EnumerateConnections Integer hObjId Integer hmMessId
75126>>>>>    
75126>>>>>    Procedure Show_ConnectionIdInformation
75128>>>>>        If (ghoConnection > 0) Begin
75130>>>>>            Send AppendTextLn ""
75131>>>>>            Send EnumerateConnections of ghoConnection Self (RefProc(AppendTextLn))
75132>>>>>        End
75132>>>>>>
75132>>>>>    End_Procedure
75133>>>>>    
75133>>>>>    Function VersionStr Integer iVer Integer iRev Integer iBld Returns String
75135>>>>>        Function_Return (String (iVer) - "." - String (iRev) - "." - String (iBld))
75136>>>>>    End_Function
75137>>>>>    
75137>>>>>    Procedure Show_Versions
75139>>>>>        Integer iVersion iRevision iBuild
75139>>>>>        
75139>>>>>        Version_Information iVersion iRevision iBuild
75141>>>>>        
75141>>>>>        Send AppendTextLn (SFormat (C_$RuntimeVersion, VersionStr(Self,iVersion,iRevision,iBuild) ))
75142>>>>>        Send AppendTextLn (SFormat (C_$PackageVersion, VersionStr(Self,PKG_VERSION, PKG_REVISION, PKG_BUILD) ))
75143>>>>>        Send AppendTextLn (SFormat (C_$FMACVersion, VersionStr(Self,FMAC_VERSION, FMAC_REVISION, FMAC_BUILD) ))
75144>>>>>    End_Procedure
75145>>>>>    
75145>>>>>    Procedure Show_Platform
75147>>>>>        Send AppendTextLn (SFormat (C_$Platform,"64-bit"))
75148>>>>>    End_Procedure
75149>>>>>    
75149>>>>>    Function CKRevisionNumber String sDriverID Returns String
75151>>>>>        Handle hoCLIHandler
75151>>>>>        Handle hoDFBtrDrvHandler
75151>>>>>        String sCKRevision
75151>>>>>        
75151>>>>>        
75151>>>>>        If (sDriverID = "MSSQLDRV" or sDriverID = "ODBC_DRV" or sDriverID = "DB2_DRV") Begin
75153>>>>>            Get Create (RefClass(cCLIHandler)) to hoCLIHandler
75154>>>>>            Set psDriverID of hoCLIHandler to sDriverID
75155>>>>>            Move (CKRevision(hoCLIHandler)) to sCKRevision
75156>>>>>            Send Destroy of hoCLIHandler
75157>>>>>        End
75157>>>>>>
75157>>>>>        Else Begin
75158>>>>>            If (sDriverID = "DFBTRDRV") Begin
75160>>>>>                Get Create (RefClass(cDFBtrDrvHandler)) to hoDFBtrDrvHandler
75161>>>>>                Set psDriverID of hoDFBtrDrvHandler to sDriverID
75162>>>>>                Move (CKRevision(hoDFBtrDrvHandler)) to sCKRevision
75163>>>>>                Send Destroy of hoDFBtrDrvHandler
75164>>>>>            End
75164>>>>>>
75164>>>>>        End
75164>>>>>>
75164>>>>>        
75164>>>>>        Function_Return sCKRevision
75165>>>>>    End_Function
75166>>>>>    
75166>>>>>    
75166>>>>>    Function IsDataAccessCK String sDriverID Returns Boolean
75168>>>>>        
75168>>>>>        If (sDriverID = "DATAFLEX") Begin
75170>>>>>            Function_Return False
75171>>>>>        End
75171>>>>>>
75171>>>>>        
75171>>>>>        Function_Return (sDriverID = "MSSQLDRV" or sDriverID = "ODBC_DRV" or sDriverID = "DB2_DRV" or sDriverID = "DFBTRDRV")
75172>>>>>    End_Function
75173>>>>>    
75173>>>>>    
75173>>>>>    Procedure Show_Drivers
75175>>>>>        String sCurrentDriver sRevNumber
75175>>>>>        String sLoadedDrivers sClientDriver
75175>>>>>        Integer iNumberOfDrivers iCount iClientVersion iMSSQLIndex
75175>>>>>        Boolean bOK
75175>>>>>        Handle hoMsqlDrv
75175>>>>>        
75175>>>>>        Move "" to sLoadedDrivers
75176>>>>>        Get_Attribute DF_NUMBER_DRIVERS to iNumberOfDrivers
75179>>>>>        For iCount from 1 to iNumberOfDrivers
75185>>>>>>
75185>>>>>            Get_Attribute DF_DRIVER_NAME of iCount to sCurrentDriver
75188>>>>>            If (sLoadedDrivers <> "") Begin
75190>>>>>                Move (Append (sLoadedDrivers, ", ")) to sLoadedDrivers
75191>>>>>            End
75191>>>>>>
75191>>>>>            Get IsDataAccessCK sCurrentDriver to bOK
75192>>>>>            If (bOK) Begin
75194>>>>>                If (sCurrentDriver = "MSSQLDRV") Begin
75196>>>>>                    Move iCount to iMSSQLIndex
75197>>>>>                End
75197>>>>>>
75197>>>>>                Get CKRevisionNumber sCurrentDriver to sRevNumber
75198>>>>>                // if mssqldrv, show the client number
75198>>>>>                Move (sCurrentDriver * "(" + sRevNumber + ")") to sCurrentDriver
75199>>>>>            End
75199>>>>>>
75199>>>>>            Move (Append (sLoadedDrivers, sCurrentDriver)) to sLoadedDrivers
75200>>>>>        Loop
75201>>>>>>
75201>>>>>        Send AppendTextLn (SFormat (C_$DatabaseDriver, sLoadedDrivers))
75202>>>>>        If (iMSSQLIndex>0) Begin
75204>>>>>            Get_Attribute DF_DRIVER_SQLSERVER_CLIENT_VERSION of iMSSQLIndex to iClientVersion
75207>>>>>            Get Create (RefClass(cMSSQLHandler)) to hoMsqlDrv
75208>>>>>            Get SqlServerClientVersionName of hoMsqlDrv iClientVersion to sClientDriver
75209>>>>>            Send Destroy of hoMsqlDrv
75210>>>>>            Send AppendTextLn (SFormat("MSSQLDRV Client Version: %1", sClientDriver))
75211>>>>>        End
75211>>>>>>
75211>>>>>    End_Procedure
75212>>>>>    
75212>>>>>    Procedure Show_HelpFile
75214>>>>>        String sHelpFile
75214>>>>>        Integer eHelpType
75214>>>>>        
75214>>>>>        If (ghoApplication <> 0) Begin
75216>>>>>            Get peHelpType of ghoApplication to eHelpType
75217>>>>>            If (eHelpType = htHtmlHelp and ghoHtmlHelp) Begin
75219>>>>>                Get GetHelpFile of ghoHtmlHelp to sHelpFile
75220>>>>>            End
75220>>>>>>
75220>>>>>            Else If (eHelpType = htWinHelp and Help_object_id) Begin
75223>>>>>                Get Help_filename of Help_object_id to sHelpFile
75224>>>>>            End
75224>>>>>>
75224>>>>>            Else Begin
75225>>>>>                Move C_$ThereIsNoHelpfileDefined to sHelpFile
75226>>>>>            End
75226>>>>>>
75226>>>>>            
75226>>>>>            Send AppendTextLn ""
75227>>>>>            Send AppendTextLn (SFormat (C_$HelpFile, sHelpFile))
75228>>>>>        End
75228>>>>>>
75228>>>>>    End_Procedure
75229>>>>>    
75229>>>>>    Procedure Show_EnterAsTab
75231>>>>>        Boolean bEnterKeyAsTabKey
75231>>>>>        String sText
75231>>>>>        
75231>>>>>        If (ghoApplication <> 0) Begin
75233>>>>>            Get pbEnterKeyAsTabKey of ghoApplication to bEnterKeyAsTabKey
75234>>>>>            If (bEnterKeyAsTabKey) Begin
75236>>>>>                Move "True" to sText
75237>>>>>            End
75237>>>>>>
75237>>>>>            Else Begin
75238>>>>>                Move "False" to sText
75239>>>>>            End
75239>>>>>>
75239>>>>>            Send AppendTextLn (SFormat (C_$EnterKeyNavForward, sText))
75240>>>>>        End
75240>>>>>>
75240>>>>>    End_Procedure
75241>>>>>    
75241>>>>>    //    During activation we will remove the old information and add the newly
75241>>>>>    //    found systeminformation
75241>>>>>    Procedure Add_Focus Integer hoRoot
75243>>>>>        Forward Send Add_Focus hoRoot
75245>>>>>        
75245>>>>>        Send Delete_Data
75246>>>>>        
75246>>>>>        Set Changed_State to False
75247>>>>>        Set Read_Only_State to True
75248>>>>>        
75248>>>>>        Send Show_ServicePack
75249>>>>>        Send Show_Versions
75250>>>>>        Send Show_Platform
75251>>>>>        Send Show_Drivers
75252>>>>>        If (ghoConnection <> 0) Begin
75254>>>>>            Send Show_ConnectionIdInformation
75255>>>>>        End
75255>>>>>>
75255>>>>>        Send Show_HelpFile
75256>>>>>        Send Show_Current_Directory
75257>>>>>        Send Show_Filelist_Name
75258>>>>>        If (ghoApplication <> 0) Begin
75260>>>>>            Send Show_WorkSpaceInformation // added To show WS info
75261>>>>>        End
75261>>>>>>
75261>>>>>        Send Show_Current_User
75262>>>>>        Send Show_Windows_Directory
75263>>>>>        Send Show_Screen_Size
75264>>>>>        Send Show_Page_Size
75265>>>>>        Send Show_EnterAsTab
75266>>>>>        Send Show_Number_Format
75267>>>>>        Send Show_Date_Format
75268>>>>>        Send Show_Lock_Delay
75269>>>>>        Send Show_Lock_Timeout
75270>>>>>        Send Show_Date
75271>>>>>        Send Show_Systemresources
75272>>>>>        Send Show_Registration
75273>>>>>        Send Beginning_of_Data
75274>>>>>        
75274>>>>>        Set Icon to 'default.ico'
75275>>>>>    End_Procedure
75276>>>>>End_Class
75277>>>>>
75277>>>>>Class SysInfoDialog is a ModalPanel
75278>>>>>    Procedure Construct_Object
75280>>>>>        Forward Send Construct_Object
75282>>>>>        
75282>>>>>        Set Label to C_$SystemInformation
75283>>>>>        Set Size to 140 267
75284>>>>>        Set piMinSize to 140 267
75285>>>>>        Set Locate_Mode to CENTER_ON_SCREEN
75286>>>>>        Set Border_Style to Border_Thick
75287>>>>>        
75287>>>>>        Object oSysinfoDisplay is a SysInfoDisplay
75289>>>>>            Set peAnchors to anAll
75290>>>>>        End_Object
75291>>>>>        
75291>>>>>        Object oCloseButton is a Button
75293>>>>>            Set Label to C_$Close
75294>>>>>            Set Location to 120 210
75295>>>>>            Set Message 0 to (Refproc (Close_Panel))
75296>>>>>            Set Default_State to True
75297>>>>>            Set peAnchors to anBottomRight
75298>>>>>        End_Object
75299>>>>>        
75299>>>>>        On_Key kCancel Send Close_Panel
75300>>>>>    End_Procedure
75301>>>>>End_Class
75302>>>>>
75302>>>>>Class AboutDialog is a ModalPanel
75303>>>>>    Procedure Construct_Object
75305>>>>>        String sVdfRootDir
75305>>>>>        
75305>>>>>        Forward Send Construct_Object
75307>>>>>        
75307>>>>>        Set Label to C_$About
75308>>>>>        Set Size to 89 282
75309>>>>>        Set Locate_Mode to CENTER_ON_SCREEN
75310>>>>>        
75310>>>>>        Object oSysInfoDialog is a SysInfoDialog
75312>>>>>        End_Object
75313>>>>>        
75313>>>>>        Object oBox is a Container3d
75315>>>>>            Set Border_Style to Border_StaticEdge
75316>>>>>            Set Size to 63 272
75317>>>>>            Set Location to 4 5
75318>>>>>            
75318>>>>>            Object oAboutGraphic is a BitmapContainer
75320>>>>>                Set Border_Style to Border_None
75321>>>>>                Set Bitmap_Style to Bitmap_Center
75322>>>>>                Set Size to 48 48
75323>>>>>                Set Location to 7 2
75324>>>>>            End_Object
75325>>>>>            
75325>>>>>            Object oProductName is a TextBox
75327>>>>>                Set Label to C_$ProductName
75328>>>>>                Set Size to 10 45
75329>>>>>                Set Location to 8 53
75330>>>>>            End_Object
75331>>>>>            
75331>>>>>            Object oVersion is a TextBox
75333>>>>>                Set Label to C_$Version
75334>>>>>                Set Size to 10 25
75335>>>>>                Set Location to 21 53
75336>>>>>            End_Object
75337>>>>>            
75337>>>>>            Object oCopyright is a TextBox
75339>>>>>                Set Label to C_$Copyright
75340>>>>>                Set Size to 10 31
75341>>>>>                Set Location to 34 53
75342>>>>>            End_Object
75343>>>>>            
75343>>>>>            Object oAuthor is a TextBox
75345>>>>>                Set Label to C_$Author
75346>>>>>                Set Size to 10 22
75347>>>>>                Set Location to 46 53
75348>>>>>            End_Object
75349>>>>>        End_Object
75350>>>>>        
75350>>>>>        Object oOKButton is a Button
75352>>>>>            On_Item C_$OK Send Close_Panel
75353>>>>>            Set Size to 14 50
75354>>>>>            Set Location to 71 227
75355>>>>>        End_Object
75356>>>>>        
75356>>>>>        Object oSysInfoButton is a Button
75358>>>>>            On_Item C_$SystemInfo Send Show_Sysinfo
75359>>>>>            Set Size to 14 50
75360>>>>>            Set Location to 71 171
75361>>>>>        End_Object
75362>>>>>        
75362>>>>>        On_Key Kcancel Send KeyAction of oOKButton
75363>>>>>        
75363>>>>>        Set Logo to "DacAbout.bmp"  // square bitmaps Of 42x42 work best
75364>>>>>    End_Procedure
75365>>>>>    
75365>>>>>    Procedure Set ProductName String sProductName
75367>>>>>        Set Label of oProductName to sProductName
75368>>>>>    End_Procedure
75369>>>>>    
75369>>>>>    Procedure Set Version String sVersion
75371>>>>>        Set Label of oVersion to sVersion
75372>>>>>    End_Procedure
75373>>>>>    
75373>>>>>    Procedure Set Copyright String sCopyright
75375>>>>>        Set Label of oCopyright to sCopyright
75376>>>>>    End_Procedure
75377>>>>>    
75377>>>>>    Procedure Set Author String sAuthor
75379>>>>>        Set Label of oAuthor to sAuthor
75380>>>>>    End_Procedure
75381>>>>>    
75381>>>>>    Procedure Set Logo String sLogo
75383>>>>>        // square bitmaps Of 42x42 work best
75383>>>>>        Set Bitmap of oAboutGraphic to sLogo
75384>>>>>    End_Procedure
75385>>>>>    
75385>>>>>    Procedure Show_Sysinfo
75387>>>>>        Send Popup_Modal of oSysinfoDialog
75388>>>>>    End_Procedure
75389>>>>>    
75389>>>>>    Procedure End_Construct_Object
75391>>>>>        Handle hoVersionInfo
75391>>>>>        Boolean bIncluded
75391>>>>>        Integer iMajor iMinor iRelease iBuild
75391>>>>>        String sLabel
75391>>>>>        
75391>>>>>        Get Label of oVersion to sLabel
75392>>>>>        If (sLabel = C_$VERSION) Begin
75394>>>>>            // set it To the version info Of the program, if available
75394>>>>>            If (ghoApplication <> 0) Begin
75396>>>>>                Get phoVersionInfo of ghoApplication to hoVersionInfo
75397>>>>>                If (hoVersionInfo <> 0) Begin
75399>>>>>                    Get pbIncluded of hoVersionInfo to bIncluded
75400>>>>>                    If (bIncluded) Begin
75402>>>>>                        Get piVersionMajor of hoVersionInfo to iMajor
75403>>>>>                        Get piVersionMinor of hoVersionInfo to iMinor
75404>>>>>                        Get piVersionRelease of hoVersionInfo to iRelease
75405>>>>>                        Get piVersionBuild of hoVersionInfo to iBuild
75406>>>>>                        Move (SFormat (C_$VERSION + ": %1.%2.%3.%4", iMajor, iMinor, iRelease, iBuild)) to sLabel
75407>>>>>                        Set Version to sLabel
75408>>>>>                    End
75408>>>>>>
75408>>>>>                End
75408>>>>>>
75408>>>>>            End
75408>>>>>>
75408>>>>>        End
75408>>>>>>
75408>>>>>        
75408>>>>>        Forward Send End_Construct_Object
75410>>>>>    End_Procedure
75411>>>>>End_Class
75412>>>
75412>>>//  This is the default message. It is expected that you will
75412>>>//  create your own message to override this
75412>>>Procedure Activate_About
75415>>>    Send DoAbout "" "" "" "" ""
75416>>>End_Procedure
75417>>>
75417>>>//  It is expected that you will send this message (most
75417>>>//  likely from Activate_About. This creates an about object, activates it
75417>>>//  and destroys it when done. It is not exepected that you will augment this.
75417>>>Procedure DoAbout String sTitle String sVersion String sCopyRight String sAuthor String sBitmap
75420>>>    Integer hoObj hoMain
75420>>>    
75420>>>    // create object
75420>>>    Object About is an AboutDialog
75422>>>        // if no title passed use the label of the main panel
75422>>>        // (if a main panel exists).
75422>>>        If (sTitle = "") Begin
75424>>>            Get Main_Window of desktop to hoMain
75425>>>            If hoMain ;                Get Label of hoMain to sTitle
75428>>>        End
75428>>>>
75428>>>        Set productname to sTitle
75429>>>        Set version     to sVersion
75430>>>        Set copyright   to sCopyRight
75431>>>        Set author      to sAuthor
75432>>>        If (sBitmap <> '') ;            Set logo to sBitMap // square bitmaps of 42x42 work best
75435>>>        Move Self to hoObj // object Id
75436>>>    End_Object
75437>>>    Send Popup   of hoObj    // popup the about object
75438>>>    Send Destroy of hoObj // when done, it will be destroyed
75439>>>End_Procedure
75440>>>
75440>        Use ChatGPTTest.vw
Including file: ChatGPTTest.vw    (C:\Projects\ChatGPTAPI\AppSrc\ChatGPTTest.vw)
75440>>>Use Windows.pkg
75440>>>Use DFClient.pkg
75440>>>Use cTextEdit.pkg
75440>>>Use cJsonObject.pkg
75440>>>Use cCJGrid.pkg
75440>>>Use cCJGridColumnRowIndicator.pkg
Including file: cCJGridColumnRowIndicator.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJGridColumnRowIndicator.pkg)
75440>>>>>Use cCJGridColumn.pkg
75440>>>>>
75440>>>>>Class cCJGridColumnRowIndicator is a cCJGridColumn
75441>>>>>    
75441>>>>>    Procedure Construct_Object
75443>>>>>        Forward Send Construct_Object
75445>>>>>        
75445>>>>>        Property Integer piImage 0
75446>>>>>        
75446>>>>>        Set psCaption to ""
75447>>>>>        Set piWidth to 20
75448>>>>>        Set pbResizable to False
75449>>>>>        Set pbEditable to False
75450>>>>>        Set pbFocusable to False
75451>>>>>        Set pbAllowDrag to False
75452>>>>>        Set psToolTip to "Row Indicator"
75453>>>>>    End_Procedure
75454>>>>>    
75454>>>>>    Procedure OnCreateColumn
75456>>>>>        Integer iImage
75456>>>>>        Delegate Get AddImage "GridColumnRowIndicator.bmp" 0 to iImage
75458>>>>>        Set piImage to iImage
75459>>>>>    End_Procedure
75460>>>>>    
75460>>>>>    Procedure OnSetDisplayMetrics Handle hoGridItemMetrics Integer iRow String ByRef sValue
75462>>>>>        Integer iImage iFocusedRow
75462>>>>>        Handle hoDataSource
75462>>>>>        
75462>>>>>        Get phoDataSource to hoDataSource
75463>>>>>        Get SelectedRow of hoDataSource to iFocusedRow
75464>>>>>        Move -1 to iImage
75465>>>>>        If (iRow = iFocusedRow) Begin
75467>>>>>            Get piImage to iImage
75468>>>>>            Set ComItemIcon of hoGridItemMetrics to iImage
75469>>>>>        End
75469>>>>>>
75469>>>>>    End_Procedure
75470>>>>>    
75470>>>>>End_Class
75471>>>Use cCJGridColumn.pkg
75471>>>
75471>>>Deferred_View Activate_oChatGPTTest for ;Object oChatGPTTest is a dbView
75496>>>    
75496>>>    Property String   psChatGPTBasePath "v1/"
75498>>>    
75498>>>    Property String[] pasSpeakers
75500>>>    Property String[] pasMessages
75502>>>    Property String[] pasTimes
75504>>>    
75504>>>    Set Border_Style to Border_Thick
75505>>>    Set Size to 340 628
75506>>>    Set Location to 2 2
75507>>>    Set Label to "ChatGPT Test View"
75508>>>    
75508>>>    Procedure AddToHistory String sSpeaker String sMsg
75511>>>        String[]   asSpeakers asMsgs asTimes
75514>>>        
75514>>>        Get pasSpeakers to asSpeakers
75515>>>        Get pasMessages to asMsgs
75516>>>        Get pasTimes    to asTimes
75517>>>        
75517>>>        Move sSpeaker               to asSpeakers[-1]
75518>>>        Move sMsg                   to asMsgs[-1]
75519>>>        Move (CurrentDateTime())    to asTimes[-1]
75520>>>        
75520>>>        Set pasSpeakers to asSpeakers
75521>>>        Set pasMessages to asMsgs
75522>>>        Set pasTimes    to asTimes
75523>>>        
75523>>>        Send ReloadHist of oHistory
75524>>>    End_Procedure
75525>>>    
75525>>>    Procedure AskChatGPT
75528>>>        Handle  hoBody hoMsg hoMsgs hoResp
75528>>>        String  sAsk sResp sMod
75528>>>        
75528>>>        Set Value of oResponse to ""
75529>>>        
75529>>>        Get Value of oAsk to sAsk
75530>>>        If (sAsk = "") ;            Procedure_Return
75533>>>        
75533>>>        Get Value of oModels to sMod
75534>>>        
75534>>>        If (sMod = "") Begin
75536>>>            Send Info_Box "Please select a model to use (gpt-3.5-turbo for instance)" "Select Model"
75537>>>            Procedure_Return
75538>>>        End
75538>>>>
75538>>>        
75538>>>        Send AddToHistory "You" sAsk
75539>>>        
75539>>>        Send Cursor_Wait of oCursor
75540>>>
75540>>>        Get Create (RefClass(cJsonObject)) to hoMsg
75541>>>        Send InitializeJsonType of hoMsg jsonTypeObject
75542>>>        Send SetMemberValue of hoMsg "role" jsonTypeString "user"
75543>>>        Send SetMemberValue of hoMsg "content" jsonTypeString (Trim(sAsk))
75544>>>        
75544>>>        Get Create (RefClass(cJsonObject)) to hoMsgs
75545>>>        Send InitializeJsonType of hoMsgs jsonTypeArray
75546>>>        Send AddMember of hoMsgs hoMsg
75547>>>        Send Destroy of hoMsg
75548>>>        
75548>>>        Get Create (RefClass(cJsonObject)) to hoBody
75549>>>        Send InitializeJsonType of hoBody jsonTypeObject
75550>>>        Send SetMemberValue of hoBody "model" jsonTypeString (Trim(sMod))
75551>>>        Send SetMember of hoBody "messages" hoMsgs
75552>>>        Send Destroy of hoMsgs
75553>>>        
75553>>>        Get MakeJsonCall of oHttp "POST" (psChatGPTBasePath(Self) + "chat/completions") "" hoBody to hoResp
75554>>>        
75554>>>        If hoResp Begin
75556>>>            Move (JsonValueAtPath(hoResp, "choices[0].message.content")) to sResp
75557>>>            Send Destroy of hoResp
75558>>>            Set Value of oResponse to sResp
75559>>>            Send AddToHistory "ChatGPT" sResp
75560>>>        End
75560>>>>
75560>>>        Else Begin
75561>>>            Send Info_Box ("Error status" * String(piError(oHttp(Self))) + ":" * psError(oHttp(Self))) "ChatGPT Error"
75562>>>            Send AddToHistory "Program" (psError(oHttp(Self)))
75563>>>        End
75563>>>>
75563>>>        
75563>>>        Send Cursor_Ready of oCursor
75564>>>    End_Procedure
75565>>>
75565>>>    Object oModels is a ComboForm
75567>>>        Set Size to 12 100
75568>>>        Set Location to 4 521
75569>>>        Set Label to "ChatGPT Model to use:"
75570>>>        Set Label_Justification_Mode to JMode_Right
75571>>>        Set Label_Col_Offset to 5
75572>>>        Set peAnchors to anTopRight
75573>>>    
75573>>>        Procedure Combo_Fill_List
75576>>>            Handle  hoMods hoData
75576>>>            Integer i iMax
75576>>>            
75576>>>            Get MakeJsonCall of oHttp "GET" (psChatGPTBasePath(Self) + "models") "" 0 to hoMods
75577>>>            
75577>>>            If hoMods Begin
75579>>>                
75579>>>                If (HasMember(hoMods, "data")) Begin
75581>>>                    Get Member of hoMods "data" to hoData
75582>>>                    Get MemberCount of hoData to iMax
75583>>>                    Decrement iMax
75584>>>                    
75584>>>                    For i from 0 to iMax
75590>>>>
75590>>>                        Send Combo_Add_Item (JsonValueAtPath(hoData, "[" + String(i) + "]id"))
75591>>>                    Loop
75592>>>>
75592>>>                    
75592>>>                    Send Destroy of hoData
75593>>>                End
75593>>>>
75593>>>                
75593>>>                Send Destroy of hoMods
75594>>>            End
75594>>>>
75594>>>            
75594>>>            Set Value to "gpt-3.5-turbo"
75595>>>        End_Procedure
75596>>>      
75596>>>    End_Object
75597>>>
75597>>>    Object oAsk is a cTextEdit
75599>>>        Set Size to 36 554
75600>>>        Set Location to 28 10
75601>>>        Set Label to "Ask ChatGPT something:"
75602>>>        Set peAnchors to anTopLeftRight
75603>>>    End_Object
75604>>>
75604>>>    Object oSendBtn is a Button
75606>>>        Set Location to 28 571
75607>>>        Set Label to "Send"
75608>>>        Set peAnchors to anTopRight
75609>>>    
75609>>>        Procedure OnClick
75612>>>            Send AskChatGPT
75613>>>        End_Procedure
75614>>>    
75614>>>    End_Object
75615>>>
75615>>>    Object oClearBtn is a Button
75617>>>        Set Location to 46 571
75618>>>        Set Label to "Clear"
75619>>>        Set peAnchors to anTopRight
75620>>>    
75620>>>        Procedure OnClick
75623>>>            Set Value of oAsk to ""
75624>>>        End_Procedure
75625>>>    
75625>>>    End_Object
75626>>>
75626>>>    Object oResponse is a cTextEdit
75628>>>        Set Size to 128 610
75629>>>        Set Location to 77 10
75630>>>        Set Label to "ChatGPT replied:"
75631>>>        Set peAnchors to anAll
75632>>>    End_Object
75633>>>
75633>>>    Object oHistText is a TextBox
75635>>>        Set Size to 9 25
75636>>>        Set Location to 210 10
75637>>>        Set Label to "History:"
75638>>>        Set peAnchors to anBottomLeft
75639>>>    End_Object
75640>>>
75640>>>    Object oHistory is a cCJGrid
75642>>>        Set Size to 65 611
75643>>>        Set Location to 220 10
75644>>>        Set peAnchors to anBottomLeftRight
75645>>>        Set pbReadOnly to True
75646>>>
75646>>>        Object oCJGridColumnRowIndicator1 is a cCJGridColumnRowIndicator
75648>>>        End_Object
75649>>>
75649>>>        Object oDateTime is a cCJGridColumn
75651>>>            Set piWidth to 50
75652>>>            Set psCaption to "Time"
75653>>>        End_Object
75654>>>        
75654>>>        Object oSpeaker is a cCJGridColumn
75656>>>            Set piWidth to 20
75657>>>            Set psCaption to "Speaker"
75658>>>        End_Object
75659>>>
75659>>>        Object oMessage is a cCJGridColumn
75661>>>            Set piWidth to 350
75662>>>            Set psCaption to "Message"
75663>>>        End_Object
75664>>>
75664>>>        Procedure ReloadHist
75667>>>            tDataSourceRow[] atRows
75667>>>            tDataSourceRow[] atRows
75668>>>            Integer    iSpkCol iMsgCol iTimeCol i iMax
75668>>>            String[]   asSpeakers asMsgs asTimes
75671>>>            
75671>>>            Get pasSpeakers to asSpeakers
75672>>>            Get pasMessages to asMsgs
75673>>>            Get pasTimes    to asTimes
75674>>>            
75674>>>            Get piColumnID of oSpeaker  to iSpkCol
75675>>>            Get piColumnID of oMessage  to iMsgCol
75676>>>            Get piColumnID of oDateTime to iTimeCol
75677>>>            
75677>>>            Move (SizeOfArray(asSpeakers) - 1) to iMax
75678>>>            
75678>>>            For i from 0 to iMax
75684>>>>
75684>>>                Move asTimes[iMax - i]    to atRows[i].sValue[iTimeCol]
75685>>>                Move asSpeakers[iMax - i] to atRows[i].sValue[iSpkCol]
75686>>>                Move asMsgs[iMax - i]     to atRows[i].sValue[iMsgCol]
75687>>>            Loop
75688>>>>
75688>>>            
75688>>>            Send InitializeData atRows
75689>>>            Send MoveToFirstRow    
75690>>>        End_Procedure
75691>>>        
75691>>>        Procedure OnRowChanged Integer iOldRow Integer iNewSelectedRow
75694>>>            String[] asSpeakers asMsgs asTimes
75697>>>            Integer  iMax i
75697>>>            
75697>>>            Get pasSpeakers to asSpeakers
75698>>>            Get pasMessages to asMsgs
75699>>>            Get pasTimes    to asTimes
75700>>>            Move (SizeOfArray(asSpeakers) - 1) to iMax
75701>>>            Move (iMax - iNewSelectedRow) to i
75702>>>            
75702>>>            Set Value of oMsgContent to (Trim(asSpeakers[i]) * ;                                        "(at" * Trim(asTimes[i] + "):" * ;                                        Trim(asMsgs[i])))
75703>>>        End_Procedure
75704>>>        
75704>>>    End_Object
75705>>>
75705>>>    Object oMsgText is a TextBox
75707>>>        Set Size to 9 29
75708>>>        Set Location to 287 10
75709>>>        Set Label to "Message:"
75710>>>        Set peAnchors to anBottomLeft
75711>>>    End_Object
75712>>>
75712>>>    Object oMsgContent is a cTextEdit
75714>>>        Set Size to 40 611
75715>>>        Set Location to 297 10
75716>>>        Set peAnchors to anBottomLeftRight
75717>>>    End_Object
75718>>>
75718>>>Cd_End_Object
75720>>>>
75720>
75720>        Procedure Activate_About
75723>            Send DoAbout "" "" "" "" ""
75724>        End_Procedure
75725>
75725>    End_Object
75726>
75726>End_Object
75727>
75727>Send Activate_oChatGPTTest of (oClientArea(oMain))
75728>Start_UI
75729>
Summary
Memory Available: 12725731328
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 43507
Total Resources: 0
Total Commands : 75728
Total Windows  : 0
Total Pages    : 0
Static Data    : 546779
Message area   : 525144
Total Blocks   : 28449
