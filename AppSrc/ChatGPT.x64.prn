Compiling Program: C:\Projects\ChatGPTAPI\AppSrc\ChatGPT.src
Memory Available: 18132115456
1>Use DFAllEnt.pkg
Using pre-compiled package DFALLENT.PKG
Including file: dfallent.x64.pkd    (C:\Program Files\DataFlex 23.0\Pkg\dfallent.x64.pkd)
73406>Use cCJStandardCommandBarSystem.pkg
Including file: cCJStandardCommandBarSystem.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJStandardCommandBarSystem.pkg)
73406>>>// these are all the packages used in a standard MDI menubar/toolbar system
73406>>>
73406>>>Use cCJCommandBarSystem.pkg
73406>>>Use cCJStandardMenuItemClasses.pkg
Including file: cCJStandardMenuItemClasses.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJStandardMenuItemClasses.pkg)
73406>>>>>Use Dfpanel.pkg
73406>>>>>Use cCJCommandBarSystem.pkg
73406>>>>>Use LanguageText.pkg
73406>>>>>
73406>>>>>
73406>>>>>Class cCJUndoMenuItem is a cCJMenuItem
73407>>>>>    
73407>>>>>    Procedure Construct_Object
73409>>>>>        Forward Send Construct_Object
73411>>>>>        Set psCaption   to C_$CaptionUndo
73412>>>>>        Set psToolTip to C_$ToolTipUndo
73413>>>>>        Set psDescription to C_$DescUndo
73414>>>>>        Set psImage to "ActionUndo.ico"
73415>>>>>        Set pbActiveUpdate to True
73416>>>>>        Set psCategory to C_$CategoryEdit
73417>>>>>        Set psShortcut to C_$Key_Ctrl_Z
73418>>>>>    End_Procedure
73419>>>>>    
73419>>>>>    Procedure OnExecute Variant vCommandBarControl
73421>>>>>        Send Undo of (focus(Self))
73422>>>>>    End_Procedure
73423>>>>>    
73423>>>>>    Function IsEnabled Returns Boolean
73425>>>>>        Boolean bEnabled
73425>>>>>        Get CanUndo of (Focus(Self)) to bEnabled
73426>>>>>        Function_Return bEnabled
73427>>>>>    End_Function
73428>>>>>    
73428>>>>>End_Class
73429>>>>>
73429>>>>>
73429>>>>>Class cCJDeleteEditMenuItem is a cCJMenuItem
73430>>>>>    
73430>>>>>    Procedure Construct_Object
73432>>>>>        Forward Send Construct_Object
73434>>>>>        Set psCaption   to C_$CaptionDelete
73435>>>>>        Set psToolTip to C_$ToolTipDelete
73436>>>>>        Set psDescription to C_$DescDelete
73437>>>>>        Set psImage to "actionDelete.ico"
73438>>>>>        Set psShortcut to C_$Key_Delete
73439>>>>>        Set pbActiveUpdate to True
73440>>>>>        Set psCategory to C_$CategoryEdit
73441>>>>>    End_Procedure
73442>>>>>    
73442>>>>>    
73442>>>>>    Procedure OnExecute Variant vCommandBarControl
73444>>>>>        Send Delete of (focus(Self))
73445>>>>>    End_Procedure
73446>>>>>    
73446>>>>>    Function IsEnabled Returns Boolean
73448>>>>>        Boolean bEnabled
73448>>>>>        Get CanDelete of (Focus(Self)) to bEnabled
73449>>>>>        Function_Return bEnabled
73450>>>>>    End_Function
73451>>>>>    
73451>>>>>End_Class
73452>>>>>
73452>>>>>
73452>>>>>Class cCJCutMenuItem is a cCJMenuItem
73453>>>>>    
73453>>>>>    Procedure Construct_Object
73455>>>>>        Forward Send Construct_Object
73457>>>>>        Set psCaption   to C_$CaptionCut
73458>>>>>        Set psToolTip to C_$TooltipCut
73459>>>>>        Set psDescription to C_$DescCut
73460>>>>>        Set psImage to "actionCut.ico"
73461>>>>>        Set psShortcut to C_$Key_Ctrl_X
73462>>>>>        Set pbActiveUpdate to True
73463>>>>>        Set psCategory to C_$CategoryEdit
73464>>>>>    End_Procedure
73465>>>>>    
73465>>>>>    
73465>>>>>    Procedure OnExecute Variant vCommandBarControl
73467>>>>>        Send Cut of (focus(Self))
73468>>>>>    End_Procedure
73469>>>>>    
73469>>>>>    Function IsEnabled Returns Boolean
73471>>>>>        Boolean bEnabled
73471>>>>>        Get CanCut of (Focus(Self)) to bEnabled
73472>>>>>        Function_Return bEnabled
73473>>>>>    End_Function
73474>>>>>    
73474>>>>>End_Class
73475>>>>>
73475>>>>>
73475>>>>>Class cCJCopyMenuItem is a cCJMenuItem
73476>>>>>    
73476>>>>>    Procedure Construct_Object
73478>>>>>        Forward Send Construct_Object
73480>>>>>        Set psCaption   to C_$CaptionCopy
73481>>>>>        Set psToolTip to C_$ToolTipCopy
73482>>>>>        Set psDescription to C_$DescCopy
73483>>>>>        Set psImage to "actionCopy.ico"
73484>>>>>        Set psShortcut to C_$Key_Ctrl_C
73485>>>>>        Set pbActiveUpdate to True
73486>>>>>        Set psCategory to C_$CategoryEdit
73487>>>>>    End_Procedure
73488>>>>>    
73488>>>>>    
73488>>>>>    Procedure OnExecute Variant vCommandBarControl
73490>>>>>        Send Copy of (focus(Self))
73491>>>>>    End_Procedure
73492>>>>>    
73492>>>>>    Function IsEnabled Returns Boolean
73494>>>>>        Boolean bEnabled
73494>>>>>        Get CanCopy of (Focus(Self)) to bEnabled
73495>>>>>        Function_Return bEnabled
73496>>>>>    End_Function
73497>>>>>    
73497>>>>>End_Class
73498>>>>>
73498>>>>>
73498>>>>>Class cCJPasteMenuItem is a cCJMenuItem
73499>>>>>    
73499>>>>>    Procedure Construct_Object
73501>>>>>        Forward Send Construct_Object
73503>>>>>        Set psCaption   to C_$CaptionPaste
73504>>>>>        Set psToolTip to C_$ToolTipPaste
73505>>>>>        Set psDescription to C_$DescPaste
73506>>>>>        Set psImage to "actionPaste.ico"
73507>>>>>        Set pbActiveUpdate to True
73508>>>>>        Set psShortcut to C_$Key_Ctrl_V
73509>>>>>        Set psCategory to C_$CategoryEdit
73510>>>>>    End_Procedure
73511>>>>>    
73511>>>>>    
73511>>>>>    Procedure OnExecute Variant vCommandBarControl
73513>>>>>        Send Paste of (focus(Self))
73514>>>>>    End_Procedure
73515>>>>>    
73515>>>>>    Function IsEnabled Returns Boolean
73517>>>>>        Boolean bEnabled
73517>>>>>        Get CanPaste of (Focus(Self)) to bEnabled
73518>>>>>        Function_Return bEnabled
73519>>>>>    End_Function
73520>>>>>    
73520>>>>>End_Class
73521>>>>>
73521>>>>>Class cCJSelectAllMenuItem is a cCJMenuItem
73522>>>>>    
73522>>>>>    Procedure Construct_Object
73524>>>>>        Forward Send Construct_Object
73526>>>>>        Set psCaption   to C_$CaptionSelectAll
73527>>>>>        Set psToolTip to C_$ToolTipSelectAll
73528>>>>>        Set psDescription to C_$DescSelectAll
73529>>>>>        Set pbActiveUpdate to True
73530>>>>>        Set psShortcut to C_$Key_Ctrl_A
73531>>>>>        Set psCategory to C_$CategoryEdit
73532>>>>>    End_Procedure
73533>>>>>    
73533>>>>>    
73533>>>>>    Procedure OnExecute Variant vCommandBarControl
73535>>>>>        Send Select_All of (focus(Self))
73536>>>>>    End_Procedure
73537>>>>>    
73537>>>>>    Function IsEnabled Returns Boolean
73539>>>>>        Boolean bEnabled
73539>>>>>        Get CanSelect of (Focus(Self)) to bEnabled
73540>>>>>        Function_Return bEnabled
73541>>>>>    End_Function
73542>>>>>    
73542>>>>>End_Class
73543>>>>>
73543>>>>>
73543>>>>>Class cCJExitMenuItem is a cCJMenuItem
73544>>>>>    
73544>>>>>    Procedure Construct_Object
73546>>>>>        Forward Send Construct_Object
73548>>>>>        Set psCaption to C_$CaptionExit
73549>>>>>        Set psToolTip to C_$ToolTipExit
73550>>>>>        Set psDescription to C_$ToolTipExit
73551>>>>>        Set psShortcut to C_$Key_Alt_F4
73552>>>>>        Set psCategory to C_$CategoryFile
73553>>>>>    End_Procedure
73554>>>>>    
73554>>>>>    Procedure OnExecute Variant vCommandBarControl
73556>>>>>        Send Exit_Application of Desktop
73557>>>>>    End_Procedure
73558>>>>>    
73558>>>>>End_Class
73559>>>>>
73559>>>>>Class cCJHelpMenuItem is a cCJMenuItem
73560>>>>>    
73560>>>>>    Procedure Construct_Object
73562>>>>>        Forward Send Construct_Object
73564>>>>>        Set psCaption to C_$CaptionHelp
73565>>>>>        Set psDescription to C_$ToolTipHelp
73566>>>>>        Set psToolTip to C_$DescHelp
73567>>>>>        Set psImage to "ActionHelp.ico"
73568>>>>>        Set psShortcut to "F1"
73569>>>>>        Set psCategory to C_$CategoryHelp
73570>>>>>    End_Procedure
73571>>>>>    
73571>>>>>    Procedure OnExecute Variant vCommandBarControl
73573>>>>>        Send Help of (Focus(Self))
73574>>>>>    End_Procedure
73575>>>>>    
73575>>>>>End_Class
73576>>>>>
73576>>>>>Class cCJStatusbarMenuItem is a cCJMenuItem
73577>>>>>    
73577>>>>>    Procedure Construct_Object
73579>>>>>        Forward Send Construct_Object
73581>>>>>        Set psCaption to C_$CaptionAddStatusbar
73582>>>>>        Set psToolTip to C_$ToolTipAddStatusbar
73583>>>>>        Set psDescription to  C_$DescAddStatusbar
73584>>>>>        Set psCategory to C_$CategoryWindow
73585>>>>>    End_Procedure
73586>>>>>    
73586>>>>>    Procedure OnExecute Variant vCommandBarControl
73588>>>>>        Handle hoCommandBars hoClientArea
73588>>>>>        Get CommandBarSystemObject to hoCommandBars
73589>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73590>>>>>        If hoClientArea Begin
73592>>>>>            // the clientarea's parent panel has message
73592>>>>>            Send Toggle_StatusBar of (Parent(hoClientArea))
73593>>>>>        End
73593>>>>>>
73593>>>>>    End_Procedure
73594>>>>>    
73594>>>>>    Function IsChecked Returns Boolean
73596>>>>>        Boolean bOn
73596>>>>>        Handle hoCommandBars hoClientArea
73596>>>>>        Get CommandBarSystemObject to hoCommandBars
73597>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73598>>>>>        If hoClientArea Begin
73600>>>>>            // the clientarea's parent panel has message
73600>>>>>            Get StatusBar_State of (Parent(hoClientArea)) to bOn
73601>>>>>        End
73601>>>>>>
73601>>>>>        Function_Return bOn
73602>>>>>    End_Function
73603>>>>>End_Class
73604>>>>>
73604>>>>>Class cCJAutoArrangeIconsMenuItem is a cCJMenuItem
73605>>>>>    
73605>>>>>    Procedure Construct_Object
73607>>>>>        Forward Send Construct_Object
73609>>>>>        Set psCaption to C_$CaptionAutoArrangeIcons
73610>>>>>        Set psToolTip to C_$ToolTipAutoArrangeIcons
73611>>>>>        Set psDescription to C_$DescAutoArrangeIcons
73612>>>>>        Set psCategory to C_$CategoryWindow
73613>>>>>    End_Procedure
73614>>>>>    
73614>>>>>    Procedure OnExecute Variant vCommandBarControl
73616>>>>>        Handle hoCommandBars hoClientArea
73616>>>>>        Get CommandBarSystemObject to hoCommandBars
73617>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73618>>>>>        If hoClientArea Begin
73620>>>>>            // the clientarea's parent panel has message
73620>>>>>            Send Toggle_Auto_Arrange_Icons of (Parent(hoClientArea))
73621>>>>>        End
73621>>>>>>
73621>>>>>    End_Procedure
73622>>>>>    
73622>>>>>    Function IsChecked Returns Boolean
73624>>>>>        Boolean bOn
73624>>>>>        Handle hoCommandBars hoClientArea
73624>>>>>        Get CommandBarSystemObject to hoCommandBars
73625>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73626>>>>>        If hoClientArea Begin
73628>>>>>            // the clientarea's parent panel has message
73628>>>>>            Get Auto_Arrange_Icons_State of (Parent(hoClientArea)) to bOn
73629>>>>>        End
73629>>>>>>
73629>>>>>        Function_Return bOn
73630>>>>>    End_Function
73631>>>>>End_Class
73632>>>>>
73632>>>>>Class cCJRestoreMenusMenuItem is a cCJMenuItem
73633>>>>>    
73633>>>>>    Procedure Construct_Object
73635>>>>>        Forward Send Construct_Object
73637>>>>>        Set psCaption to C_$CaptionRestoreMenus
73638>>>>>        Set psToolTip to C_$ToolTipRestoreMenus
73639>>>>>        Set psDescription to C_$DescRestoreMenus
73640>>>>>        Set psCategory to C_$CategoryWindow
73641>>>>>    End_Procedure
73642>>>>>    
73642>>>>>    Procedure OnExecute Variant vCommandBarControl
73644>>>>>        Handle hoCommandBars
73644>>>>>        Get CommandBarSystemObject to hoCommandBars
73645>>>>>        Send RestoreLayout of hoCommandBars
73646>>>>>    End_Procedure
73647>>>>>    
73647>>>>>End_Class
73648>>>>>
73648>>>>>Class cCJCascadeMenuItem is a cCJMenuItem
73649>>>>>    
73649>>>>>    Procedure Construct_Object
73651>>>>>        Forward Send Construct_Object
73653>>>>>        Set psCaption to C_$CaptionCascade
73654>>>>>        Set psToolTip to C_$ToolTipCascade
73655>>>>>        Set psDescription to  C_$DescCascade
73656>>>>>        Set psImage to "ActionCascade.ico"
73657>>>>>        Set psCategory to C_$CategoryWindow
73658>>>>>    End_Procedure
73659>>>>>    
73659>>>>>    Procedure OnExecute Variant vCommandBarControl
73661>>>>>        Handle hoCommandBars hoClientArea
73661>>>>>        Get CommandBarSystemObject to hoCommandBars
73662>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73663>>>>>        If hoClientArea Begin
73665>>>>>            Send Cascade_Windows of hoClientArea
73666>>>>>        End
73666>>>>>>
73666>>>>>    End_Procedure
73667>>>>>End_Class
73668>>>>>
73668>>>>>Class cCJTileHorizontally is a cCJMenuItem
73669>>>>>    
73669>>>>>    Procedure Construct_Object
73671>>>>>        Forward Send Construct_Object
73673>>>>>        Set psCaption to C_$CaptionTileHorizontally
73674>>>>>        Set psToolTip to C_$ToolTipTileHorizontally
73675>>>>>        Set psDescription to  C_$DescTileHorizontally
73676>>>>>        Set psImage to "ActionTileHorizontally.ico"
73677>>>>>        Set psCategory to C_$CategoryWindow
73678>>>>>    End_Procedure
73679>>>>>    
73679>>>>>    Procedure OnExecute Variant vCommandBarControl
73681>>>>>        Handle hoCommandBars hoClientArea
73681>>>>>        Get CommandBarSystemObject to hoCommandBars
73682>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73683>>>>>        If hoClientArea Begin
73685>>>>>            Send Tile_Windows_Horizontal of hoClientArea
73686>>>>>        End
73686>>>>>>
73686>>>>>    End_Procedure
73687>>>>>End_Class
73688>>>>>
73688>>>>>Class cCJTileVertically is a cCJMenuItem
73689>>>>>    
73689>>>>>    Procedure Construct_Object
73691>>>>>        Forward Send Construct_Object
73693>>>>>        Set psCaption to C_$CaptionTileVertically
73694>>>>>        Set psToolTip to C_$ToolTipTileVertically
73695>>>>>        Set psDescription to  C_$DescTileVertically
73696>>>>>        Set psImage to "ActionTileVertically.ico"
73697>>>>>        Set psCategory to C_$CategoryWindow
73698>>>>>    End_Procedure
73699>>>>>    
73699>>>>>    Procedure OnExecute Variant vCommandBarControl
73701>>>>>        Handle hoCommandBars hoClientArea
73701>>>>>        Get CommandBarSystemObject to hoCommandBars
73702>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73703>>>>>        If hoClientArea Begin
73705>>>>>            Send Tile_Windows_Vertical of hoClientArea
73706>>>>>        End
73706>>>>>>
73706>>>>>    End_Procedure
73707>>>>>End_Class
73708>>>>>
73708>>>>>Class cCJMinimizeWindowsMenuItem is a cCJMenuItem
73709>>>>>    
73709>>>>>    Procedure Construct_Object
73711>>>>>        Forward Send Construct_Object
73713>>>>>        Set psCaption to C_$CaptionMinimizeWindows
73714>>>>>        Set psToolTip to C_$ToolTipMinimizeWindows
73715>>>>>        Set psDescription to  C_$DescMinimizeWindows
73716>>>>>        Set psCategory to C_$CategoryWindow
73717>>>>>    End_Procedure
73718>>>>>    
73718>>>>>    Procedure OnExecute Variant vCommandBarControl
73720>>>>>        Handle hoCommandBars hoClientArea
73720>>>>>        Get CommandBarSystemObject to hoCommandBars
73721>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73722>>>>>        If hoClientArea Begin
73724>>>>>            // the clientarea's parent panel has message
73724>>>>>            Send Minimize_all_Windows of (Parent(hoClientArea))
73725>>>>>        End
73725>>>>>>
73725>>>>>    End_Procedure
73726>>>>>End_Class
73727>>>>>
73727>>>>>
73727>>>>>Class cCJRestoreWindowsMenuItem is a cCJMenuItem
73728>>>>>    
73728>>>>>    Procedure Construct_Object
73730>>>>>        Forward Send Construct_Object
73732>>>>>        Set psCaption to C_$CaptionRestoreWindows
73733>>>>>        Set psToolTip to C_$ToolTipRestoreWindows
73734>>>>>        Set psDescription to  C_$DescRestoreWindows
73735>>>>>        Set psCategory to C_$CategoryWindow
73736>>>>>    End_Procedure
73737>>>>>    
73737>>>>>    Procedure OnExecute Variant vCommandBarControl
73739>>>>>        Handle hoCommandBars hoClientArea
73739>>>>>        Get CommandBarSystemObject to hoCommandBars
73740>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73741>>>>>        If hoClientArea Begin
73743>>>>>            // the clientarea's parent panel has message
73743>>>>>            Send Restore_all_Windows of (Parent(hoClientArea))
73744>>>>>        End
73744>>>>>>
73744>>>>>    End_Procedure
73745>>>>>End_Class
73746>>>>>
73746>>>>>Class cCJArrangeIconsMenuItem is a cCJMenuItem
73747>>>>>    
73747>>>>>    Procedure Construct_Object
73749>>>>>        Forward Send Construct_Object
73751>>>>>        Set psCaption to C_$CaptionArrangeIcons
73752>>>>>        Set psToolTip to C_$ToolTipArrangeIcons
73753>>>>>        Set psDescription to  C_$DescArrangeIcons
73754>>>>>        Set psCategory to C_$CategoryWindow
73755>>>>>    End_Procedure
73756>>>>>    
73756>>>>>    Procedure OnExecute Variant vCommandBarControl
73758>>>>>        Handle hoCommandBars hoClientArea
73758>>>>>        Get CommandBarSystemObject to hoCommandBars
73759>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73760>>>>>        If hoClientArea Begin
73762>>>>>            Send Arrange_Icons of hoClientArea
73763>>>>>        End
73763>>>>>>
73763>>>>>    End_Procedure
73764>>>>>    
73764>>>>>End_Class
73765>>>Use cCJAboutMenuItem.pkg
Including file: cCJAboutMenuItem.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJAboutMenuItem.pkg)
73765>>>>>Use cCJCommandBarSystem.pkg
73765>>>>>Use LanguageText.pkg
73765>>>>>
73765>>>>>// It is expected that if you use this class that you provide an about object that is
73765>>>>>// activated via activate_about such as DfAbout.pkg. We don't use this for you automatically
73765>>>>>// because you may wish to create your own custom about package.
73765>>>>>
73765>>>>>Class cCJAboutMenuItem is a cCJMenuItem    
73766>>>>>
73766>>>>>    Procedure Construct_Object
73768>>>>>        Forward Send Construct_Object
73770>>>>>        Set psCaption to C_$CaptionAbout
73771>>>>>        Set psDescription to C_$ToolTipAbout
73772>>>>>        Set psToolTip to C_$DescAbout
73773>>>>>        Set psImage to "ActionAbout.ico"
73774>>>>>        Set psCategory to C_$CategoryHelp
73775>>>>>    End_Procedure
73776>>>>>    
73776>>>>>    Procedure OnExecute Variant vCommandBarControl
73778>>>>>        Handle hoCommandBars hoClientArea
73778>>>>>        Get CommandBarSystemObject to hoCommandBars
73779>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
73780>>>>>        If hoClientArea Begin
73782>>>>>            Send Activate_About of hoClientArea
73783>>>>>        End
73783>>>>>>
73783>>>>>    End_Procedure
73784>>>>>
73784>>>>>End_Class
73785>>>>>
73785>>>>>
73785>>>Use cCJDeoMenuItemClasses.pkg
73785>>>Use cCJMDIWindowsMenuItem.pkg
Including file: cCJMDIWindowsMenuItem.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJMDIWindowsMenuItem.pkg)
73785>>>>>Use cCJCommandBarSystem.pkg
73785>>>>>
73785>>>>>Register_Function Client_ID Returns Integer
73785>>>>>
73785>>>>>// only used by cCJMDIWIndowsMenuItem
73785>>>>>Class cCJMDIWindowItem is a cCJMenuItem
73786>>>>>    
73786>>>>>    Procedure Construct_Object
73788>>>>>        Forward Send Construct_Object
73790>>>>>        Property Handle phWindow 0 // object id of view
73791>>>>>        Set pbControlFlagNoMovable to True
73792>>>>>        Set pbActiveUpdate to True
73793>>>>>    End_Procedure
73794>>>>>    
73794>>>>>    Procedure OnExecute Variant vCommandBarControl
73796>>>>>        Handle hWindow
73796>>>>>        Get phWindow to hWindow
73797>>>>>        Send Activate_View of hWindow
73798>>>>>    End_Procedure
73799>>>>>    
73799>>>>>End_Class
73800>>>>>
73800>>>>>
73800>>>>>Class cCJMDIWindowsMenuItem is a cCJMenuItem
73801>>>>>    
73801>>>>>    Procedure Construct_Object
73803>>>>>        Forward Send Construct_Object
73805>>>>>        Property Handle[] phArrayOfWindows
73806>>>>>        Set peControlType to xtpControlPopup
73807>>>>>        Set psCategory to C_$CategoryWindow
73808>>>>>    End_Procedure
73809>>>>>    
73809>>>>>    // This adds MDI windows to the existing menu items.
73809>>>>>    // This removes any existing windows menus and always adds a new set to the end
73809>>>>>    
73809>>>>>    Procedure OnPopupInit Variant vCommandBarControl Handle hCommandBarControls
73811>>>>>        Handle  hClientArea hView
73811>>>>>        String  sLabel
73811>>>>>        Integer i iWindows
73811>>>>>        Handle[] hArrayOfWindows
73812>>>>>        Variant vItem
73812>>>>>        
73812>>>>>        // delete all windows actions and menu items. Assume we have an array of DF action objects for the windows
73812>>>>>        // also assume that destroying an action removes all menu instances of that action
73812>>>>>        Get phArrayOfWindows to hArrayOfWindows
73813>>>>>        Move (SizeOfArray(hArrayOfWindows)) to iWindows
73814>>>>>        For i from 0 to (iWindows-1)
73820>>>>>>
73820>>>>>            Send Destroy of hArrayOfWindows[i] // assume this removes all menu items of this action
73821>>>>>        Loop
73822>>>>>>
73822>>>>>        Move (ResizeArray(hArrayOfWindows,0)) to hArrayOfWindows
73823>>>>>        
73823>>>>>        // Add all views to this menu. Create the action and add the item
73823>>>>>        Move 0 to i
73824>>>>>        Get Client_Id to hClientArea // object id of client area
73825>>>>>        If (hClientArea > 0) Begin
73827>>>>>            Get Next_Mdi_Dialog of hClientArea True to hView // find first view
73828>>>>>            While (hView <> 0)
73832>>>>>                If (Active_State(hView)) Begin
73834>>>>>                    // create the action
73834>>>>>                    Get Create U_cCJMDIWindowItem to hArrayOfWindows[i]
73835>>>>>                    Get Label of hView to sLabel // caption bar (name) of view
73836>>>>>                    Set psCaption of hArrayOfWindows[i] to sLabel
73837>>>>>                    Set psDescription of hArrayOfWindows[i] to ("Make this view (" - trim(sLabel) - ") the active window.")
73838>>>>>                    If (current_scope(desktop)=hView and View_mode(hView)<>VIEWMODE_ICONIZE) Begin
73840>>>>>                        Set pbChecked of hArrayOfWindows[i] to True
73841>>>>>                    End
73841>>>>>>
73841>>>>>                    Set phWindow of hArrayOfWindows[i] to hView // used by custom OnExecute
73842>>>>>                    If (i=0) Begin
73844>>>>>                        Set pbControlBeginGroup of hArrayOfWindows[i] to True
73845>>>>>                    End
73845>>>>>>
73845>>>>>                    // Create a menu item for this action
73845>>>>>                    Get AddDynamicControl of hArrayOfWindows[i] hCommandBarControls to vItem
73846>>>>>                    Increment i
73847>>>>>                End
73847>>>>>>
73847>>>>>                Get Next_Mdi_Dialog of hClientArea False to hView // find next
73848>>>>>            Loop
73849>>>>>>
73849>>>>>        End
73849>>>>>>
73849>>>>>        
73849>>>>>        Set phArrayOfWindows to hArrayOfWindows
73850>>>>>        
73850>>>>>    End_Procedure
73851>>>>>    
73851>>>>>End_Class
73852>
73852>Object oApplication is a cApplication
73854>End_Object
73855>
73855>Object oToolTipController is a cToolTipController
73857>    Move Self to ghoToolTipController
73858>End_Object
73859>
73859>Use oEditContextMenu.pkg
Including file: oEditContextMenu.pkg    (C:\Program Files\DataFlex 23.0\Pkg\oEditContextMenu.pkg)
73859>>>Use cCJStandardMenuItemClasses.pkg
73859>>>
73859>>>Object oEditContextMenu is a cCJContextMenu
73861>>>    
73861>>>    Move Self to Default_Form_Floating_Menu_ID
73862>>>    
73862>>>    Object oUndoMenuItem is a cCJUndoMenuItem
73864>>>    End_Object
73865>>>    
73865>>>    Object oCutMenuItem is a cCJCutMenuItem
73867>>>        Set pbControlBeginGroup to True
73868>>>    End_Object
73869>>>    
73869>>>    Object oCopyMenuItem is a cCJCopyMenuItem
73871>>>    End_Object
73872>>>
73872>>>    Object oPasteMenuItem is a cCJPasteMenuItem
73874>>>    End_Object
73875>>>
73875>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
73877>>>    End_Object
73878>>>
73878>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
73880>>>        Set pbControlBeginGroup to True
73881>>>    End_Object
73882>>>
73882>>>End_Object
73883>>>
73883>Use oDEOEditContextMenu17.pkg
Including file: oDEOEditContextMenu17.pkg    (C:\Program Files\DataFlex 23.0\Pkg\oDEOEditContextMenu17.pkg)
73883>>>Use Windows.pkg
73883>>>Use cCJStandardMenuItemClasses.pkg
73883>>>Use cCJDeoMenuItemClasses.pkg
73883>>>
73883>>>
73883>>>Object oDEOEditContextMenu17 is a cCJContextMenu
73885>>>    
73885>>>    Move Self to Default_dbFloating_Menu_ID
73886>>>    
73886>>>    Object oUndoMenuItem is a cCJUndoMenuItem
73888>>>    End_Object
73889>>>    
73889>>>    Object oCutMenuItem is a cCJCutMenuItem
73891>>>        Set pbControlBeginGroup to True
73892>>>    End_Object
73893>>>    
73893>>>    Object oCopyMenuItem is a cCJCopyMenuItem
73895>>>    End_Object
73896>>>
73896>>>    Object oPasteMenuItem is a cCJPasteMenuItem
73898>>>    End_Object
73899>>>
73899>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
73901>>>    End_Object
73902>>>
73902>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
73904>>>        Set pbControlBeginGroup to True
73905>>>    End_Object
73906>>>
73906>>>    Object oPromptMenuItem is a cCJPromptMenuItem
73908>>>        Set pbControlBeginGroup to True
73909>>>    End_Object
73910>>>
73910>>>    Object oFindNextMenu is a cCJFindNextMenuItem
73912>>>        Set pbControlBeginGroup to True
73913>>>    End_Object
73914>>>
73914>>>    Object oFindPreviousMenu is a cCJFindPreviousMenuItem
73916>>>    End_Object
73917>>>
73917>>>    Object oClearMenuItem is a cCJClearMenuItem
73919>>>        Set pbControlBeginGroup to True
73920>>>    End_Object
73921>>>
73921>>>    Object oClearAllMenu is a cCJClearAllMenuItem
73923>>>    End_Object
73924>>>
73924>>>    Object oSaveMenu is a cCJSaveMenuItem
73926>>>    End_Object
73927>>>    
73927>>>    Object oDeleteMenu is a cCJDeleteMenuItem
73929>>>    End_Object
73930>>>
73930>>>    Object oRememberitem is a cCJRememberFieldMenuItem
73932>>>        Set pbControlBeginGroup to True
73933>>>    End_Object
73934>>>
73934>>>    Object oRetainItem is a cCJRememberLastFieldMenuItem
73936>>>    End_Object
73937>>>
73937>>>    Object oUnRememberitem is a cCJUnRememberFieldMenuItem
73939>>>    End_Object
73940>>>
73940>>>    Object oCJClearAllDynamicDefaults is a cCJUnRememberFieldAllMenuItem
73942>>>    End_Object
73943>>>
73943>>>End_Object
73944>Use seq_chnl.pkg
73944>
73944>Object oMain is a Panel
73946>    Set Label to "ChatGPT API Sample"
73947>    Set Location to 4 3
73948>    Set Size to 300 450
73949>    
73949>    // Note: Ideally you should get your own API Key: from https://platform.openai.com/account/api-keys
73949>    // Ha!  This key got disabled by OpenAI when they detected I'd uploaded it to GetHub, so it won't
73949>    // work now, hence you will have to get your own!
73949>    
73949>    Property String psOpenAIAPIKey // "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"
73951>    
73951>    Procedure SetOpenAIAPIKey
73954>        Integer iChn
73954>        String  sKey
73954>        
73954>        Get Seq_New_Channel to iChn
73955>        Direct_Input channel iChn "C:\Temp\OpenAIAPIKey.txt"
73957>        Read channel iChn sKey
73959>        Close_Input channel iChn
73961>        Send Seq_Release_Channel iChn
73962>        
73962>        Set psOpenAIAPIKey to sKey
73963>    End_Procedure
73964>    Send SetOpenAIAPIKey
73965>    
73965>    Object oCommandBarSystem is a cCJCommandBarSystem
73967>        Set pbTimerUpdate to True
73968>        Set peVisualTheme to xtpThemeOffice2013Outlook
73969>        Set pbAutoResizeIcons to True
73970>
73970>        Procedure OnCreateCommandBars
73973>            Handle hoOptions
73973>            Get OptionsObject to hoOptions
73974>            Forward Send OnCreateCommandBars
73976>        End_Procedure
73977>
73977>        Object oMenuBar is a cCJMenuBar
73979>
73979>            Object oFileMenu is a cCJMenuItem
73981>                Set peControlType to xtpControlPopup          
73982>                Set psCaption   to "&File"
73983>                Set psDescription to "Find, Save, Delete, Clear information or quit this application."
73984>                Set psCategory to "Menus"
73985>
73985>                Object oClearMenuItem is a cCJClearMenuItem
73987>                    Set pbAddToDesignerMenu to True
73988>                End_Object
73989>
73989>                Object oClearAllMenu is a cCJClearAllMenuItem
73991>                    Set pbAddToDesignerMenu to True
73992>                End_Object
73993>
73993>                Object oPromptMenuItem is a cCJPromptMenuItem
73995>                    Set pbAddToDesignerMenu to True
73996>                    Set pbControlBeginGroup to True
73997>                End_Object
73998>
73998>                Object oFindMenuItem is a cCJFindMenuItem
74000>                    Set pbAddToDesignerMenu to True
74001>                    Set pbControlBeginGroup to True
74002>                End_Object
74003>
74003>                Object oFindNextMenu is a cCJFindNextMenuItem
74005>                    Set pbAddToDesignerMenu to True
74006>                End_Object
74007>
74007>                Object oFindPreviousMenu is a cCJFindPreviousMenuItem
74009>                    Set pbAddToDesignerMenu to True
74010>                End_Object
74011>
74011>                Object oFindFirstMenu is a cCJFindFirstMenuItem
74013>                    Set pbAddToDesignerMenu to True
74014>                End_Object
74015>
74015>                Object oFindLastMenu is a cCJFindLastMenuItem
74017>                    Set pbAddToDesignerMenu to True
74018>                End_Object
74019>
74019>                Object oSaveMenuItem is a cCJSaveMenuItem
74021>                    Set pbAddToDesignerMenu to True
74022>                    Set pbControlBeginGroup to True
74023>                End_Object
74024>
74024>                Object oDeleteMenuItem is a cCJDeleteMenuItem
74026>                    Set pbAddToDesignerMenu to True
74027>                End_Object
74028>
74028>                Object oExitMenu is a cCJExitMenuItem
74030>                    Set pbControlBeginGroup to True
74031>                End_Object
74032>
74032>            End_Object
74033>
74033>            Object oViewMenu is a cCJMenuItem
74035>                Set peControlType to xtpControlPopup
74036>                Set psCaption to "&View"
74037>                Set psToolTip to "View"
74038>                Set psDescription to "Available Views"
74039>
74039>                Object oChatGPTTestMenuItem is a cCJMenuItem
74041>                    Set psCaption to "ChatGPTTest"
74042>                    Set psTooltip to "ChatGPTTest"
74043>                
74043>                    Procedure OnExecute Variant vCommandBarControl
74046>                        Handle hoClient
74046>                        Get Client_Id to hoClient
74047>                        Send Activate_oChatGPTTest of hoClient
74048>                    End_Procedure
74049>                End_Object
74050>            End_Object
74051>            
74051>            Object oReportMenu is a cCJMenuItem
74053>                Set peControlType to xtpControlPopup          
74054>                Set psCaption to "&Report"
74055>                Set psToolTip to "Report"
74056>                Set psDescription to "Available Reports"
74057>            End_Object
74058>
74058>            Object oNavigateMenu is a cCJMenuItem
74060>                Set peControlType to xtpControlPopup      
74061>                Set psCaption to "&Navigate"    
74062>                Set psTooltip to "Navigate"    
74063>                Set psDescription to "Move to different areas of the application"
74064>
74064>                Object oNextAreaMenu is a cCJNextAreaMenu
74066>                End_Object
74067>
74067>                Object oPriorAreaMenu is a cCJPriorAreaMenu
74069>                End_Object
74070>
74070>                Object oNextViewMenu is a cCJNextViewMenu
74072>                End_Object
74073>
74073>                Object oPriorViewMenu is a cCJPriorViewMenu
74075>                End_Object
74076>
74076>                Object oPromptMenu is a cCJPromptMenuItem
74078>                    Set pbControlBeginGroup to True
74079>                End_Object
74080>
74080>                Object oZoomMenu is a cCJZoomMenuItem
74082>                End_Object
74083>
74083>            End_Object
74084>
74084>            Object oWindowMenu is a cCJMDIWindowsMenuItem
74086>                Set peControlType to xtpControlPopup
74087>                Set psCaption to "&Window"
74088>                Set psToolTip to "Window"
74089>                Set psDescription to "Display Current Views and set other display options."    
74090>
74090>                // These are the static windows items. More will be created in onInitPopup 
74090>                Object oDisplayOptionsMenu is a cCJMenuItem
74092>                    Set peControlType to xtpControlPopup          
74093>                    Set psCaption to "&Display Options"
74094>                    Set psToolTip to "Display Options"
74095>                    Set psDescription to "Set display options"
74096>
74096>                    Object oStatusbarMenu is a cCJStatusbarMenuItem
74098>                    End_Object
74099>
74099>                    Object oAutoArrangeIconsMenu is a cCJAutoArrangeIconsMenuItem
74101>                    End_Object
74102>
74102>                    Object oRestoreMenusMenu is a cCJRestoreMenusMenuItem
74104>                        Set pbControlBeginGroup to True
74105>                    End_Object
74106>
74106>                End_Object
74107>
74107>                Object oCascadeMenu is a cCJCascadeMenuItem
74109>                    Set pbControlBeginGroup to True
74110>                End_Object
74111>
74111>                Object oHorizTile is a cCJTileHorizontally
74113>                End_Object
74114>
74114>                Object oVertTile is a cCJTileVertically
74116>                End_Object
74117>
74117>                Object oMinimizeMenuItem is a cCJMinimizeWindowsMenuItem
74119>                    Set pbControlBeginGroup to True
74120>                End_Object
74121>
74121>                Object oRestoreMenuItem is a cCJRestoreWindowsMenuItem
74123>                End_Object
74124>
74124>                Object oArrangeIconsMenuItem is a cCJAutoArrangeIconsMenuItem
74126>                    Set pbControlBeginGroup to True
74127>                End_Object
74128>
74128>            End_Object
74129>
74129>            Object oHelpMenu is a cCJMenuItem
74131>                Set peControlType to xtpControlPopup    
74132>                Set psCaption to "&Help"
74133>                Set psDescription to "Access Information for learning and using this DataFlex application."
74134>                Set psToolTip to "Help"
74135>
74135>                Object oHelpMenuItem is a cCJHelpMenuItem 
74137>                End_Object
74138>
74138>                Object oAboutMenuItem is a cCJAboutMenuItem
74140>                End_Object
74141>
74141>            End_Object
74142>
74142>        End_Object
74143>
74143>        Object oFindToolBar is a cCJToolbar
74145>            Set psTitle to "Finding Toolbar"
74146>
74146>            Object oFindFirstTool is a cCJFindFirstMenuItem
74148>            End_Object
74149>
74149>            Object oFindPreviousTool is a cCJFindPreviousMenuItem
74151>            End_Object
74152>
74152>            Object oFindMenuTool is a cCJFindMenuItem
74154>            End_Object
74155>
74155>            Object oFindNextTool is a cCJFindNextMenuItem
74157>            End_Object
74158>
74158>            Object oFindLastTool is a cCJFindLastMenuItem
74160>            End_Object
74161>
74161>            Object oPromptToolItem is a cCJPromptMenuItem
74163>                Set pbControlBeginGroup to True
74164>            End_Object
74165>
74165>        End_Object
74166>
74166>        Object oFileToolBar is a cCJToolbar
74168>            Set psTitle to "Data Entry Toolbar"
74169>
74169>            Object oClearToolItem is a cCJClearMenuItem
74171>                Set peControlStyle to xtpButtonIconAndCaption
74172>            End_Object
74173>
74173>            Object oClearAllToolItem2 is a cCJClearAllMenuItem
74175>                Set peControlStyle to xtpButtonIconAndCaption
74176>            End_Object
74177>
74177>            Object oSaveToolItem is a cCJSaveMenuItem
74179>                Set peControlStyle to xtpButtonIconAndCaption
74180>                Set pbControlBeginGroup to True
74181>            End_Object
74182>
74182>            Object oDeleteToolItem is a cCJDeleteMenuItem
74184>                Set peControlStyle to xtpButtonIconAndCaption
74185>            End_Object
74186>
74186>        End_Object
74187>
74187>        Object oEditToolBar is a cCJToolbar
74189>            Set psTitle to "Edit Toolbar"
74190>
74190>            Object oCutToolbarItem is a cCJCutMenuItem
74192>            End_Object
74193>
74193>            Object oCopyToolbarItem is a cCJCopyMenuItem
74195>            End_Object
74196>
74196>            Object oPasteToolbarItem is a cCJPasteMenuItem
74198>            End_Object
74199>
74199>            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
74201>                Set pbControlBeginGroup to True
74202>            End_Object
74203>
74203>        End_Object
74204>
74204>        Object oRememberToolbar is a cCJToolbar
74206>            Set psTitle to C_$Remember
74207>
74207>            Object oRememberItems is a cCJMenuItem
74209>
74209>                Set peControlType to xtpControlPopup
74210>                Set peControlStyle to xtpButtonCaption
74211>                Set psCaption to C_$Remember
74212>                
74212>                Object oMenuItem is a cCJRememberFieldMenuItem
74214>                    Set peControlStyle to xtpButtonIconAndCaption
74215>                End_Object
74216>                
74216>                Object oMenuItem is a cCJRememberLastFieldMenuItem
74218>                    Set peControlStyle to xtpButtonIconAndCaption
74219>                End_Object
74220>                
74220>                Object oMenuItem is a cCJUnRememberFieldMenuItem
74222>                    Set peControlStyle to xtpButtonIconAndCaption
74223>                End_Object
74224>                
74224>                Object oMenuItem is a cCJUnRememberFieldAllMenuItem
74226>                    Set peControlStyle to xtpButtonIconAndCaption
74227>                End_Object
74228>
74228>            End_Object
74229>            
74229>        End_Object
74230>        
74230>        Object oStatusBar is a cCJStatusBar
74232>
74232>            Object oStatusPane1 is a cCJStatusBarPane
74234>                Set piID to sbpIDIdlePane
74235>                Set pbStyleStretch to True
74236>            End_Object
74237>
74237>            Object oStatusPane2 is a cCJStatusBarPane
74239>                Set phoViewPane to Self
74240>                Set pbStyleStretch to True
74241>            End_Object
74242>
74242>        End_Object
74243>
74243>    End_Object
74244>    
74244>    Use cHttpTransferREST.pkg
Including file: cHttpTransferREST.pkg    (C:\Projects\ChatGPTAPI\AppSrc\cHttpTransferREST.pkg)
74244>>>// Class: cHttpTransferREST
74244>>>//
74244>>>// An enhanced version of the cHttpTransfer class that stores received data
74244>>>// in a UChar array property (pucaData) (and also content type in psContentType).
74244>>>//
74244>>>// Provides a MakeJsonCall function for calling REST services.  OAuth2 is
74244>>>// assumed, as is JSON.
74244>>>//
74244>>>// The containing object (or a parent of it) is REQUIRED to provide the function
74244>>>// OAuth2AccessToken which should return the Access Token returned by the OAuth2
74244>>>// process.  (UNLESS pbRequireToken is set to False.)
74244>>>//
74244>>>// Revision:
74244>>>//     2023/03/07  (MJP, UIG)
74244>>>//        Added pbRequireToken to allow use in non-OAuth2 environments
74244>>>//        Added Extra headers (AddExtraHeader and ClearExtraHeaders) so you can
74244>>>//        add your own as required (i.e. you might do:
74244>>>//           AddExtraHeader "Authorization" "Basic: aGbfRfdfhgpRt4^fDDr4")
74244>>>//     2023/03/06  (MJP, UIG)
74244>>>//        Added the pbDefeatCaching property & if True (the default) will add
74244>>>//        a RandomHexUUID to the query string to do that, so that repeated calls
74244>>>//        to the same resource will get fresh results.
74244>>>//     2022/06/10  (MJP, UIG) 
74244>>>//        Initial version: 1.0
74244>>>//
74244>>>
74244>>>Use cHttpTransfer.pkg
74244>>>Use WinUuid.pkg
Including file: WinUuid.pkg    (C:\Program Files\DataFlex 23.0\Pkg\WinUuid.pkg)
74244>>>>>Use Unicode.Pkg
74244>>>>>
74244>>>>>External_Function WinAPI_UuidCreate "UuidCreate" Rpcrt4.dll ;    Pointer Uuid ;    Returns Integer
74245>>>>>
74245>>>>>External_Function WinAPI_UuidToString  "UuidToStringW" Rpcrt4.dll ;    Pointer pUuid ;    Pointer lpUUIDString ;    Returns Integer
74246>>>>>
74246>>>>>External_Function WinAPI_UuidCreateSequential "UuidCreateSequential" Rpcrt4.dll ;    Pointer pUuid ;    Returns Integer
74247>>>>>
74247>>>>>External_Function WinAPI_RpcStringFree "RpcStringFreeW" Rpcrt4.dll ;    Pointer pStr ;    Returns Integer
74248>>>>>
74248>>>>>
74248>>>>>// Returns a 'random' Universally Unique Identifier string as a 32 digit hex number.
74248>>>>>Function RandomHexUUID Global Returns String
74250>>>>>    Pointer pUUID pUUIDStr
74250>>>>>    Integer iRetval iOffset iChar
74250>>>>>    String sUUID
74250>>>>>    
74250>>>>>    Move (Alloc(16)) to pUUID
74251>>>>>    
74251>>>>>    Move (WinAPI_UuidCreate (pUUID)) to iRetval
74252>>>>>    
74252>>>>>    If (iRetval = 0) Begin
74254>>>>>        Move 0 to pUUIDStr
74255>>>>>        
74255>>>>>        Move (WinAPI_UuidToString (pUUID, AddressOf(pUUIDStr))) to iRetval
74256>>>>>        If (iRetval = 0) Begin
74258>>>>>            Move (PointerToWString(pUUIDStr)) to sUUID
74259>>>>>            Move (WinAPI_RpcStringFree (AddressOf (pUUIDStr))) to iRetval
74260>>>>>            
74260>>>>>            Move (Uppercase (sUUID)) to sUUID
74261>>>>>        End
74261>>>>>>
74261>>>>>    End
74261>>>>>>
74261>>>>>    
74261>>>>>    Move (Free(pUUID)) to iRetval
74262>>>>>    
74262>>>>>    Function_Return sUUID
74263>>>>>End_Function
74264>>>>>
74264>>>>>
74264>>>>>// Returns a sequential Universally Unique Identifier string as a 32 digit hex number.
74264>>>>>Function SeqHexUUID Global Returns String
74266>>>>>    Pointer pUUID pUUIDStr
74266>>>>>    Integer iRetval iOffset iChar
74266>>>>>    String sUUID
74266>>>>>    
74266>>>>>    Move (Alloc(16)) to pUUID
74267>>>>>    
74267>>>>>    Move (WinAPI_UuidCreateSequential (pUUID)) to iRetval
74268>>>>>    
74268>>>>>    If (iRetval = 0) Begin
74270>>>>>        Move 0 to pUUIDStr
74271>>>>>        
74271>>>>>        Move (WinAPI_UuidToString (pUUID, AddressOf(pUUIDStr))) to iRetval
74272>>>>>        If (iRetval = 0) Begin
74274>>>>>            Move (PointerToWString(pUUIDStr)) to sUUID
74275>>>>>            Move (WinAPI_RpcStringFree (AddressOf (pUUIDStr))) to iRetval
74276>>>>>            
74276>>>>>            Move (Uppercase (sUUID)) to sUUID
74277>>>>>        End
74277>>>>>>
74277>>>>>    End
74277>>>>>>
74277>>>>>    
74277>>>>>    Move (Free(pUUID)) to iRetval
74278>>>>>    
74278>>>>>    Function_Return sUUID
74279>>>>>End_Function
74280>>>
74280>>>Enum_List
74280>>>    Define C_httpNoJson for -1
74280>>>    Define C_httpOK
74280>>>    Define C_httpCallFailed
74280>>>    Define C_httpBadStatus
74280>>>    Define C_httpJsonParseFail
74280>>>    Define C_httpNoAccessToken
74280>>>End_Enum_List
74280>>>
74280>>>// NOTE: This function MUST exist in an object parent in order to give objects
74280>>>//       of the class access to the AccessToken returned by the OAuth2 login
74280>>>//       process and MUST return that token!  (Unless you set pbRequireToken
74280>>>//       to False)
74280>>>Register_Function OAuth2AccessToken Returns String
74280>>>
74280>>>Class cHttpTransferREST is a cHttpTransfer
74281>>>    
74281>>>    Procedure Construct_Object
74283>>>        Forward Send Construct_Object
74285>>>        
74285>>>        Property UChar[]  pucaData
74286>>>        Property String   psContentType     ""
74287>>>        Property Integer  piError           C_httpOK  // Zero
74288>>>        Property String   psError           ""
74289>>>        Property String   psAcceptTypes     "*/*"
74290>>>        Property String   psSendType        "application/json"
74291>>>        Property Boolean  pbDefeatCaching   True
74292>>>        Property Boolean  pbRequireToken    True
74293>>>        Property String[] pasHeaderNames
74294>>>        Property String[] pasHeaderValues
74295>>>
74295>>>        Set piRemotePort    to rpHttpSSL
74296>>>        Set peTransferFlags to ifSecure
74297>>>    End_Procedure
74298>>>        
74298>>>    Procedure OnDataReceived String sContentType String sData
74300>>>        UChar[] ucaData
74301>>>        
74301>>>        Get pucaData        to ucaData
74302>>>        Set pucaData        to (AppendArray(ucaData, StringToUCharArray(sData)))
74303>>>        Set psContentType   to sContentType
74304>>>    End_Procedure
74305>>>    
74305>>>    Procedure AddExtraHeader String sName String sValue
74307>>>        String[] asNames asValues
74309>>>        Integer  iIdx iEnd
74309>>>        
74309>>>        Get pasHeaderNames to asNames
74310>>>        Move (SearchArray(asNames, sName)) to iIdx
74311>>>        
74311>>>        If (iIdx = -1) Begin  // Not already in array
74313>>>            Move (SizeOfArray(asNames)) to iEnd
74314>>>            Get pasHeaderValues         to asValues
74315>>>            Move sName                  to asNames[iEnd]
74316>>>            Move sValue                 to asValues[iEnd]
74317>>>            Set pasHeaderNames          to asNames
74318>>>            Set pasHeaderValues         to asValues
74319>>>        End
74319>>>>
74319>>>        
74319>>>    End_Procedure
74320>>>    
74320>>>    Procedure ClearExtraHeaders
74322>>>        String[] asEmpty
74323>>>        
74323>>>        Set pasHeaderNames  to asEmpty
74324>>>        Set pasHeaderValues to asEmpty
74325>>>    End_Procedure
74326>>>    
74326>>>    Procedure Reset
74328>>>        UChar[] empty
74329>>>        
74329>>>        Set pucaData        to empty
74330>>>        Set psContentType   to ""
74331>>>        Set piError         to C_httpOK  // Zero! ;-)
74332>>>        Set psError         to ""
74333>>>        Send ClearHeaders
74334>>>    End_Procedure
74335>>>    
74335>>>    Function psData Returns String
74337>>>        Function_Return (UCharArrayToString(pucaData(Self)))
74338>>>    End_Function
74339>>>    
74339>>>    Function MakeJsonCall String sVerb String sPath String sParams Handle hoBody Returns Handle
74341>>>        Handle   hoJson
74341>>>        Integer  iOK iStatus iHdrs i
74341>>>        Boolean  bOK
74341>>>        String   sData sBody sToken
74341>>>        String[] asHdrNames asHdrVals
74343>>>        
74343>>>        Move (Uppercase(sVerb)) to sVerb  // Probably not required ;-)
74344>>>        
74344>>>        Send Reset
74345>>>        
74345>>>        If (pbRequireToken(Self)) Begin
74347>>>            Get OAuth2AccessToken   to sToken
74348>>>        
74348>>>            If (sToken = "") Begin
74350>>>                Set piError to C_httpNoAccessToken
74351>>>                Set psError to "No OAuth2 access token"
74352>>>                Function_Return 0
74353>>>            End
74353>>>>
74353>>>            
74353>>>        End
74353>>>>
74353>>>        
74353>>>        // Add required headers:
74353>>>        Get AddHeader "Content-Type"      (psSendType(Self))    to iOK
74354>>>        Get AddHeader "Accept"            (psAcceptTypes(Self)) to iOK
74355>>>        If (sToken <> "") ;            Get AddHeader "Authorization" ("Bearer" * sToken)   to iOK
74358>>>        
74358>>>        // Deal with any extra headers
74358>>>        Get pasHeaderNames to asHdrNames
74359>>>        Move (SizeOfArray(asHdrNames)) to iHdrs
74360>>>         
74360>>>        If iHdrs Begin
74362>>>            Get pasHeaderValues to asHdrVals
74363>>>            Decrement iHdrs
74364>>>            
74364>>>            For i from 0 to iHdrs
74370>>>>
74370>>>                Get AddHeader asHdrNames[i] asHdrVals to iOK
74371>>>            Loop
74372>>>>
74372>>>            
74372>>>        End
74372>>>>
74372>>>        
74372>>>        // To defeat cacheing, we add a "nonce" set to a random hex UUID to the
74372>>>        // query string - after any real parameters we are passed, if any:
74372>>>        If (pbDefeatCaching(Self)) Begin
74374>>>            If (sParams = "") ;                Move (sPath + "?nonce=" + RandomHexUUID())                  to sPath
74377>>>            Else ;                Move (sPath + "?" + sParams + "&nonce=" + RandomHexUUID())  to sPath
74379>>>        End
74379>>>>
74379>>>        Else If (sParams <> "") ;            Move (sPath + "?" + sParams)                                    to sPath
74383>>>        
74383>>>        // Assumes that only POST, PUT and PATCH verbs will have a body:
74383>>>        If (((sVerb = "POST") or (sVerb = "PUT") or (sVerb = "PATCH")) and hoBody) Begin
74385>>>            Get Stringify of hoBody to sBody
74386>>>            Send Destroy of hoBody
74387>>>        End
74387>>>>
74387>>>        
74387>>>        // Make the call
74387>>>        Get HttpVerbAddrRequest sPath (AddressOf(sBody)) (SizeOfString(sBody)) False sVerb to iOK
74388>>>        
74388>>>        If iOK Begin
74390>>>            Get ResponseStatusCode  to iStatus
74391>>>            Get psData              to sData
74392>>>            
74392>>>            If ((iStatus >= 200) and (iStatus < 300)) Begin
74394>>>                
74394>>>                // If no JSON was returned, then return -1, indicating that, 
74394>>>                // which may be perfectly correct in some cases 
74394>>>                // (HTTP 204 - No Content, for instance).
74394>>>                If (SizeOfString(sData) < 2) ;  // 2 chars is the minimum JSON                    Function_Return C_httpNoJson
74397>>>
74397>>>                Get Create (RefClass(cJsonObject)) to hoJson
74398>>>                Set pbRequireAllMembers of hoJson to False
74399>>>                Set pbEscapeForwardSlash of hoJson to False
74400>>>                Get ParseString of hoJson sData to bOK
74401>>>                
74401>>>                If bOK ;                    Function_Return hoJson  // Success! Now caller's responsibility to destroy.
74404>>>                
74404>>>                // So if parsing failed:
74404>>>                Set piError to C_httpJsonParseFail
74405>>>                Set psError to ('Http Call to "' + psRemoteHost(Self) + '/' + sPath + "'" * ;                                'returned invalid JSON. Parse error:' * ;                                psParseError(hoJson))
74406>>>                Send Destroy of hoJson
74407>>>            End
74407>>>>
74407>>>            Else Begin  // Not a 2xx status
74408>>>                Set piError to C_httpBadStatus
74409>>>                Set psError to ('HTTP Call to "' + psRemoteHost(Self) + '/' + sPath + '"' * ;                                'returned a status of' * String(iStatus) * '-' * ;                                ResponseStatusText(Self) * ;                                "(" + sData + ")")
74410>>>            End
74410>>>>
74410>>>            
74410>>>        End
74410>>>>
74410>>>        Else Begin  // Call returned 0
74411>>>            Set piError to C_httpCallFailed
74412>>>            Set psError to ('HTTP Call to "' + psRemoteHost(Self) + '/' + sPath + '" failed')
74413>>>        End
74413>>>>
74413>>>        
74413>>>        Function_Return 0  // Indicates failure: check piError and psError for reason
74414>>>    End_Function
74415>>>    
74415>>>End_Class
74416>    Object oHttp is a cHttpTransferREST
74418>        Set psRemoteHost    to "api.openai.com"
74419>        Set piRemotePort    to rpHttpSSL
74420>        Set peTransferFlags to ifSecure
74421>        Set pbDefeatCaching to False
74422>    End_Object
74423>    
74423>    Function OAuth2AccessToken Returns String
74426>        Function_Return (psOpenAIAPIKey(Self))
74427>    End_Function
74428>
74428>    Use JsonPath.pkg
Including file: JsonPath.pkg    (C:\Projects\ChatGPTAPI\AppSrc\JsonPath.pkg)
74428>>>//==============================================================================
74428>>>// JsonPath.pkg
74428>>>//==============================================================================
74428>>>//
74428>>>// Just a simple package which uses the cJsonPath class, creates an object of it,
74428>>>// and adds three global functions: JsonObjectAtPath, JsonValueAtPath and 
74428>>>// JsonCountAtPath, calling those of the object.
74428>>>//
74428>>>// Licence (MIT):
74428>>>//
74428>>>// Copyright 2020, Mike Peat, Unicorn InterGlobal Ltd.
74428>>>//
74428>>>// Permission is hereby granted, free of charge, to any person obtaining a copy
74428>>>// of this software and associated documentation files (the "Software"), to deal
74428>>>// in the Software without restriction, including without limitation the rights
74428>>>// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
74428>>>// copies of the Software, and to permit persons to whom the Software is
74428>>>// furnished to do so, subject to the following conditions:
74428>>>//
74428>>>// The above copyright notice and this permission notice shall be included in
74428>>>// all copies or substantial portions of the Software.
74428>>>//
74428>>>// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
74428>>>// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
74428>>>// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
74428>>>// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
74428>>>// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
74428>>>// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
74428>>>// SOFTWARE.
74428>>>//
74428>>>//==============================================================================
74428>>>
74428>>>Use cJsonPath.pkg
Including file: cJsonPath.pkg    (C:\Projects\ChatGPTAPI\AppSrc\cJsonPath.pkg)
74428>>>>>//==============================================================================
74428>>>>>// cJsonPath.pkg
74428>>>>>//
74428>>>>>// A class which will allow you to get either object handles or values or array
74428>>>>>// copunts from JSON objects using their path.
74428>>>>>// 
74428>>>>>// Author:  Mike Peat
74428>>>>>// Date:    06/02/2020
74428>>>>>//
74428>>>>>// Usage:
74428>>>>>//   To return a JSON object at a path:
74428>>>>>//       Get JsonAtPath of oJsonPathObject hoSourceJsonObject, path to hoVar
74428>>>>>//     or:
74428>>>>>//       Move (JsonAtPath(oJsonPathObject, hoSourceJsonObject, path)) to hoVar
74428>>>>>//
74428>>>>>//   To return a value at a path:
74428>>>>>//       Get ValueAtPath of oJsonPathObject hoSourceJsonObject path to sVar
74428>>>>>//     or
74428>>>>>//       Move (ValueAtPath(oJsonPathObject, hoSourceJson, path)) to sVar
74428>>>>>//
74428>>>>>// Path notation:
74428>>>>>//
74428>>>>>//    A string with JSON object names, separated by dots "." and array indices
74428>>>>>//    in square brackets: "foo.bar.baz[0].bill[1][0]"
74428>>>>>//
74428>>>>>// Sample JSON:
74428>>>>>//
74428>>>>>//    {
74428>>>>>//      "foo": {
74428>>>>>//              "bar": {
74428>>>>>//                      "baz": [
74428>>>>>//                              66.123,
74428>>>>>//                              {
74428>>>>>//                                      "jim": "jack"
74428>>>>>//                              },
74428>>>>>//                              false,
74428>>>>>//                              {
74428>>>>>//                                      "bob": 42
74428>>>>>//                              },
74428>>>>>//                              {
74428>>>>>//                                      "kim": "possible"
74428>>>>>//                              },
74428>>>>>//                              [55, 1, 19, {
74428>>>>>//                                      "Mork": [
74428>>>>>//                                              [35, 67, 88, 100, [21, 33, 45, "Tim"]]
74428>>>>>//                                      ]
74428>>>>>//                              }]
74428>>>>>//                      ]
74428>>>>>//              }
74428>>>>>//      }
74428>>>>>//    }
74428>>>>>//
74428>>>>>// Examples:
74428>>>>>//    Move (JsonAtPath(oJPath, hoJson, "foo.bar.baz[5][3].Mork[0][4][3]")) to hoObj
74428>>>>>//
74428>>>>>//    Get ValueAtPath of oJPath hJson "foo.bar.baz[5][3].Mork[0][4][3]" to sVal
74428>>>>>//      (sVal = "Tim")
74428>>>>>//
74428>>>>>// In the first example the JSON object would be returned; if you then performed
74428>>>>>// Move (JsonValue(hoObj)) to sVal you would get the same result as the second
74428>>>>>// example - i.e. "Tim".
74428>>>>>//
74428>>>>>// NOTE: JSON is case-sensitive, so your path-strings must exactly match the
74428>>>>>//       object names ("foo" is *not* "Foo") in the JSON file.
74428>>>>>//
74428>>>>>//==============================================================================
74428>>>>>//
74428>>>>>// Structure
74428>>>>>// =========
74428>>>>>//
74428>>>>>// The core function is JsonAtPath, which returns the JSON member in the passed
74428>>>>>// Json Object at the passed Path, if it is there.
74428>>>>>//
74428>>>>>// The two other public functions - ValueAtPath and CountAtPath - just call
74428>>>>>// JsonAtPath and then work on that to extract the Json value or the Array count
74428>>>>>// of that object respectively.
74428>>>>>//
74428>>>>>// JsonAtPath is supported by the two private functions, ObjectHandle and
74428>>>>>// ArrayHandle, which deal with Json Objects and Array Objects respectively that
74428>>>>>// are encountered in working down the path.  These call each other (or
74428>>>>>// theselves) recursively to deal with elements of the path.
74428>>>>>//
74428>>>>>//==============================================================================
74428>>>>>// Licence (MIT):
74428>>>>>//
74428>>>>>// Copyright 2020, Mike Peat, Unicorn InterGlobal Ltd.
74428>>>>>//
74428>>>>>// Permission is hereby granted, free of charge, to any person obtaining a copy
74428>>>>>// of this software and associated documentation files (the "Software"), to deal
74428>>>>>// in the Software without restriction, including without limitation the rights
74428>>>>>// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
74428>>>>>// copies of the Software, and to permit persons to whom the Software is
74428>>>>>// furnished to do so, subject to the following conditions:
74428>>>>>//
74428>>>>>// The above copyright notice and this permission notice shall be included in
74428>>>>>// all copies or substantial portions of the Software.
74428>>>>>//
74428>>>>>// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
74428>>>>>// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
74428>>>>>// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
74428>>>>>// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
74428>>>>>// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
74428>>>>>// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
74428>>>>>// SOFTWARE.
74428>>>>>//
74428>>>>>//==============================================================================
74428>>>>>// Added CountAtPath function to return the count of elements in an array at the
74428>>>>>// passed path.
74428>>>>>//==============================================================================
74428>>>>>//
74428>>>>>// 2023-03-29  MJP (UIG): Allowed passing a JSON Array instead of a JSON Object.
74428>>>>>//
74428>>>>>//==============================================================================
74428>>>>>//
74428>>>>>// 2023-04-05  MJP (UIG): Changed logic for passing an empty (i.e. "") path.
74428>>>>>//                        Previously this would be an error and always return 0,
74428>>>>>//                        but it turns out that sometimes it is not, so handled
74428>>>>>//                        it better (I think! :0).  Seems to work OK.
74428>>>>>//
74428>>>>>//==============================================================================
74428>>>>>
74428>>>>>Use UI
74428>>>>>Use cJsonObject.pkg
Including file: cJsonObject.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cJsonObject.pkg)
74428>>>>>>>// cJSONObject is defined directly in fmac
74428>>>>>>>// We just define the constants here. They have intentionally not been moved to fmac
74428>>>>>>>
74428>>>>>>>
74428>>>>>>>Enum_List
74428>>>>>>>    Define jpWhitespace_Plain for 0
74428>>>>>>>    Define jpWhitespace_Spaced for 1
74428>>>>>>>    Define jpWhitespace_Pretty for 2
74428>>>>>>>End_Enum_List
74428>>>>>>>
74428>>>>>>>Enum_List
74428>>>>>>>    Define jsonTypeNull
74428>>>>>>>    Define jsonTypeBoolean
74428>>>>>>>    Define jsonTypeDouble
74428>>>>>>>    Define jsonTypeInteger
74428>>>>>>>    Define jsonTypeObject
74428>>>>>>>    Define jsonTypeArray
74428>>>>>>>    Define jsonTypeString
74428>>>>>>>End_Enum_List
74428>>>>>>>
74428>>>>>
74428>>>>>Class cJsonPath is a cObject
74429>>>>>    
74429>>>>>    Function ArrayHandle Handle hoJson String sPath Returns Handle
74431>>>>>        Integer iLSBPos iRSBPos iIndex
74431>>>>>        Handle  hoMemb hoObj
74431>>>>>        
74431>>>>>        If not hoJson ;            Function_Return 0
74434>>>>>            
74434>>>>>        If (sPath = "") Begin
74436>>>>>            
74436>>>>>            If (JsonType(hoJson) = jsonTypeArray) ;                Function_Return hoJson
74439>>>>>                
74439>>>>>            Send Destroy of hoJson
74440>>>>>            Function_Return 0
74441>>>>>        End
74441>>>>>>
74441>>>>>        
74441>>>>>        Move (Pos("[", sPath)) to iLSBPos
74442>>>>>        Move (Pos("]", sPath)) to iRSBPos
74443>>>>>        
74443>>>>>        If (not(iLSBPos) or ;            not(iRSBPos) or ;            (iLSBPos > iRSBPos) or ;            (iLSBPos <> 1)) Begin
74445>>>>>            Send Destroy of hoJson
74446>>>>>            Function_Return 0
74447>>>>>        End
74447>>>>>>
74447>>>>>        
74447>>>>>        Move (Mid(sPath, (iRSBPos - iLSBPos - 1), (iLSBPos + 1))) to iIndex
74448>>>>>        
74448>>>>>        If (MemberCount(hoJson) <= iIndex) Begin
74450>>>>>            Send Destroy of hoJson
74451>>>>>            Function_Return 0
74452>>>>>        End
74452>>>>>>
74452>>>>>        
74452>>>>>        Get MemberByIndex of hoJson iIndex to hoMemb
74453>>>>>
74453>>>>>        If (Length(Trim(sPath)) = iRSBPos) Begin // It ends here
74455>>>>>            Send Destroy of hoJson
74456>>>>>            Function_Return hoMemb
74457>>>>>        End
74457>>>>>>
74457>>>>>
74457>>>>>        Move (Right(sPath, (Length(sPath) - iRSBPos))) to sPath
74458>>>>>        If (Left(sPath, 1) = ".") ;            Move (Replace(".", sPath, "")) to sPath
74461>>>>>        Get ObjectHandle hoMemb sPath to hoObj
74462>>>>>        Send Destroy of hoJson
74463>>>>>        Function_Return hoObj
74464>>>>>    End_Function
74465>>>>>    
74465>>>>>    Function ObjectHandle Handle hoJson String sPath Returns Handle
74467>>>>>        Integer iLSBPos iDotPos iPos
74467>>>>>        String  sMemb
74467>>>>>        Handle  hoMemb hoObj
74467>>>>>
74467>>>>>        If not hoJson ;            Function_Return 0
74470>>>>>        
74470>>>>>        If (sPath = "") Begin
74472>>>>>            
74472>>>>>            If (JsonType(hoJson) = jsonTypeObject) ;                Function_Return hoJson
74475>>>>>                
74475>>>>>            Send Destroy of hoJson
74476>>>>>            Function_Return 0
74477>>>>>        End
74477>>>>>>
74477>>>>>            
74477>>>>>        If (Left(sPath, 1) = "[") ;            Function_Return (ArrayHandle(Self, hoJson, sPath))
74480>>>>>        
74480>>>>>        Move (Pos(".", sPath))      to iDotPos
74481>>>>>        Move (Pos("[", sPath))      to iLSBPos
74482>>>>>        
74482>>>>>        If (iLSBPos and iDotPos) ;            Move (iDotPos min iLSBPos)  to iPos
74485>>>>>        Else If (iDotPos) ;            Move iDotPos                to iPos
74489>>>>>        Else ;            Move iLSBPos                to iPos
74491>>>>>        
74491>>>>>        If not iPos Begin  // We are there!
74493>>>>>            
74493>>>>>            If (HasMember(hoJson, sPath)) Begin
74495>>>>>                Get Member of hoJson sPath to hoMemb
74496>>>>>                Send Destroy of hoJson
74497>>>>>                Function_Return hoMemb
74498>>>>>            End
74498>>>>>>
74498>>>>>            Else Begin
74499>>>>>                Send Destroy of hoJson
74500>>>>>                Function_Return 0
74501>>>>>            End
74501>>>>>>
74501>>>>>        
74501>>>>>        End
74501>>>>>>
74501>>>>>        
74501>>>>>        Move (Left(sPath, (iPos - 1)))    to sMemb
74502>>>>>        
74502>>>>>        If (HasMember(hoJson, sMemb)) Begin
74504>>>>>            Get Member of hoJson sMemb to hoMemb
74505>>>>>            Send Destroy of hoJson
74506>>>>>            Move (Right(sPath, (Length(sPath) - iPos + 1))) to sPath
74507>>>>>            If (Left(sPath, 1) = ".") ;                Move (Replace(".", sPath, "")) to sPath
74510>>>>>            Get ObjectHandle hoMemb sPath to hoObj
74511>>>>>            Function_Return hoObj
74512>>>>>        End
74512>>>>>>
74512>>>>>        
74512>>>>>        Send Destroy of hoJson
74513>>>>>        Function_Return 0
74514>>>>>    End_Function
74515>>>>>    
74515>>>>>    Function JsonAtPath Handle hoJson String sPath Returns Handle
74517>>>>>        Handle  hoObj
74517>>>>>        UChar[] ucaJson
74518>>>>>        Boolean bOK
74518>>>>>        
74518>>>>>        If not hoJson ;            Function_Return 0
74521>>>>>        
74521>>>>>        If ((JsonType(hoJson) = jsonTypeArray) and (MemberCount(hoJson) = 0)) ;            Function_Return 0
74524>>>>>        
74524>>>>>        // Do this to "copy" hoJson to hoObj, so hoJson does not get destroyed
74524>>>>>        // in the process
74524>>>>>        Get StringifyUtf8 of hoJson to ucaJson
74525>>>>>        Get CreateNamed (RefClass(cJsonObject)) "CopyJson" to hoObj
74526>>>>>        Get ParseUtf8 of hoObj ucaJson to bOK
74527>>>>>        If (JsonType(hoObj) = jsonTypeArray) ;            Function_Return (ArrayHandle(Self, hoObj, sPath))
74530>>>>>        Else ;            Function_Return (ObjectHandle(Self, hoObj, sPath))
74532>>>>>    End_Function
74533>>>>>    
74533>>>>>    Function ValueAtPath Handle hoJson String sPath Returns String
74535>>>>>        Handle  hoObj
74535>>>>>        String  sVal
74535>>>>>        Integer iType
74535>>>>>        
74535>>>>>        Get JsonAtPath hoJson sPath to hoObj
74536>>>>>
74536>>>>>        If hoObj Begin
74538>>>>>            Get JsonType of hoObj to iType
74539>>>>>            
74539>>>>>            If ((iType <> jsonTypeObject) and ;                (iType <> jsonTypeArray) and ;                (iType <> jsonTypeNull)) ;                Move (JsonValue(hoObj)) to sVal
74542>>>>>            
74542>>>>>            Send Destroy of hoObj
74543>>>>>        End
74543>>>>>>
74543>>>>>        
74543>>>>>        Function_Return sVal
74544>>>>>    End_Function
74545>>>>>    
74545>>>>>    Function CountAtPath Handle hoJson String sPath Returns Integer
74547>>>>>        Integer iCount
74547>>>>>        
74547>>>>>        Get JsonAtPath hoJson sPath to hoJson
74548>>>>>        
74548>>>>>        If not hoJson ;            Function_Return 0
74551>>>>>        
74551>>>>>        If (JsonType(hoJson) = jsonTypeArray) ;            Get MemberCount of hoJson to iCount
74554>>>>>            
74554>>>>>        Send Destroy of hoJson
74555>>>>>        Function_Return iCount
74556>>>>>    End_Function
74557>>>>>
74557>>>>>End_Class
74558>>>
74558>>>Object oJsonPathObject is a cJsonPath
74560>>>End_Object
74561>>>
74561>>>Function JsonObjectAtPath Global Handle hoJson String sPath Returns Handle
74563>>>    Function_Return (JsonAtPath(oJsonPathObject, hoJson, sPath))
74564>>>End_Function
74565>>>
74565>>>Function JsonValueAtPath Global Handle hoJson String sPath Returns String
74567>>>    Function_Return (ValueAtPath(oJsonPathObject, hoJson, sPath))
74568>>>End_Function
74569>>>
74569>>>Function JsonCountAtPath Global Handle hoJson String sPath Returns Integer
74571>>>    Function_Return (CountAtPath(oJsonPathObject, hoJson, sPath))
74572>>>End_Function
74573>    
74573>    Object oClientArea is a ClientArea
74575>        Use StdAbout.pkg
Including file: StdAbout.pkg    (C:\Program Files\DataFlex 23.0\Pkg\StdAbout.pkg)
74575>>>// This provides a quick and simple way to create an about package for a program.
74575>>>// You need to create a message inside you client area called Activate_About.
74575>>>// Within this message you should send the message DoAbout passing needed
74575>>>// string information.
74575>>>//
74575>>>//       Procedure Activate_About
74575>>>//           Send DoAbout sTitle sVersion sCopyright sAuthor sBitmap
74575>>>//       End_Procedure
74575>>>//    where: sTitle =     Name of application. If none provided, uses caption
74575>>>//                        bar title
74575>>>//           sVersion   = Version Line. If none provided, will be blank
74575>>>//           sCopyRight = Copyright Line. If none provided, will be blank
74575>>>//           sAuthor    = Author name, blank if none provided
74575>>>//           sBitMap    = Bitmap logo. If none provided, standard VDF bitmap
74575>>>//                        is used.
74575>>>// It is expected that you will place this in your own object package. For
74575>>>// example an order about package may look like this:
74575>>>//
74575>>>//   // OrderAbout.pkg
74575>>>//   Use StdAbout.pkg
74575>>>//   Procedure Activate_About
74575>>>//      String sTitle sCopyright sVersion sAuthor
74575>>>//      Move "My Order Entry System" to sTitle
74575>>>//      Move "Version 2.1" to sVersion
74575>>>//      Move "Copyright xxxx, Super Software Inc." to sCopyright
74575>>>//      Move "John Smith"  to sAuthor
74575>>>//      Send DoAbout sTitle sVersion sCopyright sAuthor ""
74575>>>//   end_procedure
74575>>>//   // end of file.
74575>>>
74575>>>Use DfAbout.pkg
Including file: Dfabout.pkg    (C:\Program Files\DataFlex 23.0\Pkg\Dfabout.pkg)
74575>>>>>Use LanguageText.pkg
74575>>>>>Use Windows.pkg
74575>>>>>Use DFbitmap.pkg
74575>>>>>Use GlobalFunctionsProcedures.pkg
74575>>>>>Use cTextEdit.pkg
74575>>>>>Use tWinStructs.pkg
74575>>>>>
74575>>>>>Use cli.pkg
74575>>>>>Use DFBTRDRV.PKG
Including file: DFBTRDRV.PKG    (C:\Program Files\DataFlex 23.0\Pkg\DFBTRDRV.PKG)
74575>>>>>>>// $File title : Package for the DataFlex Connectivity Kit for Pervasive.SQL
74575>>>>>>>// Notice      : This package contains constants and commands, used to call
74575>>>>>>>//               specific functions in the DFBTRDRV.
74575>>>>>>>Use Ui
74575>>>>>>>//
74575>>>>>>>// Driver Indentification
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>// Driver attributes
74575>>>>>>>//
74575>>>>>>>// Call_Driver functions ID's
74575>>>>>>>//
74575>>>>>>>//
74575>>>>>>>// DFBTRFN_CONVERT_FILE options
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// DFBTRFN_SET_OWNER options
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// DFBTRFN_SET_TRANSACTION_TYPE options
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to create all vars which may be needed
74575>>>>>>>// in other commands.
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to set the owner of a Btrieve file.
74575>>>>>>>// File must have been opened.
74575>>>>>>>// Filenumber needs to be passed.
74575>>>>>>>// To clear set the owner to "".
74575>>>>>>>// Examples:
74575>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret"
74575>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" READONLY CALLBACK MyCallBack
74575>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" ENCRYPT
74575>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to "Secret" READONLY ENCRYPT CALLBACK MyCallBack
74575>>>>>>>// To clear:
74575>>>>>>>//      DFBTR_SET_OWNER MyFileNumber to ""
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to parse DFBTR_SET_OWNVER
74575>>>>>>>// options.
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to parse for Callback
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to clear the owner of a Btrieve file.
74575>>>>>>>// File must have been opened.
74575>>>>>>>// Filenumber needs to be passed.
74575>>>>>>>// Examples:
74575>>>>>>>//      DFBTR_CLEAR_OWNER MyFileNumber
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to add a owner name to the internal list of ownernames
74575>>>>>>>// which will be tries when opening files.
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to remove all owners from the internal list of ownernames
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to set the owner name to be used when opening the DDF files.
74575>>>>>>>// The DDF owner is required when Pervasive.SQL security is turned on.
74575>>>>>>>// The DDF owner is equal to the password of the Master user in Pervasive.SQL
74575>>>>>>>// This command overwrites the DDF_OWNER setting in DFBTRDRV.INT
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to change the transaction type.
74575>>>>>>>// Valid types are:
74575>>>>>>>//     DFBTRTT_NONE
74575>>>>>>>//     DFBTRTT_EXCLUSIVE
74575>>>>>>>//     DFBTRTT_CONCURRENT
74575>>>>>>>//
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to get the current transaction type.
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to set explicit_locking
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to get explicit locking
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to set detection for incompatible positive signs in numeric fields
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>//
74575>>>>>>>// Command to get detection for incompatible positive signs in numeric fields
74575>>>>>>>//
74575>>>>>>>
74575>>>>>>>// Purpose: An instance of this class can be used as a broker object to
74575>>>>>>>//          call several Dfbtrdrv releated methods.
74575>>>>>>>
74575>>>>>>>Class cDFBtrDrvHandler is an Array
74576>>>>>>>    
74576>>>>>>>    Procedure Construct_Object Integer iImage
74578>>>>>>>        Forward Send Construct_object iImage
74580>>>>>>>        
74580>>>>>>>        Property String  psDriverID "DFBTRDRV"
74581>>>>>>>    End_Procedure
74582>>>>>>>    
74582>>>>>>>    //  The revsion of a Dfbtrdrv Connectivity Kit
74582>>>>>>>    //
74582>>>>>>>    
74582>>>>>>>    Function CKRevision Returns String
74584>>>>>>>        String  sDriverID
74584>>>>>>>        String  sRevision
74584>>>>>>>        String  sVoid
74584>>>>>>>        Integer iRetval
74584>>>>>>>        
74584>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74584>>>>>>>        // This error would otherwise be raised when we have an older
74584>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74584>>>>>>>        Send Ignore_error to Error_object_Id 20491
74585>>>>>>>        Get psDriverID to sDriverID
74586>>>>>>>        Move (Repeat(" ", 255)) to sRevision
74587>>>>>>>        Call_Driver 0 sDRiverID Function DFBTRFN_CKREVISION Callback 0 Passing sRevision sVoid 0 Result iRetval
74592>>>>>>>        Send Trap_Error to Error_object_Id 20491
74593>>>>>>>        If (Trim(sRevision) = "") Begin
74595>>>>>>>            // Unable to get the revision. return all zeroes.
74595>>>>>>>            Move "0.0.0.0" to sRevision
74596>>>>>>>        End
74596>>>>>>>>
74596>>>>>>>        Function_Return sRevision
74597>>>>>>>    End_Function
74598>>>>>>>    
74598>>>>>>>    Function CkUsesUri Returns Integer
74600>>>>>>>        String  sDriverID
74600>>>>>>>        String  sVoid1
74600>>>>>>>        String  sVoid2
74600>>>>>>>        Integer iRetval
74600>>>>>>>        
74600>>>>>>>        Get psDriverID to sDriverID
74601>>>>>>>        
74601>>>>>>>        Move 0 to iRetval
74602>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74602>>>>>>>        // This error would otherwise be raised when we have an older
74602>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKUSESURI function
74602>>>>>>>        Send Ignore_error to Error_object_Id 20491
74603>>>>>>>        Call_Driver 0 sDRiverID Function DFBTRFN_CKUSESURI Callback 0 Passing sVoid1 sVoid2 0 Result iRetval
74608>>>>>>>        Send Trap_Error to Error_object_Id 20491
74609>>>>>>>        
74609>>>>>>>        Function_Return iRetval
74610>>>>>>>    End_Function
74611>>>>>>>    
74611>>>>>>>    
74611>>>>>>>    
74611>>>>>>>    // Extract the Nth part of a a.b.c.d revsion string.
74611>>>>>>>    //
74611>>>>>>>    // Returns : The part version number or -1 if there is no such part number.
74611>>>>>>>    //
74611>>>>>>>    
74611>>>>>>>    Function ExtractPartFromRevision Integer iPartNum String sRevision Returns Integer
74613>>>>>>>        Integer iPartRev
74613>>>>>>>        Integer iCurrentPart
74613>>>>>>>        Integer iSeparatorPos
74613>>>>>>>        
74613>>>>>>>        If (iPartNum > 4) ;            Function_Return -1
74616>>>>>>>        
74616>>>>>>>        Move 0 to iCurrentPart
74617>>>>>>>        Repeat
74617>>>>>>>>
74617>>>>>>>            Move (Pos(".", sRevision)) to iSeparatorPos
74618>>>>>>>            If (iSeparatorPos > 0) Begin
74620>>>>>>>                Move (Left(sRevision, iSeparatorPos - 1)) to iPartRev
74621>>>>>>>                Move (Right(sRevision, Length(sRevision) - iSeparatorPos)) to sRevision
74622>>>>>>>                Increment iCurrentPart
74623>>>>>>>            End
74623>>>>>>>>
74623>>>>>>>            Else If (sRevision <> "") Begin
74626>>>>>>>                Move sRevision to iPartRev
74627>>>>>>>                Move "" to sRevision
74628>>>>>>>                Increment iCurrentPart
74629>>>>>>>            End
74629>>>>>>>>
74629>>>>>>>            Else ;                Move -1 to iPartRev
74631>>>>>>>        Until (iCurrentPart >= iPartNum or iPartRev = -1)
74633>>>>>>>        
74633>>>>>>>        Function_Return iPartRev
74634>>>>>>>    End_Function
74635>>>>>>>    
74635>>>>>>>    
74635>>>>>>>    
74635>>>>>>>    //
74635>>>>>>>    //  Returns the major revision of the CK
74635>>>>>>>    //
74635>>>>>>>    
74635>>>>>>>    Function CKMajorRevision Returns Integer
74637>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 1, CKRevision(Current_Object)))
74638>>>>>>>    End_Function
74639>>>>>>>    
74639>>>>>>>    
74639>>>>>>>    
74639>>>>>>>    //  Returns the minor revision of the CK
74639>>>>>>>    //
74639>>>>>>>    
74639>>>>>>>    Function CKMinorRevision Returns Integer
74641>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 2, CKRevision(Current_Object)))
74642>>>>>>>    End_Function
74643>>>>>>>    
74643>>>>>>>    
74643>>>>>>>    //  Returns the release revision of the CK
74643>>>>>>>    //
74643>>>>>>>    
74643>>>>>>>    Function CKReleaseRevision Returns Integer
74645>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 3, CKRevision(Current_Object)))
74646>>>>>>>    End_Function
74647>>>>>>>    
74647>>>>>>>    
74647>>>>>>>    //  Returns the major revision of the CK
74647>>>>>>>    //
74647>>>>>>>    
74647>>>>>>>    Function CKBuildRevision Returns Integer
74649>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 4, CKRevision(Current_Object)))
74650>>>>>>>    End_Function
74651>>>>>>>    
74651>>>>>>>    
74651>>>>>>>    //  Determines if the CK conforms to a passed minimal revsion.
74651>>>>>>>    //
74651>>>>>>>    
74651>>>>>>>    Function IsMinimalRevision Integer iMajor Integer iMinor Integer iRelease Integer iBuild Returns Integer
74653>>>>>>>        If (iMajor < CKMajorRevision(Current_object)) ;            Function_Return (True)
74656>>>>>>>        Else If (iMajor = CKMajorRevision(Current_object)) Begin
74659>>>>>>>            If (iMinor < CKMinorRevision(Current_object)) ;                Function_Return (True)
74662>>>>>>>            Else If (iMinor = CKMinorRevision(Current_object)) Begin
74665>>>>>>>                If (iRelease < CKReleaseRevision(Current_object)) ;                    Function_Return (True)
74668>>>>>>>                Else If (iRelease = CKReleaseRevision(Current_object) and iBuild <= CKBuildRevision(Current_object)) ;                    Function_Return (True)
74672>>>>>>>            End
74672>>>>>>>>
74672>>>>>>>        End
74672>>>>>>>>
74672>>>>>>>        
74672>>>>>>>        Function_Return (False)
74673>>>>>>>    End_Function
74674>>>>>>>    
74674>>>>>>>    //   Functions to query the Pervasive.SQL version:
74674>>>>>>>    //       PSQLRequesterVersionInfo    Integer iFileNum Returns String
74674>>>>>>>    //       PSQLLocalEngineVersionInfo  Integer iFileNum Returns String
74674>>>>>>>    //       PSQLServerEngineVersionInfo Integer iFileNum Returns String
74674>>>>>>>    //
74674>>>>>>>    //   All 3 functions return the version of a Pervasive.SQL component
74674>>>>>>>    //   in the following format:
74674>>>>>>>    //       <version>.<revision>.<type>
74674>>>>>>>    //   possible values for <type>:
74674>>>>>>>    //       9 for 32-bit Windows workstation/workgroup engine or Linux
74674>>>>>>>    //         server using Workgroup authentication mode
74674>>>>>>>    //       C for client cache engine
74674>>>>>>>    //       D for DOS workstation
74674>>>>>>>    //       N for client Requester
74674>>>>>>>    //       S for NetWare server
74674>>>>>>>    //       T for 32-bit Windows server engine
74674>>>>>>>    //       U for Linux server using PAM or BTPASSWD authentication
74674>>>>>>>    //
74674>>>>>>>    //   example:
74674>>>>>>>    //       8.50.T
74674>>>>>>>    //   will be returned for a Pervasive.SQL 8.5 Server Engine running on
74674>>>>>>>    //   32-bits Windows server.
74674>>>>>>>    //
74674>>>>>>>    //   The FileNumber parameter must specify an opened table or 0.
74674>>>>>>>    //   For PSQLServerEngineVersionInfo the FileNumber can not be 0.
74674>>>>>>>    //
74674>>>>>>>    //   If the version information is not available or can not be obtained
74674>>>>>>>    //   the functions will return "0.0.0"
74674>>>>>>>    
74674>>>>>>>    //  Returns the version information of the
74674>>>>>>>    //           Pervasive.SQL Client requester.
74674>>>>>>>    
74674>>>>>>>    Function PSQLRequesterVersionInfo Integer iFileNum Returns String
74676>>>>>>>        
74676>>>>>>>        String  sDriverID
74676>>>>>>>        String  sVersion
74676>>>>>>>        String  sVoid
74676>>>>>>>        Integer iRetval
74676>>>>>>>        
74676>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74676>>>>>>>        // This error would otherwise be raised when we have an older
74676>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74676>>>>>>>        Send Ignore_error to Error_object_Id 20491
74677>>>>>>>        Get psDriverID to sDriverID
74678>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74679>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLREQUESTERVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74684>>>>>>>        Send Trap_Error to Error_object_Id 20491
74685>>>>>>>        If (Trim(sVersion) = "") Begin
74687>>>>>>>            // Unable to get the revision. return all zeroes.
74687>>>>>>>            Move "0.0.0" to sVersion
74688>>>>>>>        End
74688>>>>>>>>
74688>>>>>>>        Function_Return sVersion
74689>>>>>>>    End_Function
74690>>>>>>>    
74690>>>>>>>    //           Pervasive.SQL Engine
74690>>>>>>>    
74690>>>>>>>    Function PSQLLocalEngineVersionInfo Integer iFileNum Returns String
74692>>>>>>>        
74692>>>>>>>        String  sDriverID
74692>>>>>>>        String  sVersion
74692>>>>>>>        String  sVoid
74692>>>>>>>        Integer iRetval
74692>>>>>>>        
74692>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74692>>>>>>>        // This error would otherwise be raised when we have an older
74692>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74692>>>>>>>        Send Ignore_error to Error_object_Id 20491
74693>>>>>>>        Get psDriverID to sDriverID
74694>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74695>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLLOCALENGINEVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74700>>>>>>>        Send Trap_Error to Error_object_Id 20491
74701>>>>>>>        If (Trim(sVersion) = "") Begin
74703>>>>>>>            // Unable to get the revision. return all zeroes.
74703>>>>>>>            Move "0.0.0" to sVersion
74704>>>>>>>        End
74704>>>>>>>>
74704>>>>>>>        Function_Return sVersion
74705>>>>>>>    End_Function
74706>>>>>>>    
74706>>>>>>>    //  Returns the version information of the
74706>>>>>>>    //           Pervasive.SQL Server Engine
74706>>>>>>>    
74706>>>>>>>    Function PSQLServerEngineVersionInfo Integer iFileNum Returns String
74708>>>>>>>        
74708>>>>>>>        String  sDriverID
74708>>>>>>>        String  sVersion
74708>>>>>>>        String  sVoid
74708>>>>>>>        Integer iRetval
74708>>>>>>>        
74708>>>>>>>        // Ignore error 20491 DFBTRERR_INVALID_DRIVER_FUNCTION_CALL.
74708>>>>>>>        // This error would otherwise be raised when we have an older
74708>>>>>>>        // DFBTRDRV version that has no DFBTRFN_CKREVISION function
74708>>>>>>>        Send Ignore_error to Error_object_Id 20491
74709>>>>>>>        Get psDriverID to sDriverID
74710>>>>>>>        Move (Repeat(" ", 255)) to sVersion
74711>>>>>>>        Call_Driver iFileNum sDRiverID Function DFBTRFN_PSQLSERVERENGINEVERSIONINFO Callback 0 Passing sVersion sVoid 0 Result iRetval
74716>>>>>>>        Send Trap_Error to Error_object_Id 20491
74717>>>>>>>        If (Trim(sVersion) = "") Begin
74719>>>>>>>            // Unable to get the revision. return all zeroes.
74719>>>>>>>            Move "0.0.0" to sVersion
74720>>>>>>>        End
74720>>>>>>>>
74720>>>>>>>        Function_Return sVersion
74721>>>>>>>    End_Function
74722>>>>>>>    
74722>>>>>>>End_Class
74723>>>>>>>
74723>>>>>>>
74723>>>>>Use MSSqldrv.pkg
Including file: MSSqldrv.pkg    (C:\Program Files\DataFlex 23.0\Pkg\MSSqldrv.pkg)
74723>>>>>>>//     Package that declares MS SQL driver constants and functions.
74723>>>>>>>//     This package can be used by developers who want to add Data Access
74723>>>>>>>//     MS SQL Client specific code to a DataFlex application.
74723>>>>>>>
74723>>>>>>>Use Cli.pkg
74723>>>>>>>Use SQL.pkg
74723>>>>>>>
74723>>>>>>>//   Driver Indentification
74723>>>>>>>
74723>>>>>>>//   Error number constants
74723>>>>>>>
74723>>>>>>>
74723>>>>>>>//   Possible DF_DRIVER_SQLSERVER_CLIENT_VERSION values
74723>>>>>>>
74723>>>>>>>
74723>>>>>>>
74723>>>>>>>
74723>>>>>>>
74723>>>>>>>
74723>>>>>>>// SQL Server spcific types.
74723>>>>>>>Define SQL_SS_TIMESTAMPOFFSET   for   (-155) //SQL server datetimeoffset type */
74723>>>>>>>Define SQL_SS_TIME2             for   (-154) //SQL server time type */
74723>>>>>>>Define SQL_SS_XML               for   (-152) //SQL server xml type */
74723>>>>>>>Define SQL_SS_VARIANT           for   (-150) //SQL server variant type */
74723>>>>>>>
74723>>>>>>>// SQL Server spcific types.
74723>>>>>>>Define SQL_TYPE_TIMESTAMP2      for   (-200) //SQL server datetime2 type */
74723>>>>>>>Define SQL_VARCHARMAX           for   (-201) //SQL server varchar(max) type */
74723>>>>>>>Define SQL_WVARCHARMAX          for   (-202) //SQL server wvarchar(max) type */
74723>>>>>>>Define SQL_VARBINARYMAX         for   (-203) //SQL server varbinary(max) type */
74723>>>>>>>Define SQL_TYPE_MONEY           for   (-204) //SQL server money type */
74723>>>>>>>Define SQL_TYPE_SMALLMONEY      for   (-205) //SQL server smallmoney type */
74723>>>>>>>Define SQL_TYPE_SMALLDATETIME   for   (-206) //SQL server smalldatetype type */
74723>>>>>>>
74723>>>>>>>
74723>>>>>>>//   MSSQL_SetConstraint <FileNum> <ConstraintText>
74723>>>>>>>//
74723>>>>>>>//     Setup a constraint for a file.
74723>>>>>>>
74723>>>>>>>
74723>>>>>>>Class cMSSQLHandler is a cCLIHandler
74724>>>>>>>    
74724>>>>>>>    Procedure Construct_Object
74726>>>>>>>        Forward Send Construct_Object
74728>>>>>>>        
74728>>>>>>>        Set psDriverID to MSSQLDRV_ID
74729>>>>>>>    End_Procedure
74730>>>>>>>    
74730>>>>>>>    
74730>>>>>>>    
74730>>>>>>>    //   Extract the list from the out connect string.
74730>>>>>>>    Function ExtractList String sOutConnStr Integer hoStore Returns Integer
74732>>>>>>>        String  sItem
74732>>>>>>>        Integer iStart
74732>>>>>>>        Integer iEnd
74732>>>>>>>        
74732>>>>>>>        If (hoStore = 0) ;            Move Current_object to hoStore
74735>>>>>>>        
74735>>>>>>>        Send Delete_Data to hoStore
74736>>>>>>>        Move (Pos("{", sOutConnStr)) to iStart
74737>>>>>>>        While (iStart > 0)
74741>>>>>>>            Move (Right(sOutConnStr, Length(sOutConnStr) - iStart)) to sOutConnStr
74742>>>>>>>            If (Left(sOutConnStr, 1) = "}") ;                Move 0 to iStart
74745>>>>>>>            Else Begin
74746>>>>>>>                Move (Pos(",", sOutConnStr)) to iStart
74747>>>>>>>                Move (Pos("}", sOutConnStr)) to iEnd
74748>>>>>>>                If ((iStart = 0) or (iEnd < iStart)) ;                    Move iEnd to iStart
74751>>>>>>>                
74751>>>>>>>                If (iStart > 0) ;                    Set Value of hoStore  (Item_Count(Current_Object)) to (Left(sOutConnStr, iStart - 1))
74754>>>>>>>                
74754>>>>>>>                If (iStart = iEnd) ;                    Move 0 to iStart
74757>>>>>>>            End
74757>>>>>>>>
74757>>>>>>>        Loop
74758>>>>>>>>
74758>>>>>>>        
74758>>>>>>>        Function_Return (Item_Count(hoStore))
74759>>>>>>>    End_Procedure
74760>>>>>>>    
74760>>>>>>>    
74760>>>>>>>    
74760>>>>>>>    //   Call the driver's browse connect function
74760>>>>>>>    Function BrowseConnect String sInConnStr Returns String
74762>>>>>>>        String  sDriver
74762>>>>>>>        String  sOutConnStr
74762>>>>>>>        Integer iArg
74762>>>>>>>        Integer iRetval
74762>>>>>>>        
74762>>>>>>>        Get psDriverID to sDriver
74763>>>>>>>        If (sDriver <> "") Begin
74765>>>>>>>            Move (Repeat(" ", 8192)) to sOutConnStr
74766>>>>>>>            Call_Driver 0 sDRiver Function CLI_BROWSECONNECT Callback 0 Passing sInConnStr sOutConnStr iArg Result iRetval
74771>>>>>>>        End
74771>>>>>>>>
74771>>>>>>>        
74771>>>>>>>        Function_Return sOutConnStr
74772>>>>>>>    End_Function// BrowseConnect
74773>>>>>>>    
74773>>>>>>>    
74773>>>>>>>    Function BrowseConnectLocal String sInConnStr Returns String
74775>>>>>>>        String  sDriver
74775>>>>>>>        String  sOutConnStr
74775>>>>>>>        Integer iArg
74775>>>>>>>        Integer iRetval
74775>>>>>>>        
74775>>>>>>>        Move 1 to iArg // Browses only local
74776>>>>>>>        
74776>>>>>>>        Get psDriverID to sDriver
74777>>>>>>>        If (sDriver <> "") Begin
74779>>>>>>>            Move (Repeat(" ", 8192)) to sOutConnStr
74780>>>>>>>            Call_Driver 0 sDRiver Function CLI_BROWSECONNECT Callback 0 Passing sInConnStr sOutConnStr iArg Result iRetval
74785>>>>>>>        End
74785>>>>>>>>
74785>>>>>>>        
74785>>>>>>>        Function_Return sOutConnStr
74786>>>>>>>    End_Function// BrowseConnect
74787>>>>>>>    
74787>>>>>>>    
74787>>>>>>>    Function EnumerateServersNetworkOrLocal Integer iNetworkLocal  Returns Integer
74789>>>>>>>        
74789>>>>>>>        String  sServerList
74789>>>>>>>        Integer iNumServers
74789>>>>>>>        Integer iDriver
74789>>>>>>>        Integer iClientVersion
74789>>>>>>>        String  sDriver
74789>>>>>>>        
74789>>>>>>>        Get DriverIndex MSSQLDRV_ID to iDriver
74790>>>>>>>        
74790>>>>>>>        If (iDriver) Begin
74792>>>>>>>            
74792>>>>>>>            Get_Attribute DF_DRIVER_SQLSERVER_CLIENT_VERSION of iDriver to iClientVersion
74795>>>>>>>            
74795>>>>>>>            Get SqlServerClientDriverName iClientVersion to sDriver
74796>>>>>>>            
74796>>>>>>>            Move ("DRIVER={" + sDriver + "};") to sDriver
74797>>>>>>>            If (iNetworkLocal = 0) Begin
74799>>>>>>>                Get BrowseConnect sDriver to sServerList
74800>>>>>>>            End
74800>>>>>>>>
74800>>>>>>>            Else Begin
74801>>>>>>>                Get BrowseConnectLocal sDriver to sServerList
74802>>>>>>>            End
74802>>>>>>>>
74802>>>>>>>            Get ExtractList sServerList Current_object to iNumServers
74803>>>>>>>        End
74803>>>>>>>>
74803>>>>>>>        
74803>>>>>>>        Function_Return iNumServers
74804>>>>>>>        
74804>>>>>>>    End_Function
74805>>>>>>>    
74805>>>>>>>    //   Enumerate the available SQL Server database servers
74805>>>>>>>    //   This function will return all SQL Server instances on the network.
74805>>>>>>>    //   This may take a long time.
74805>>>>>>>    //   To enumerate only local SQL Server instances use EnumerateServersLocal
74805>>>>>>>    Function EnumerateServers Returns Integer
74807>>>>>>>        
74807>>>>>>>        Integer iNumServers
74807>>>>>>>        Integer iNetworkLocal
74807>>>>>>>        
74807>>>>>>>        Move 0 to iNetworkLocal // 0 = enumerate network servers
74808>>>>>>>        
74808>>>>>>>        Get EnumerateServersNetworkOrLocal iNetworkLocal to iNumServers
74809>>>>>>>        
74809>>>>>>>        Function_Return iNumServers
74810>>>>>>>        
74810>>>>>>>    End_Function
74811>>>>>>>    
74811>>>>>>>    
74811>>>>>>>    //   Enumerate the available SQL Server database servers
74811>>>>>>>    //   This function will return only return SQL Server instance on the local machine
74811>>>>>>>    //   To enumerate all SQL Server instances in a network use EnumerateServers
74811>>>>>>>    Function EnumerateServersLocal Returns Integer
74813>>>>>>>        
74813>>>>>>>        Integer iNumServers
74813>>>>>>>        Integer iNetworkLocal
74813>>>>>>>        
74813>>>>>>>        Move 1 to iNetworkLocal // 1 = enumerate local servers
74814>>>>>>>        
74814>>>>>>>        Get EnumerateServersNetworkOrLocal iNetworkLocal to iNumServers
74815>>>>>>>        
74815>>>>>>>        Function_Return iNumServers
74816>>>>>>>        
74816>>>>>>>    End_Function
74817>>>>>>>    
74817>>>>>>>    
74817>>>>>>>    
74817>>>>>>>    //   Enumerate database in a given server.
74817>>>>>>>    Function EnumerateDatabases String sServer String sUser String sPassWord Returns Integer
74819>>>>>>>        Integer hoSQL
74819>>>>>>>        String  sConnect
74819>>>>>>>        String  sDatabase
74819>>>>>>>        Integer hdbc
74819>>>>>>>        Integer hstmt
74819>>>>>>>        Integer iFetchResult
74819>>>>>>>        
74819>>>>>>>        If (Num_Arguments < 3) ;            Move "" to sPassWord
74822>>>>>>>        If (Num_Arguments < 2) ;            Move "" to sUser
74825>>>>>>>        
74825>>>>>>>        If (sUser <> "") ;            Move ("SERVER=" + Trim(sServer) + ";UID=" + Trim(sUser) + ";PWD=" + Trim(sPassword) + ";") to sConnect
74828>>>>>>>        Else ;            Move ("SERVER=" + Trim(sServer) + ";Trusted_Connection=yes") to sConnect
74830>>>>>>>        
74830>>>>>>>        Object oEnumDBSQLmanager is a cSQLHandleManager
74832>>>>>>>            Move Current_Object to hoSQL
74833>>>>>>>        End_Object
74834>>>>>>>        
74834>>>>>>>        If (hoSQL <> 0) Begin
74836>>>>>>>            Get SQLConnect of hoSQL "MSSQLDRV" sConnect to hdbc
74837>>>>>>>            If (hdbc <> 0) Begin
74839>>>>>>>                Get SQLOpen of hdbc to hstmt
74840>>>>>>>                If (hstmt <> 0) Begin
74842>>>>>>>                    //   We could do a direct select on the sysdatabases table but we use
74842>>>>>>>                    //   the stored procedure sp_database instead. SQL Server recommends this
74842>>>>>>>                    //   approach in case meta data might change, the stored procedure will
74842>>>>>>>                    //   stay the same.
74842>>>>>>>                    Send SQLSetProcedureName to hstmt "sp_databases"
74843>>>>>>>                    Send SQLCall to hstmt
74844>>>>>>>                    Repeat
74844>>>>>>>>
74844>>>>>>>                        Get SQLFetch of hstmt to iFetchResult
74845>>>>>>>                        If (iFetchResult <> 0) Begin
74847>>>>>>>                            Get SQLColumnValue of hstmt 1 to sDatabase
74848>>>>>>>                            Set Value  (Item_Count(Current_Object)) to sDatabase
74849>>>>>>>                        End
74849>>>>>>>>
74849>>>>>>>                    Until (iFetchResult = 0)
74851>>>>>>>                    
74851>>>>>>>                    Send SQLClose to hstmt
74852>>>>>>>                End
74852>>>>>>>>
74852>>>>>>>                Send SQLDisconnect to hdbc
74853>>>>>>>            End
74853>>>>>>>>
74853>>>>>>>        End
74853>>>>>>>>
74853>>>>>>>        Send Destroy_Object to hoSQL
74854>>>>>>>        
74854>>>>>>>        Function_Return (Item_Count(Current_Object))
74855>>>>>>>    End_Function
74856>>>>>>>    
74856>>>>>>>    
74856>>>>>>>    Function SqlServerClientVersionName Integer iClientVersion  Returns String
74858>>>>>>>        
74858>>>>>>>        String  sSqlServerClientVersionName
74858>>>>>>>        
74858>>>>>>>        
74858>>>>>>>        Case Begin
74858>>>>>>>
74858>>>>>>>            Case (iClientVersion = SQLSERVER2019CLIENT)
74860>>>>>>>                Move SQLSERVER2019CLIENTNAME to sSqlServerClientVersionName
74861>>>>>>>                Case Break
74862>>>>>>>            
74862>>>>>>>            Case (iClientVersion = SQLSERVER2017CLIENT)
74865>>>>>>>                Move SQLSERVER2017CLIENTNAME to sSqlServerClientVersionName
74866>>>>>>>                Case Break
74867>>>>>>>                
74867>>>>>>>            Case (iClientVersion = SQLSERVER2016CLIENT)
74870>>>>>>>                Move SQLSERVER2016CLIENTNAME to sSqlServerClientVersionName
74871>>>>>>>                Case Break
74872>>>>>>>            
74872>>>>>>>            Case (iClientVersion = SQLSERVER2014CLIENT)
74875>>>>>>>                Move SQLSERVER2014CLIENTNAME to sSqlServerClientVersionName
74876>>>>>>>                Case Break
74877>>>>>>>            
74877>>>>>>>            Case (iClientVersion = SQLSERVER2012CLIENT)
74880>>>>>>>                Move SQLSERVER2012CLIENTNAME to sSqlServerClientVersionName
74881>>>>>>>                Case Break
74882>>>>>>>            
74882>>>>>>>            Case (iClientVersion = SQLSERVER2008CLIENT)
74885>>>>>>>                Move SQLSERVER2008CLIENTNAME to sSqlServerClientVersionName
74886>>>>>>>                Case Break
74887>>>>>>>            
74887>>>>>>>            Case (iClientVersion = SQLSERVER2005CLIENT)
74890>>>>>>>                Move SQLSERVER2005CLIENTNAME to sSqlServerClientVersionName
74891>>>>>>>                Case Break
74892>>>>>>>            
74892>>>>>>>            Case (iClientVersion = SQLSERVER2000CLIENT)
74895>>>>>>>                Move SQLSERVER2000CLIENTNAME to sSqlServerClientVersionName
74896>>>>>>>                Case Break
74897>>>>>>>            
74897>>>>>>>            Case Else
74897>>>>>>>                Move (SFormat("%1 (version %2) ",SQLSERVERUNKNOWNCLIENTNAME,iClientVersion)) to sSqlServerClientVersionName
74898>>>>>>>                
74898>>>>>>>        Case End
74898>>>>>>>        
74898>>>>>>>        
74898>>>>>>>        Function_Return sSqlServerClientVersionName
74899>>>>>>>        
74899>>>>>>>    End_Function
74900>>>>>>>
74900>>>>>>>
74900>>>>>>>    Function SqlServerClientDriverName Integer iClientVersion  Returns String
74902>>>>>>>        
74902>>>>>>>        String  sSqlServerClientDriverName
74902>>>>>>>        
74902>>>>>>>        Case Begin
74902>>>>>>>
74902>>>>>>>            Case (iClientVersion = SQLSERVER2019CLIENT)
74904>>>>>>>                Move SQLSERVER2019DRVRSTR to sSqlServerClientDriverName
74905>>>>>>>                Case Break
74906>>>>>>>
74906>>>>>>>            Case (iClientVersion = SQLSERVER2017CLIENT)
74909>>>>>>>                Move SQLSERVER2017DRVRSTR to sSqlServerClientDriverName
74910>>>>>>>                Case Break
74911>>>>>>>                
74911>>>>>>>            Case (iClientVersion = SQLSERVER2016CLIENT)
74914>>>>>>>                Move SQLSERVER2016DRVRSTR to sSqlServerClientDriverName
74915>>>>>>>                Case Break
74916>>>>>>>            
74916>>>>>>>            Case (iClientVersion = SQLSERVER2014CLIENT)
74919>>>>>>>                Move SQLSERVER2014DRVRSTR to sSqlServerClientDriverName
74920>>>>>>>                Case Break
74921>>>>>>>            
74921>>>>>>>            Case (iClientVersion = SQLSERVER2012CLIENT)
74924>>>>>>>                Move SQLSERVER2012DRVRSTR to sSqlServerClientDriverName
74925>>>>>>>                Case Break
74926>>>>>>>            
74926>>>>>>>            Case (iClientVersion = SQLSERVER2008CLIENT)
74929>>>>>>>                Move SQLSERVER2008DRVRSTR to sSqlServerClientDriverName
74930>>>>>>>                Case Break
74931>>>>>>>            
74931>>>>>>>            Case (iClientVersion = SQLSERVER2005CLIENT)
74934>>>>>>>                Move SQLSERVER2005DRVRSTR to sSqlServerClientDriverName
74935>>>>>>>                Case Break
74936>>>>>>>            
74936>>>>>>>            Case (iClientVersion = SQLSERVER2000CLIENT)
74939>>>>>>>                Move SQLSERVER2000DRVRSTR to sSqlServerClientDriverName
74940>>>>>>>                Case Break
74941>>>>>>>            
74941>>>>>>>            Case Else
74941>>>>>>>                Move SQLSERVER2000DRVRSTR to sSqlServerClientDriverName
74942>>>>>>>                
74942>>>>>>>        Case End
74942>>>>>>>        
74942>>>>>>>        
74942>>>>>>>        Function_Return sSqlServerClientDriverName
74943>>>>>>>        
74943>>>>>>>    End_Function
74944>>>>>>>    
74944>>>>>>>    
74944>>>>>>>End_Class
74945>>>>>>>
74945>>>>>>>
74945>>>>>
74945>>>>>Register_Function phoWorkspace Returns Handle
74945>>>>>Register_Function Help_filename Returns String
74945>>>>>Register_Function GetHelpFile Returns String
74945>>>>>Register_Function pbEnterKeyAsTabKey Returns Boolean
74945>>>>>
74945>>>>>// Do not call directly, use the wrapper function instead
74945>>>>>External_Function WNetGetUserW "WNetGetUserW" MPR.DLL ;    Pointer lpName ;    Pointer lpUser_Name ;    Pointer lpLength ;    Returns DWord
74946>>>>>
74946>>>>>// Wrapper Function WNetGetUser
74946>>>>>Function WNetGetUser Global ;    Pointer lpName ;    Pointer lpUser_Name ;    Pointer lpLength ;    Returns DWord
74948>>>>>    
74948>>>>>    DWord   dwResult     
74948>>>>>    UWide   uwName uwUserName
74948>>>>>    UWide   uwName uwUserName
74948>>>>>        
74948>>>>>    Send StringToWide lpName (&uwName)
74949>>>>>    
74949>>>>>    Send WideSetBuffer lpUser_Name lpLength (&uwUserName)    
74950>>>>>    
74950>>>>>    Move (WNetGetUserW (uwName.lpUText, uwUserName.lpUText, lpLength)) to dwResult
74951>>>>>    
74951>>>>>    Send WideToString (&uwUserName) lpUser_Name
74952>>>>>    
74952>>>>>    Function_Return dwResult
74953>>>>>End_Function
74954>>>>>
74954>>>>>//    This function reads the current username Of windows and returns that
74954>>>>>//    name or an text unknown user
74954>>>>>Function Network_User_Name for cDesktop Returns String
74956>>>>>    WString wName
74956>>>>>    Integer iRetval iLength
74956>>>>>    
74956>>>>>    Move 0 to iLength
74957>>>>>    Move (WNetGetUserW (0, 0, AddressOf (iLength))) to iRetval
74958>>>>>    Move (ZeroString(iLength)) to wName
74959>>>>>    Move (WNetGetUserW (0, AddressOf (wName), AddressOf (iLength))) to iRetval
74960>>>>>    
74960>>>>>    If (iRetval = NO_ERROR) Begin
74962>>>>>        Function_Return (CString (wName))
74963>>>>>    End
74963>>>>>>
74963>>>>>    
74963>>>>>    Function_Return "User Unknown"
74964>>>>>End_Function
74965>>>>>
74965>>>>>External_Function GlobalMemoryStatus "GlobalMemoryStatus" Kernel32.Dll Pointer lpsMemoryStatus Returns Integer
74966>>>>>
74966>>>>>External_Function GlobalMemoryStatusEx "GlobalMemoryStatusEx" Kernel32.Dll Pointer lpMemoryStatus Returns Integer
74967>>>>>
74967>>>>>Class SysinfoDisplay is a cTextEdit
74968>>>>>    Procedure Construct_Object
74970>>>>>        Forward Send Construct_Object
74972>>>>>        
74972>>>>>        Set Location to 6 6
74973>>>>>        Set Size to 110 255
74974>>>>>        Set Read_Only_State to True
74975>>>>>        Set pbWrap to False
74976>>>>>    End_Procedure
74977>>>>>    
74977>>>>>    //    This method will show the name Of the current directory in the system
74977>>>>>    //    information box
74977>>>>>    Procedure Show_Current_Directory
74979>>>>>        String sDir
74979>>>>>        
74979>>>>>        Get_Current_Directory to sDir
74980>>>>>        
74980>>>>>        Send AppendTextLn (SFormat (C_$CurrentDirectory, sDir))
74981>>>>>    End_Procedure
74982>>>>>    
74982>>>>>    Procedure Show_Windows_Directory
74984>>>>>        String sWindir
74984>>>>>        
74984>>>>>        Get_Windows_Directory to sWindir
74985>>>>>        
74985>>>>>        Send AppendTextLn (SFormat (C_$WindowsDirectory, sWindir))
74986>>>>>    End_Procedure
74987>>>>>    
74987>>>>>    Procedure Show_Current_User
74989>>>>>        Send AppendTextLn (SFormat (C_$NetworkUserName, Network_User_Name (Self)))
74990>>>>>    End_Procedure
74991>>>>>    
74991>>>>>    Procedure Show_Number_Format
74993>>>>>        Integer iFormat
74993>>>>>        String sFormatText
74993>>>>>        
74993>>>>>        Get_Attribute DF_THOUSANDS_SEPARATOR to iFormat
74996>>>>>        Move (Character (iFormat)) to sFormatText
74997>>>>>        Send AppendTextLn (SFormat (C_$ThousandsSeparator, sFormatText, iFormat))
74998>>>>>        
74998>>>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iFormat
75001>>>>>        Move (Character (iFormat)) to sFormatText
75002>>>>>        Send AppendTextLn (SFormat (C_$DecimalSeparator, sFormatText))
75003>>>>>    End_Procedure
75004>>>>>    
75004>>>>>    Procedure Show_Filelist_Name
75006>>>>>        String sFilename
75006>>>>>        
75006>>>>>        Get_Attribute DF_FILELIST_NAME to sFilename
75009>>>>>        
75009>>>>>        Send AppendTextLn (SFormat (C_$CurrentFilelist, sFilename))
75010>>>>>        Send AppendTextLn ""
75011>>>>>    End_Procedure
75012>>>>>    
75012>>>>>    Procedure Show_Lock_Delay
75014>>>>>        Integer iLockdelay
75014>>>>>        
75014>>>>>        Get_Attribute DF_LOCK_DELAY to iLockdelay
75017>>>>>        
75017>>>>>        Send AppendTextLn (SFormat (C_$DatabaseLockingDelay, iLockDelay))
75018>>>>>    End_Procedure
75019>>>>>    
75019>>>>>    Procedure Show_Lock_Timeout
75021>>>>>        Integer iLockTimeout
75021>>>>>        
75021>>>>>        Get_Attribute DF_LOCK_TIMEOUT to iLockTimeout
75024>>>>>        
75024>>>>>        Send AppendTextLn (SFormat (C_$DatabaseLockingTimeout, iLockTimeOut))
75025>>>>>    End_Procedure
75026>>>>>    
75026>>>>>    Procedure Show_Screen_Size
75028>>>>>        Integer iYscreensize iXscreensize
75028>>>>>        
75028>>>>>        Move (GetSystemMetrics (SM_CXSCREEN)) to iXscreensize
75029>>>>>        Move (GetSystemMetrics (SM_CYSCREEN)) to iYscreensize
75030>>>>>        
75030>>>>>        Send AppendTextLn (SFormat (C_$VideoResolution, iXscreensize, iYscreensize))
75031>>>>>    End_Procedure
75032>>>>>    
75032>>>>>    Procedure Show_Page_Size
75034>>>>>        Send AppendTextLn (SFormat (C_$PageEndFormFeed, Pageend, Pagefeed))
75035>>>>>    End_Procedure
75036>>>>>    
75036>>>>>    Procedure Show_Date
75038>>>>>        Date dToday
75038>>>>>        
75038>>>>>        Move (CurrentDateTime()) to  dToday
75039>>>>>        
75039>>>>>        Send AppendTextLn (SFormat (C_$CurrentSystemDate, String (dToday)))
75040>>>>>    End_Procedure
75041>>>>>    
75041>>>>>    Procedure Show_Date_Format
75043>>>>>        Integer iDateFormat
75043>>>>>        String sDateFormat
75043>>>>>        
75043>>>>>        Get_Attribute DF_DATE_FORMAT to iDateFormat
75046>>>>>        Case Begin
75046>>>>>            Case (iDateFormat = DF_DATE_USA)
75048>>>>>                Move C_$USA to sDateFormat
75049>>>>>                Case Break
75050>>>>>            Case (iDateFormat = DF_DATE_EUROPEAN)
75053>>>>>                Move C_$European to sDateFormat
75054>>>>>                Case Break
75055>>>>>            Case (iDateFormat = DF_DATE_MILITARY)
75058>>>>>                Move C_$Military to sDateFormat
75059>>>>>                Case Break
75060>>>>>            Case Else
75060>>>>>                Move C_$UnknownDateType to sDateFormat
75061>>>>>                Case Break
75062>>>>>        Case End
75062>>>>>        
75062>>>>>        Send AppendTextLn (SFormat (C_$DateFormat, sDateformat))
75063>>>>>    End_Procedure
75064>>>>>    
75064>>>>>    Procedure Show_Systemresources
75066>>>>>        tWinMemoryStatusEx MemoryStatusInfo
75066>>>>>        tWinMemoryStatusEx MemoryStatusInfo
75066>>>>>        Integer iRetval
75066>>>>>        
75066>>>>>        Move (SizeOfType (tWinMemoryStatusEx)) to MemoryStatusInfo.dwLength
75067>>>>>        Move (GlobalMemoryStatusEx (AddressOf (MemoryStatusInfo))) to iRetval
75068>>>>>        If (iRetval = 0) Begin
75070>>>>>            Move (ShowLastError ()) to iRetval
75071>>>>>        End
75071>>>>>>
75071>>>>>        
75071>>>>>        Send AppendTextLn (SFormat (C_$AvailableMemory, MemoryStatusInfo.ullTotalPhys))
75072>>>>>        Send AppendTextLn (SFormat (C_$MemoryUtilization, MemoryStatusInfo.dwMemoryLoad))
75073>>>>>        Send AppendTextLn (SFormat (C_$AvailablePhysicalMemory, Integer ( Real (MemoryStatusInfo.ullAvailPhys) / Real (MemoryStatusInfo.ullTotalPhys) * 100.0)))
75074>>>>>        Send AppendTextLn (SFormat (C_$AvailablePagefileSpace, Integer ( Real (MemoryStatusInfo.ullAvailPageFile) / Real (MemoryStatusInfo.ullTotalPageFile) * 100.0)))
75075>>>>>        Send AppendTextLn (SFormat (C_$AvailableVirtualMemory, Integer ( Real (MemoryStatusInfo.ullAvailVirtual) / Real (MemoryStatusInfo.ullTotalVirtual) * 100.0)))
75076>>>>>    End_Procedure
75077>>>>>    
75077>>>>>    Procedure Show_Registration
75079>>>>>        String sRegName
75079>>>>>        Integer iSN iMaxUsers
75079>>>>>        
75079>>>>>        Registration sRegName iSN
75080>>>>>>
75080>>>>>        
75080>>>>>        Get_Licensed_Max_Users to iMaxUsers
75081>>>>>        
75081>>>>>        Send AppendTextLn ""
75082>>>>>        Send AppendTextLn (SFormat (C_$Serial, iSN))
75083>>>>>        Send AppendTextLn (SFormat (C_$RegName, sRegName))
75084>>>>>        Send AppendTextLn (SFormat (C_$MaxNumUsers, iMaxUsers))
75085>>>>>    End_Procedure
75086>>>>>    
75086>>>>>    // If workspaces are used, we will send the message EnumerateWorkspaceData
75086>>>>>    // To the workspace object passing the an object and message To send back
75086>>>>>    // To this object. It is expected that the workspace object will send this
75086>>>>>    // message for every line Of information it wants displayed (passing the
75086>>>>>    // information To be displayed
75086>>>>>    Register_Procedure EnumerateWorkspaceData Handle hObjId Handle hmMessId
75086>>>>>    
75086>>>>>    Procedure Show_ServicePack
75088>>>>>        String sKey sVersionDescription sVersion
75088>>>>>        Handle hoRegistry
75088>>>>>        Boolean bExists bOpened
75088>>>>>        
75088>>>>>        Get Create (RefClass (cRegistry)) to hoRegistry
75089>>>>>        Set phRootKey of hoRegistry to HKEY_LOCAL_MACHINE
75090>>>>>        Set pfAccessRights of hoRegistry to KEY_READ
75091>>>>>        
75091>>>>>        Move C_DFVersionRegistryRoot to sKey
75092>>>>>        Get KeyExists of hoRegistry sKey to bExists
75093>>>>>        If (bExists) Begin
75095>>>>>            Get OpenKey of hoRegistry sKey to bOpened
75096>>>>>            If (bOpened) Begin
75098>>>>>                Get ValueExists of hoRegistry "CurrentVersionDescription" to bExists
75099>>>>>                If (bExists) Begin
75101>>>>>                    Get ReadString of hoRegistry "CurrentVersionDescription" to sVersionDescription
75102>>>>>                End
75102>>>>>>
75102>>>>>                
75102>>>>>                Get ValueExists of hoRegistry "CurrentVersion" to bExists
75103>>>>>                If (bExists) Begin
75105>>>>>                    Get ReadString of hoRegistry "CurrentVersion" to sVersion
75106>>>>>                End
75106>>>>>>
75106>>>>>                Send CloseKey of hoRegistry
75107>>>>>            End
75107>>>>>>
75107>>>>>        End
75107>>>>>>
75107>>>>>        Send Destroy of hoRegistry
75108>>>>>        
75108>>>>>        If (sVersionDescription <> "") Begin
75110>>>>>            Send AppendTextLn (sVersionDescription * "-" * sVersion)
75111>>>>>            Send AppendTextLn ""
75112>>>>>        End
75112>>>>>>
75112>>>>>    End_Procedure
75113>>>>>    
75113>>>>>    
75113>>>>>    Procedure Show_WorkspaceInformation
75115>>>>>        Integer hoWorkspace
75115>>>>>        
75115>>>>>        If (ghoApplication <> 0) Begin
75117>>>>>            Get phoWorkspace of ghoApplication to hoWorkspace
75118>>>>>            If (hoWorkspace <> 0) Begin
75120>>>>>                Send EnumerateWorkspaceData of hoWorkspace Self (Refproc (AppendTextLn))
75121>>>>>                Send AppendTextLn ""
75122>>>>>            End
75122>>>>>>
75122>>>>>        End
75122>>>>>>
75122>>>>>    End_Procedure
75123>>>>>    
75123>>>>>    // If connection ids are used, we will send the message EnumerateConnections
75123>>>>>    // to the connection manager object passing the an object and message to send
75123>>>>>    // back to this object. It is expected that the connection manager object will
75123>>>>>    // send this message for every line Of information it wants displayed (passing
75123>>>>>    // the information To be displayed
75123>>>>>    Register_Procedure EnumerateConnections Integer hObjId Integer hmMessId
75123>>>>>    
75123>>>>>    Procedure Show_ConnectionIdInformation
75125>>>>>        If (ghoConnection > 0) Begin
75127>>>>>            Send AppendTextLn ""
75128>>>>>            Send EnumerateConnections of ghoConnection Self (RefProc(AppendTextLn))
75129>>>>>        End
75129>>>>>>
75129>>>>>    End_Procedure
75130>>>>>    
75130>>>>>    Function VersionStr Integer iVer Integer iRev Integer iBld Returns String
75132>>>>>        Function_Return (String (iVer) - "." - String (iRev) - "." - String (iBld))
75133>>>>>    End_Function
75134>>>>>    
75134>>>>>    Procedure Show_Versions
75136>>>>>        Integer iVersion iRevision iBuild
75136>>>>>        
75136>>>>>        Version_Information iVersion iRevision iBuild
75138>>>>>        
75138>>>>>        Send AppendTextLn (SFormat (C_$RuntimeVersion, VersionStr(Self,iVersion,iRevision,iBuild) ))
75139>>>>>        Send AppendTextLn (SFormat (C_$PackageVersion, VersionStr(Self,PKG_VERSION, PKG_REVISION, PKG_BUILD) ))
75140>>>>>        Send AppendTextLn (SFormat (C_$FMACVersion, VersionStr(Self,FMAC_VERSION, FMAC_REVISION, FMAC_BUILD) ))
75141>>>>>    End_Procedure
75142>>>>>    
75142>>>>>    Procedure Show_Platform
75144>>>>>        Send AppendTextLn (SFormat (C_$Platform,"64-bit"))
75145>>>>>    End_Procedure
75146>>>>>    
75146>>>>>    Function CKRevisionNumber String sDriverID Returns String
75148>>>>>        Handle hoCLIHandler
75148>>>>>        Handle hoDFBtrDrvHandler
75148>>>>>        String sCKRevision
75148>>>>>        
75148>>>>>        
75148>>>>>        If (sDriverID = "MSSQLDRV" or sDriverID = "ODBC_DRV" or sDriverID = "DB2_DRV") Begin
75150>>>>>            Get Create (RefClass(cCLIHandler)) to hoCLIHandler
75151>>>>>            Set psDriverID of hoCLIHandler to sDriverID
75152>>>>>            Move (CKRevision(hoCLIHandler)) to sCKRevision
75153>>>>>            Send Destroy of hoCLIHandler
75154>>>>>        End
75154>>>>>>
75154>>>>>        Else Begin
75155>>>>>            If (sDriverID = "DFBTRDRV") Begin
75157>>>>>                Get Create (RefClass(cDFBtrDrvHandler)) to hoDFBtrDrvHandler
75158>>>>>                Set psDriverID of hoDFBtrDrvHandler to sDriverID
75159>>>>>                Move (CKRevision(hoDFBtrDrvHandler)) to sCKRevision
75160>>>>>                Send Destroy of hoDFBtrDrvHandler
75161>>>>>            End
75161>>>>>>
75161>>>>>        End
75161>>>>>>
75161>>>>>        
75161>>>>>        Function_Return sCKRevision
75162>>>>>    End_Function
75163>>>>>    
75163>>>>>    
75163>>>>>    Function IsDataAccessCK String sDriverID Returns Boolean
75165>>>>>        
75165>>>>>        If (sDriverID = "DATAFLEX") Begin
75167>>>>>            Function_Return False
75168>>>>>        End
75168>>>>>>
75168>>>>>        
75168>>>>>        Function_Return (sDriverID = "MSSQLDRV" or sDriverID = "ODBC_DRV" or sDriverID = "DB2_DRV" or sDriverID = "DFBTRDRV")
75169>>>>>    End_Function
75170>>>>>    
75170>>>>>    
75170>>>>>    Procedure Show_Drivers
75172>>>>>        String sCurrentDriver sRevNumber
75172>>>>>        String sLoadedDrivers sClientDriver
75172>>>>>        Integer iNumberOfDrivers iCount iClientVersion iMSSQLIndex
75172>>>>>        Boolean bOK
75172>>>>>        Handle hoMsqlDrv
75172>>>>>        
75172>>>>>        Move "" to sLoadedDrivers
75173>>>>>        Get_Attribute DF_NUMBER_DRIVERS to iNumberOfDrivers
75176>>>>>        For iCount from 1 to iNumberOfDrivers
75182>>>>>>
75182>>>>>            Get_Attribute DF_DRIVER_NAME of iCount to sCurrentDriver
75185>>>>>            If (sLoadedDrivers <> "") Begin
75187>>>>>                Move (Append (sLoadedDrivers, ", ")) to sLoadedDrivers
75188>>>>>            End
75188>>>>>>
75188>>>>>            Get IsDataAccessCK sCurrentDriver to bOK
75189>>>>>            If (bOK) Begin
75191>>>>>                If (sCurrentDriver = "MSSQLDRV") Begin
75193>>>>>                    Move iCount to iMSSQLIndex
75194>>>>>                End
75194>>>>>>
75194>>>>>                Get CKRevisionNumber sCurrentDriver to sRevNumber
75195>>>>>                // if mssqldrv, show the client number
75195>>>>>                Move (sCurrentDriver * "(" + sRevNumber + ")") to sCurrentDriver
75196>>>>>            End
75196>>>>>>
75196>>>>>            Move (Append (sLoadedDrivers, sCurrentDriver)) to sLoadedDrivers
75197>>>>>        Loop
75198>>>>>>
75198>>>>>        Send AppendTextLn (SFormat (C_$DatabaseDriver, sLoadedDrivers))
75199>>>>>        If (iMSSQLIndex>0) Begin
75201>>>>>            Get_Attribute DF_DRIVER_SQLSERVER_CLIENT_VERSION of iMSSQLIndex to iClientVersion
75204>>>>>            Get Create (RefClass(cMSSQLHandler)) to hoMsqlDrv
75205>>>>>            Get SqlServerClientVersionName of hoMsqlDrv iClientVersion to sClientDriver
75206>>>>>            Send Destroy of hoMsqlDrv
75207>>>>>            Send AppendTextLn (SFormat("MSSQLDRV Client Version: %1", sClientDriver))
75208>>>>>        End
75208>>>>>>
75208>>>>>    End_Procedure
75209>>>>>    
75209>>>>>    Procedure Show_HelpFile
75211>>>>>        String sHelpFile
75211>>>>>        Integer eHelpType
75211>>>>>        
75211>>>>>        If (ghoApplication <> 0) Begin
75213>>>>>            Get peHelpType of ghoApplication to eHelpType
75214>>>>>            If (eHelpType = htHtmlHelp and ghoHtmlHelp) Begin
75216>>>>>                Get GetHelpFile of ghoHtmlHelp to sHelpFile
75217>>>>>            End
75217>>>>>>
75217>>>>>            Else If (eHelpType = htWinHelp and Help_object_id) Begin
75220>>>>>                Get Help_filename of Help_object_id to sHelpFile
75221>>>>>            End
75221>>>>>>
75221>>>>>            Else Begin
75222>>>>>                Move C_$ThereIsNoHelpfileDefined to sHelpFile
75223>>>>>            End
75223>>>>>>
75223>>>>>            
75223>>>>>            Send AppendTextLn ""
75224>>>>>            Send AppendTextLn (SFormat (C_$HelpFile, sHelpFile))
75225>>>>>        End
75225>>>>>>
75225>>>>>    End_Procedure
75226>>>>>    
75226>>>>>    Procedure Show_EnterAsTab
75228>>>>>        Boolean bEnterKeyAsTabKey
75228>>>>>        String sText
75228>>>>>        
75228>>>>>        If (ghoApplication <> 0) Begin
75230>>>>>            Get pbEnterKeyAsTabKey of ghoApplication to bEnterKeyAsTabKey
75231>>>>>            If (bEnterKeyAsTabKey) Begin
75233>>>>>                Move "True" to sText
75234>>>>>            End
75234>>>>>>
75234>>>>>            Else Begin
75235>>>>>                Move "False" to sText
75236>>>>>            End
75236>>>>>>
75236>>>>>            Send AppendTextLn (SFormat (C_$EnterKeyNavForward, sText))
75237>>>>>        End
75237>>>>>>
75237>>>>>    End_Procedure
75238>>>>>    
75238>>>>>    //    During activation we will remove the old information and add the newly
75238>>>>>    //    found systeminformation
75238>>>>>    Procedure Add_Focus Integer hoRoot
75240>>>>>        Forward Send Add_Focus hoRoot
75242>>>>>        
75242>>>>>        Send Delete_Data
75243>>>>>        
75243>>>>>        Set Changed_State to False
75244>>>>>        Set Read_Only_State to True
75245>>>>>        
75245>>>>>        Send Show_ServicePack
75246>>>>>        Send Show_Versions
75247>>>>>        Send Show_Platform
75248>>>>>        Send Show_Drivers
75249>>>>>        If (ghoConnection <> 0) Begin
75251>>>>>            Send Show_ConnectionIdInformation
75252>>>>>        End
75252>>>>>>
75252>>>>>        Send Show_HelpFile
75253>>>>>        Send Show_Current_Directory
75254>>>>>        Send Show_Filelist_Name
75255>>>>>        If (ghoApplication <> 0) Begin
75257>>>>>            Send Show_WorkSpaceInformation // added To show WS info
75258>>>>>        End
75258>>>>>>
75258>>>>>        Send Show_Current_User
75259>>>>>        Send Show_Windows_Directory
75260>>>>>        Send Show_Screen_Size
75261>>>>>        Send Show_Page_Size
75262>>>>>        Send Show_EnterAsTab
75263>>>>>        Send Show_Number_Format
75264>>>>>        Send Show_Date_Format
75265>>>>>        Send Show_Lock_Delay
75266>>>>>        Send Show_Lock_Timeout
75267>>>>>        Send Show_Date
75268>>>>>        Send Show_Systemresources
75269>>>>>        Send Show_Registration
75270>>>>>        Send Beginning_of_Data
75271>>>>>        
75271>>>>>        Set Icon to 'default.ico'
75272>>>>>    End_Procedure
75273>>>>>End_Class
75274>>>>>
75274>>>>>Class SysInfoDialog is a ModalPanel
75275>>>>>    Procedure Construct_Object
75277>>>>>        Forward Send Construct_Object
75279>>>>>        
75279>>>>>        Set Label to C_$SystemInformation
75280>>>>>        Set Size to 140 267
75281>>>>>        Set piMinSize to 140 267
75282>>>>>        Set Locate_Mode to CENTER_ON_SCREEN
75283>>>>>        Set Border_Style to Border_Thick
75284>>>>>        
75284>>>>>        Object oSysinfoDisplay is a SysInfoDisplay
75286>>>>>            Set peAnchors to anAll
75287>>>>>        End_Object
75288>>>>>        
75288>>>>>        Object oCloseButton is a Button
75290>>>>>            Set Label to C_$Close
75291>>>>>            Set Location to 120 210
75292>>>>>            Set Message 0 to (Refproc (Close_Panel))
75293>>>>>            Set Default_State to True
75294>>>>>            Set peAnchors to anBottomRight
75295>>>>>        End_Object
75296>>>>>        
75296>>>>>        On_Key kCancel Send Close_Panel
75297>>>>>    End_Procedure
75298>>>>>End_Class
75299>>>>>
75299>>>>>Class AboutDialog is a ModalPanel
75300>>>>>    Procedure Construct_Object
75302>>>>>        String sVdfRootDir
75302>>>>>        
75302>>>>>        Forward Send Construct_Object
75304>>>>>        
75304>>>>>        Set Label to C_$About
75305>>>>>        Set Size to 89 282
75306>>>>>        Set Locate_Mode to CENTER_ON_SCREEN
75307>>>>>        
75307>>>>>        Object oSysInfoDialog is a SysInfoDialog
75309>>>>>        End_Object
75310>>>>>        
75310>>>>>        Object oBox is a Container3d
75312>>>>>            Set Border_Style to Border_StaticEdge
75313>>>>>            Set Size to 63 272
75314>>>>>            Set Location to 4 5
75315>>>>>            
75315>>>>>            Object oAboutGraphic is a BitmapContainer
75317>>>>>                Set Border_Style to Border_None
75318>>>>>                Set Bitmap_Style to Bitmap_Center
75319>>>>>                Set Size to 48 48
75320>>>>>                Set Location to 7 2
75321>>>>>            End_Object
75322>>>>>            
75322>>>>>            Object oProductName is a TextBox
75324>>>>>                Set Label to C_$ProductName
75325>>>>>                Set Size to 10 45
75326>>>>>                Set Location to 8 53
75327>>>>>            End_Object
75328>>>>>            
75328>>>>>            Object oVersion is a TextBox
75330>>>>>                Set Label to C_$Version
75331>>>>>                Set Size to 10 25
75332>>>>>                Set Location to 21 53
75333>>>>>            End_Object
75334>>>>>            
75334>>>>>            Object oCopyright is a TextBox
75336>>>>>                Set Label to C_$Copyright
75337>>>>>                Set Size to 10 31
75338>>>>>                Set Location to 34 53
75339>>>>>            End_Object
75340>>>>>            
75340>>>>>            Object oAuthor is a TextBox
75342>>>>>                Set Label to C_$Author
75343>>>>>                Set Size to 10 22
75344>>>>>                Set Location to 46 53
75345>>>>>            End_Object
75346>>>>>        End_Object
75347>>>>>        
75347>>>>>        Object oOKButton is a Button
75349>>>>>            On_Item C_$OK Send Close_Panel
75350>>>>>            Set Size to 14 50
75351>>>>>            Set Location to 71 227
75352>>>>>        End_Object
75353>>>>>        
75353>>>>>        Object oSysInfoButton is a Button
75355>>>>>            On_Item C_$SystemInfo Send Show_Sysinfo
75356>>>>>            Set Size to 14 50
75357>>>>>            Set Location to 71 171
75358>>>>>        End_Object
75359>>>>>        
75359>>>>>        On_Key Kcancel Send KeyAction of oOKButton
75360>>>>>        
75360>>>>>        Set Logo to "DacAbout.bmp"  // square bitmaps Of 42x42 work best
75361>>>>>    End_Procedure
75362>>>>>    
75362>>>>>    Procedure Set ProductName String sProductName
75364>>>>>        Set Label of oProductName to sProductName
75365>>>>>    End_Procedure
75366>>>>>    
75366>>>>>    Procedure Set Version String sVersion
75368>>>>>        Set Label of oVersion to sVersion
75369>>>>>    End_Procedure
75370>>>>>    
75370>>>>>    Procedure Set Copyright String sCopyright
75372>>>>>        Set Label of oCopyright to sCopyright
75373>>>>>    End_Procedure
75374>>>>>    
75374>>>>>    Procedure Set Author String sAuthor
75376>>>>>        Set Label of oAuthor to sAuthor
75377>>>>>    End_Procedure
75378>>>>>    
75378>>>>>    Procedure Set Logo String sLogo
75380>>>>>        // square bitmaps Of 42x42 work best
75380>>>>>        Set Bitmap of oAboutGraphic to sLogo
75381>>>>>    End_Procedure
75382>>>>>    
75382>>>>>    Procedure Show_Sysinfo
75384>>>>>        Send Popup_Modal of oSysinfoDialog
75385>>>>>    End_Procedure
75386>>>>>    
75386>>>>>    Procedure End_Construct_Object
75388>>>>>        Handle hoVersionInfo
75388>>>>>        Boolean bIncluded
75388>>>>>        Integer iMajor iMinor iRelease iBuild
75388>>>>>        String sLabel
75388>>>>>        
75388>>>>>        Get Label of oVersion to sLabel
75389>>>>>        If (sLabel = C_$VERSION) Begin
75391>>>>>            // set it To the version info Of the program, if available
75391>>>>>            If (ghoApplication <> 0) Begin
75393>>>>>                Get phoVersionInfo of ghoApplication to hoVersionInfo
75394>>>>>                If (hoVersionInfo <> 0) Begin
75396>>>>>                    Get pbIncluded of hoVersionInfo to bIncluded
75397>>>>>                    If (bIncluded) Begin
75399>>>>>                        Get piVersionMajor of hoVersionInfo to iMajor
75400>>>>>                        Get piVersionMinor of hoVersionInfo to iMinor
75401>>>>>                        Get piVersionRelease of hoVersionInfo to iRelease
75402>>>>>                        Get piVersionBuild of hoVersionInfo to iBuild
75403>>>>>                        Move (SFormat (C_$VERSION + ": %1.%2.%3.%4", iMajor, iMinor, iRelease, iBuild)) to sLabel
75404>>>>>                        Set Version to sLabel
75405>>>>>                    End
75405>>>>>>
75405>>>>>                End
75405>>>>>>
75405>>>>>            End
75405>>>>>>
75405>>>>>        End
75405>>>>>>
75405>>>>>        
75405>>>>>        Forward Send End_Construct_Object
75407>>>>>    End_Procedure
75408>>>>>End_Class
75409>>>
75409>>>//  This is the default message. It is expected that you will
75409>>>//  create your own message to override this
75409>>>Procedure Activate_About
75412>>>    Send DoAbout "" "" "" "" ""
75413>>>End_Procedure
75414>>>
75414>>>//  It is expected that you will send this message (most
75414>>>//  likely from Activate_About. This creates an about object, activates it
75414>>>//  and destroys it when done. It is not exepected that you will augment this.
75414>>>Procedure DoAbout String sTitle String sVersion String sCopyRight String sAuthor String sBitmap
75417>>>    Integer hoObj hoMain
75417>>>    
75417>>>    // create object
75417>>>    Object About is an AboutDialog
75419>>>        // if no title passed use the label of the main panel
75419>>>        // (if a main panel exists).
75419>>>        If (sTitle = "") Begin
75421>>>            Get Main_Window of desktop to hoMain
75422>>>            If hoMain ;                Get Label of hoMain to sTitle
75425>>>        End
75425>>>>
75425>>>        Set productname to sTitle
75426>>>        Set version     to sVersion
75427>>>        Set copyright   to sCopyRight
75428>>>        Set author      to sAuthor
75429>>>        If (sBitmap <> '') ;            Set logo to sBitMap // square bitmaps of 42x42 work best
75432>>>        Move Self to hoObj // object Id
75433>>>    End_Object
75434>>>    Send Popup   of hoObj    // popup the about object
75435>>>    Send Destroy of hoObj // when done, it will be destroyed
75436>>>End_Procedure
75437>>>
75437>        Use ChatGPTTest.vw
Including file: ChatGPTTest.vw    (C:\Projects\ChatGPTAPI\AppSrc\ChatGPTTest.vw)
75437>>>Use Windows.pkg
75437>>>Use DFClient.pkg
75437>>>Use cTextEdit.pkg
75437>>>Use cJsonObject.pkg
75437>>>Use cCJGrid.pkg
75437>>>Use cCJGridColumnRowIndicator.pkg
Including file: cCJGridColumnRowIndicator.pkg    (C:\Program Files\DataFlex 23.0\Pkg\cCJGridColumnRowIndicator.pkg)
75437>>>>>Use cCJGridColumn.pkg
75437>>>>>
75437>>>>>Class cCJGridColumnRowIndicator is a cCJGridColumn
75438>>>>>    
75438>>>>>    Procedure Construct_Object
75440>>>>>        Forward Send Construct_Object
75442>>>>>        
75442>>>>>        Property Integer piImage 0
75443>>>>>        
75443>>>>>        Set psCaption to ""
75444>>>>>        Set piWidth to 20
75445>>>>>        Set pbResizable to False
75446>>>>>        Set pbEditable to False
75447>>>>>        Set pbFocusable to False
75448>>>>>        Set pbAllowDrag to False
75449>>>>>        Set psToolTip to "Row Indicator"
75450>>>>>    End_Procedure
75451>>>>>    
75451>>>>>    Procedure OnCreateColumn
75453>>>>>        Integer iImage
75453>>>>>        Delegate Get AddImage "GridColumnRowIndicator.bmp" 0 to iImage
75455>>>>>        Set piImage to iImage
75456>>>>>    End_Procedure
75457>>>>>    
75457>>>>>    Procedure OnSetDisplayMetrics Handle hoGridItemMetrics Integer iRow String ByRef sValue
75459>>>>>        Integer iImage iFocusedRow
75459>>>>>        Handle hoDataSource
75459>>>>>        
75459>>>>>        Get phoDataSource to hoDataSource
75460>>>>>        Get SelectedRow of hoDataSource to iFocusedRow
75461>>>>>        Move -1 to iImage
75462>>>>>        If (iRow = iFocusedRow) Begin
75464>>>>>            Get piImage to iImage
75465>>>>>            Set ComItemIcon of hoGridItemMetrics to iImage
75466>>>>>        End
75466>>>>>>
75466>>>>>    End_Procedure
75467>>>>>    
75467>>>>>End_Class
75468>>>Use cCJGridColumn.pkg
75468>>>
75468>>>Deferred_View Activate_oChatGPTTest for ;Object oChatGPTTest is a dbView
75493>>>    
75493>>>    Property String   psChatGPTBasePath "v1/"
75495>>>    
75495>>>    Property String[] pasSpeakers
75497>>>    Property String[] pasMessages
75499>>>    Property String[] pasTimes
75501>>>    
75501>>>    Set Border_Style to Border_Thick
75502>>>    Set Size to 340 628
75503>>>    Set Location to 2 2
75504>>>    Set Label to "ChatGPT Test View"
75505>>>    
75505>>>    Procedure AddToHistory String sSpeaker String sMsg
75508>>>        String[]   asSpeakers asMsgs asTimes
75511>>>        
75511>>>        Get pasSpeakers to asSpeakers
75512>>>        Get pasMessages to asMsgs
75513>>>        Get pasTimes    to asTimes
75514>>>        
75514>>>        Move sSpeaker               to asSpeakers[-1]
75515>>>        Move sMsg                   to asMsgs[-1]
75516>>>        Move (CurrentDateTime())    to asTimes[-1]
75517>>>        
75517>>>        Set pasSpeakers to asSpeakers
75518>>>        Set pasMessages to asMsgs
75519>>>        Set pasTimes    to asTimes
75520>>>        
75520>>>        Send ReloadHist of oHistory
75521>>>    End_Procedure
75522>>>    
75522>>>    Procedure AskChatGPT
75525>>>        Handle  hoBody hoMsg hoMsgs hoResp
75525>>>        String  sAsk sResp sMod
75525>>>        
75525>>>        Set Value of oResponse to ""
75526>>>        
75526>>>        Get Value of oAsk to sAsk
75527>>>        If (sAsk = "") ;            Procedure_Return
75530>>>        
75530>>>        Get Value of oModels to sMod
75531>>>        
75531>>>        If (sMod = "") Begin
75533>>>            Send Info_Box "Please select a model to use (gpt-3.5-turbo for instance)" "Select Model"
75534>>>            Procedure_Return
75535>>>        End
75535>>>>
75535>>>        
75535>>>        Send AddToHistory "You" sAsk
75536>>>        
75536>>>        Get Create (RefClass(cJsonObject)) to hoMsg
75537>>>        Send InitializeJsonType of hoMsg jsonTypeObject
75538>>>        Send SetMemberValue of hoMsg "role" jsonTypeString "user"
75539>>>        Send SetMemberValue of hoMsg "content" jsonTypeString (Trim(sAsk))
75540>>>        
75540>>>        Get Create (RefClass(cJsonObject)) to hoMsgs
75541>>>        Send InitializeJsonType of hoMsgs jsonTypeArray
75542>>>        Send AddMember of hoMsgs hoMsg
75543>>>        Send Destroy of hoMsg
75544>>>        
75544>>>        Get Create (RefClass(cJsonObject)) to hoBody
75545>>>        Send InitializeJsonType of hoBody jsonTypeObject
75546>>>        Send SetMemberValue of hoBody "model" jsonTypeString (Trim(sMod))
75547>>>        Send SetMember of hoBody "messages" hoMsgs
75548>>>        Send Destroy of hoMsgs
75549>>>        Send SetMemberValue of hoBody "temperature" jsonTypeDouble 0.7
75550>>>        
75550>>>        String sTest
75550>>>        Set peWhiteSpace of hoBody to jpWhitespace_Pretty
75551>>>        Get Stringify of hoBody to sTest
75552>>>        
75552>>>        Get MakeJsonCall of oHttp "POST" (psChatGPTBasePath(Self) + "chat/completions") "" hoBody to hoResp
75553>>>        
75553>>>        If hoResp Begin
75555>>>            Move (JsonValueAtPath(hoResp, "choices[0].message.content")) to sResp
75556>>>            Send Destroy of hoResp
75557>>>            Set Value of oResponse to sResp
75558>>>            Send AddToHistory "ChatGPT" sResp
75559>>>        End
75559>>>>
75559>>>        Else Begin
75560>>>            Send Info_Box ("Error status" * String(piError(oHttp(Self))) + ":" * psError(oHttp(Self))) "ChatGPT Error"
75561>>>            Send AddToHistory "Program" (psError(oHttp(Self)))
75562>>>        End
75562>>>>
75562>>>        
75562>>>    End_Procedure
75563>>>
75563>>>    Object oModels is a ComboForm
75565>>>        Set Size to 12 100
75566>>>        Set Location to 4 521
75567>>>        Set Label to "ChatGPT Model to use:"
75568>>>        Set Label_Justification_Mode to JMode_Right
75569>>>        Set Label_Col_Offset to 5
75570>>>        Set peAnchors to anTopRight
75571>>>    
75571>>>        Procedure Combo_Fill_List
75574>>>            Handle  hoMods hoData
75574>>>            Integer i iMax
75574>>>            
75574>>>            Get MakeJsonCall of oHttp "GET" (psChatGPTBasePath(Self) + "models") "" 0 to hoMods
75575>>>            
75575>>>            If hoMods Begin
75577>>>                
75577>>>                If (HasMember(hoMods, "data")) Begin
75579>>>                    Get Member of hoMods "data" to hoData
75580>>>                    Get MemberCount of hoData to iMax
75581>>>                    Decrement iMax
75582>>>                    
75582>>>                    For i from 0 to iMax
75588>>>>
75588>>>                        Send Combo_Add_Item (JsonValueAtPath(hoData, "[" + String(i) + "]id"))
75589>>>                    Loop
75590>>>>
75590>>>                    
75590>>>                    Send Destroy of hoData
75591>>>                End
75591>>>>
75591>>>                
75591>>>                Send Destroy of hoMods
75592>>>            End
75592>>>>
75592>>>            
75592>>>            Set Value to "gpt-3.5-turbo"
75593>>>        End_Procedure
75594>>>      
75594>>>    End_Object
75595>>>
75595>>>    Object oAsk is a cTextEdit
75597>>>        Set Size to 36 554
75598>>>        Set Location to 28 10
75599>>>        Set Label to "Ask ChatGPT something:"
75600>>>        Set peAnchors to anTopLeftRight
75601>>>    End_Object
75602>>>
75602>>>    Object oSendBtn is a Button
75604>>>        Set Location to 28 571
75605>>>        Set Label to "Send"
75606>>>        Set peAnchors to anTopRight
75607>>>    
75607>>>        Procedure OnClick
75610>>>            Send AskChatGPT
75611>>>        End_Procedure
75612>>>    
75612>>>    End_Object
75613>>>
75613>>>    Object oClearBtn is a Button
75615>>>        Set Location to 46 571
75616>>>        Set Label to "Clear"
75617>>>        Set peAnchors to anTopRight
75618>>>    
75618>>>        Procedure OnClick
75621>>>            Set Value of oAsk to ""
75622>>>        End_Procedure
75623>>>    
75623>>>    End_Object
75624>>>
75624>>>    Object oResponse is a cTextEdit
75626>>>        Set Size to 128 610
75627>>>        Set Location to 77 10
75628>>>        Set Label to "ChatGPT replied:"
75629>>>        Set peAnchors to anAll
75630>>>    End_Object
75631>>>
75631>>>    Object oHistText is a TextBox
75633>>>        Set Size to 9 25
75634>>>        Set Location to 210 10
75635>>>        Set Label to "History:"
75636>>>        Set peAnchors to anBottomLeft
75637>>>    End_Object
75638>>>
75638>>>    Object oHistory is a cCJGrid
75640>>>        Set Size to 65 611
75641>>>        Set Location to 220 10
75642>>>        Set peAnchors to anBottomLeftRight
75643>>>        Set pbReadOnly to True
75644>>>
75644>>>        Object oCJGridColumnRowIndicator1 is a cCJGridColumnRowIndicator
75646>>>        End_Object
75647>>>
75647>>>        Object oDateTime is a cCJGridColumn
75649>>>            Set piWidth to 50
75650>>>            Set psCaption to "Time"
75651>>>        End_Object
75652>>>        
75652>>>        Object oSpeaker is a cCJGridColumn
75654>>>            Set piWidth to 20
75655>>>            Set psCaption to "Speaker"
75656>>>        End_Object
75657>>>
75657>>>        Object oMessage is a cCJGridColumn
75659>>>            Set piWidth to 350
75660>>>            Set psCaption to "Message"
75661>>>        End_Object
75662>>>
75662>>>        Procedure ReloadHist
75665>>>            tDataSourceRow[] atRows
75665>>>            tDataSourceRow[] atRows
75666>>>            Integer    iSpkCol iMsgCol iTimeCol i iMax
75666>>>            String[]   asSpeakers asMsgs asTimes
75669>>>            
75669>>>            Get pasSpeakers to asSpeakers
75670>>>            Get pasMessages to asMsgs
75671>>>            Get pasTimes    to asTimes
75672>>>            
75672>>>            Get piColumnID of oSpeaker  to iSpkCol
75673>>>            Get piColumnID of oMessage  to iMsgCol
75674>>>            Get piColumnID of oDateTime to iTimeCol
75675>>>            
75675>>>            Move (SizeOfArray(asSpeakers) - 1) to iMax
75676>>>            
75676>>>            For i from 0 to iMax
75682>>>>
75682>>>                Move asTimes[iMax - i]    to atRows[i].sValue[iTimeCol]
75683>>>                Move asSpeakers[iMax - i] to atRows[i].sValue[iSpkCol]
75684>>>                Move asMsgs[iMax - i]     to atRows[i].sValue[iMsgCol]
75685>>>            Loop
75686>>>>
75686>>>            
75686>>>            Send InitializeData atRows
75687>>>            Send MoveToFirstRow    
75688>>>        End_Procedure
75689>>>        
75689>>>        Procedure OnRowChanged Integer iOldRow Integer iNewSelectedRow
75692>>>            String[] asSpeakers asMsgs asTimes
75695>>>            Integer  iMax i
75695>>>            
75695>>>            Get pasSpeakers to asSpeakers
75696>>>            Get pasMessages to asMsgs
75697>>>            Get pasTimes    to asTimes
75698>>>            Move (SizeOfArray(asSpeakers) - 1) to iMax
75699>>>            Move (iMax - iNewSelectedRow) to i
75700>>>            
75700>>>            Set Value of oMsgContent to (Trim(asSpeakers[i]) * ;                                        "(at" * Trim(asTimes[i] + "):" * ;                                        Trim(asMsgs[i])))
75701>>>        End_Procedure
75702>>>        
75702>>>    End_Object
75703>>>
75703>>>    Object oMsgText is a TextBox
75705>>>        Set Size to 9 29
75706>>>        Set Location to 287 10
75707>>>        Set Label to "Message:"
75708>>>        Set peAnchors to anBottomLeft
75709>>>    End_Object
75710>>>
75710>>>    Object oMsgContent is a cTextEdit
75712>>>        Set Size to 40 611
75713>>>        Set Location to 297 10
75714>>>        Set peAnchors to anBottomLeftRight
75715>>>    End_Object
75716>>>
75716>>>Cd_End_Object
75718>>>>
75718>
75718>        Procedure Activate_About
75721>            Send DoAbout "" "" "" "" ""
75722>        End_Procedure
75723>
75723>    End_Object
75724>
75724>End_Object
75725>
75725>Send Activate_oChatGPTTest of (oClientArea(oMain))
75726>Start_UI
75727>
Summary
Memory Available: 18093527040
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 43506
Total Resources: 0
Total Commands : 75726
Total Windows  : 0
Total Pages    : 0
Static Data    : 546723
Message area   : 525137
Total Blocks   : 28449
